## Process this file with automake to produce Makefile.in

noinst_LTLIBRARIES = libcon.la

libcon_la_SOURCES = \
 $(F_ROUTINES) $(C_ROUTINES) $(F_GEN_FILES) $(INCLUDE_FILES)

F_ROUTINES = \
 con_afhir.f con_angdc.f con_bitpx.f con_btypc.f con_caux.f con_caxes.f \
 con_ccpy.f con_cnlim.f con_d2nft.f con_dst2n.f con_faind.f con_fkeyc.f \
 con_ffrmt.f con_fill.f con_fitax.f con_ftype.f con_gexch.f con_gexrm.f \
 con_ghistd.f con_gkeyc.f con_gslic.f con_hstfd.f \
 con_laxis.f con_lnear.f con_mandh.f con_move.f con_ndfcm.f con_mxmnd.f \
 con_pcard.f con_pfith.f con_rgasp.f con_sclof.f con_qsrtr.f \
 con_raux.f con_raxes.f con_rgndf.f con_rccc.f con_rcpy.f con_saxis.f \
 con_sphea.f con_sgdig.f con_spcpy.f con_sphst.f \
 con_trcha.f con_typsz.f con_vaxis.f con_vcorr.f con_wfman.f con_wcspx.f \
 con_wgasp.f con_wgrid.f con_wrpgm.f con_wrtif.f

C_ROUTINES = con_cclos.c con_copen.c con_cwrit.c con_cwri2.c \
 bit_andub_c.c

GEN_ROUTINES = $(DR_GEN_ROUTINES) $(WR_GEN_ROUTINES) $(DIR_GEN_ROUTINES) \
 $(DRLI_GEN_ROUTINES) $(N_GEN_ROUTINES) $(DL_GEN_ROUTINES) \
 $(WIR_GEN_ROUTINES) $(I_GEN_ROUTINES) $(D_GEN_ROUTINES)

F_GEN_FILES = $(DR_GEN_ROUTINES:.gen=.f) $(WR_GEN_ROUTINES:.gwr=.f) \
 $(DIR_GEN_ROUTINES:.gdir=.f) $(DRLI_GEN_ROUTINES:.gdrli=.f) \
 $(N_GEN_ROUTINES:.gn=.f) $(DL_GEN_ROUTINES:.gdl=.f) \
 $(WIR_GEN_ROUTINES:.gwir=.f) $(I_GEN_ROUTINES:.gi=.f) $(D_GEN_ROUTINES:.gd=.f)

INCLUDE_FILES = DTACODES DYNAMIC_MEMORY HLPCMD

##  Double and real.
DR_GEN_ROUTINES = con_axbnx.gen con_axcox.gen con_axgvx.gen con_ssazx.gen \
 con_axlix.gen

##  Word and real.
WR_GEN_ROUTINES = con_cd2ix.gwr con_ci2dx.f

##  Double integer and real.
DIR_GEN_ROUTINES = con_iaffx.gdir con_oaffx.gdir con_prsax.gdir \
 con_trndx.gdir con_thrsx.gdir

##  Double, real, logical and integer.
DRLI_GEN_ROUTINES = con_fkeyx.gdrli con_gkeyx.gdrli

##  All numeric types.
N_GEN_ROUTINES = con_ifufx.gn con_iudax.gn con_ofufx.gn con_oudax.gn

##  Double and logical.
DL_GEN_ROUTINES = con_consx.gdl

##  Word, integer and real.
WIR_GEN_ROUTINES = con_chvax.gwir

##  Integer
I_GEN_ROUTINES = con_ekeyx.gi

##  Double
D_GEN_ROUTINES = con_fillx.gd

# Rules for generating Fortran from generic code.
GENERIC=@GENERIC@

.gen.f:
	$(GENERIC) -t rd $<

.gwr.f:
	$(LN_S) $< $(<:.gwr=.gen)
	$(GENERIC) -t wr $(<:.gwr=.gen)
	$(RM) $(<:.gwr=.gen)

.gdir.f:
	$(LN_S) $< $(<:.gdir=.gen)
	$(GENERIC) -t dir $(<:.gdir=.gen)
	$(RM) $(<:.gdir=.gen)

.gdrli.f:
	$(LN_S) $< $(<:.gdrli=.gen)
	$(GENERIC) -t drli $(<:.gdrli=.gen)
	$(RM) $(<:.gdrli=.gen)

.gn.f:
	$(LN_S) $< $(<:.gn=.gen)
	$(GENERIC) -t n $(<:.gn=.gen)
	$(RM) $(<:.gn=.gen)

.gdl.f:
	$(LN_S) $< $(<:.gdl=.gen)
	$(GENERIC) -t dl $(<:.gdl=.gen)
	$(RM) $(<:.gdl=.gen)

.gwir.f:
	$(LN_S) $< $(<:.gwir=.gen)
	$(GENERIC) -t wir $(<:.gwir=.gen)
	$(RM) $(<:.gwir=.gen)

.gi.f:
	$(LN_S) $< $(<:.gi=.gen)
	$(GENERIC) -t i $(<:.gi=.gen)
	$(RM) $(<:.gi=.gen)

.gd.f:
	$(LN_S) $< $(<:.gd=.gen)
	$(GENERIC) -t d $(<:.gd=.gen)
	$(RM) $(<:.gd=.gen)

##  The Fortran intermediary files should be cleaned away sometime.
##  Since they are distributed make this maintainer-clean.
MAINTAINERCLEANFILES = $(F_GEN_FILES)
