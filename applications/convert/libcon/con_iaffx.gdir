      SUBROUTINE CON_IAFF<T>( FD, EL, SKIP, RECLEN, A, STATUS )
*+
*  Name:
*     CON_IAFFx

*  Purpose:
*     Reads an array from an ASCII file.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL CON_IAFFx( FD, EL, SKIP, RECLEN, A, STATUS )

*  Description:
*     This routine reads a numeric array in character form from an
*     ASCII file, and converts it to numbers.  Array elements should be
*     separated by at least one space.  File records may be skipped
*     before transfter of the array occurs.

*  Arguments:
*     FD = INTEGER (Given)
*        File descriptor of the output ASCII file.
*     EL = INTEGER (Given)
*        Number of array elements to process.
*     SKIP = INTEGER (Given)
*        Number of records to be skipped before reading the array.
*     RECLEN = INTEGER (Given)
*        Maximum length of of record.  It must be in the range 1 to
*        32766.
*     A( EL ) = ? (Returned)
*        Output numeric array.
*     STATUS = INTEGER (Given and Returned)
*        The global status.

*  Notes:
*     -  There is a routine for integer and floating-point data types:
*     replace "x" in the routine name by I, D, or R as appropriate.  The
*     array returned from the routine must have the data type specified.
*     The limitation on other integer types is because there are no
*     conversion routines between them and character in the CHR library.

*  Prior Requirements:
*     The ASCII file must be open for read access.

*  Authors:
*     MJC: Malcolm J. Currie (STARLINK)
*     {enter_new_authors_here}

*  History:
*     1992 September 18 (MJC):
*        Original version.
*     1997 December 2 (MJC):
*        Pass an additional argument to set the maximum buffer for
*        efficiency when processing short records.
*     {enter_further_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-
      
*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants
      INCLUDE 'PRM_PAR'          ! Data-storage constants

*  Arguments Given:
      INTEGER FD
      INTEGER EL
      INTEGER SKIP
      INTEGER RECLEN

*  Arguments Returned:
      <TYPE> A( EL )

*  Status:
      INTEGER STATUS             ! Global status

*  Local Constants:
      INTEGER MAXLEN             ! Maximum length records that can be
                                 ! processed
      PARAMETER ( MAXLEN = 32766 )

*  Local Variables:
      CHARACTER * ( MAXLEN ) BUFFER ! Buffer for input records.
      INTEGER I                  ! Loop counter for file records
      INTEGER MAXREC             ! Effective maximum record length
      INTEGER NC                 ! Number of characters in value

*  Internal References:
      INCLUDE 'NUM_DEC_CVT'      ! NUM declarations for conversions
      INCLUDE 'NUM_DEF_CVT'      ! NUM definitions for conversions

*.

*  Check inherited global status.
      IF ( STATUS .NE. SAI__OK ) RETURN

*  Set the effective maximum record length.
      MAXREC = MIN( MAX( 1, RECLEN ), MAXLEN )

*  Skip records.
*  =============
      IF ( SKIP .GT. 0 ) THEN
         DO  I = 1, SKIP
            CALL FIO_READ( FD, BUFFER( :MAXREC ), NC, STATUS )
         END DO
      END IF

*  Copy values.
*  ============

*  Convert the value to a character string.  Note that all the integer
*  types use a single conversion-to-character routine in these
*  subroutines, and hence there are no versions for the other integer
*  data types.
      CALL CON_TRND<T>( FD, EL, MAXREC, A, STATUS )

      END
