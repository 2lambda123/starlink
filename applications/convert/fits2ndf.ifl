## FITS2NDF - Converts FITS files into NDFs

#+
#  Name:
#     FITS2NDF.IFL

#  Type of module:
#     ADAM A-task parameter interface.

#  Author:
#     MJC: Malcolm J. Currie (STARLINK)
#     DSB: David S. Berry (STARLINK)
#     AJC: Alan J. Chipperfield (STARLINK)
#     {enter_new_authors_here}

#  History:
#     1996 January 26 (MJC):
#	 Original version.
#     1997 March 11 (MJC):
#     	 Changed from GROUP types back to LITERAL.
#     18-DEC-1997 (DSB):
#        Added ENCODINGS.
#      4-APR-2000 (AJC):
#        Added EXTABLE.
#     31-AUG-2000 (AJC):
#        Added CONTAINER.
#     2006 April 7 (MJC):
#        Added TYPE.
#     {enter_further_changes_here}

#-

interface FITS2NDF

   helplib        'CONVERT_HELP:'

   parameter      CONTAINER        # Create a container file
      type        '_LOGICAL'
      prompt      'Create a container file?'
      vpath       'DEFAULT'
      default     FALSE
      helpkey     '*'
   endparameter

   parameter      ENCODINGS      # AST encodings for WCS components
      type        'LITERAL'
      vpath       'DEFAULT'
      ppath       'DEFAULT,CURRENT'
      prompt      'FITS keywords to use when creating NDF WCS components'
      helpkey     '*'
      default     !
   endparameter

   parameter      EXTABLE
      type        'FILENAME'
      vpath       'DEFAULT'
      ppath       'CURRENT,DEFAULT'
      prompt      'Table of extension specifiers'
      helpkey     '*'
      default     !
   endparameter

   parameter      FMTCNV         # Apply scale and zero
      position    3
      type        'LITERAL'
      vpath       'DEFAULT'
      ppath       'CURRENT,DYNAMIC'
      prompt      'Apply BSCALE and BZERO to data values in the FITS file(s)?'
      helpkey     '*'
      default     'TRUE'
   endparameter

   parameter      IN             # Input FITS file(s)
      position    1
      type        'LITERAL'
      access      'READ'
      vpath       'PROMPT'
      ppath       'GLOBAL,CURRENT'
      prompt      'Input FITS file(s)'
      helpkey     '*'
   endparameter

   parameter      LOGFILE        # Log-file name
      position    4
      type        'FILENAME'
      access      'READ'
      vpath       'DEFAULT'
      ppath       'CURRENT,DEFAULT'
      prompt      'Filename to store FITS headers'
      default     !
      helpkey     '*'
   endparameter

   parameter      OUT            # Output NDF(s)
      position    2
      type        'LITERAL'
      access      'WRITE'
      vpath       'PROMPT'
      ppath       'CURRENT'
# Omit output association until wildcards are commonly accepted.
#     association '->GLOBAL.DATA_ARRAY'
      prompt      'Output NDF data structure(s)'
      helpkey     '*'
   endparameter

   parameter      PROEXTS        # Propagate the FITS-file's extensions
      type        '_LOGICAL'
      prompt      'Propagate the extensions of the FITS file?'
      vpath       'DEFAULT'
      default     TRUE
      helpkey     '*'
   endparameter

   parameter      PROFITS        # Propagate the FITS headers 
      type        '_LOGICAL'
      prompt      'Create a NDF extension called FITS to store the headers?'
      vpath       'DEFAULT'
      default     TRUE
      helpkey     '*'
   endparameter

   parameter      TYPE           # Output data type
      type        'LITERAL'
      vpath       'DEFAULT'
      ppath       'CURRENT,DEFAULT'
      default     !
      prompt      'HDS data type of NDF'
      helpkey     '*'
   endparameter

   parameter      WCSATTRS      # AST attributes for WCS FitsChan
      type        'LITERAL'
      vpath       'DEFAULT'
      ppath       'DEFAULT,CURRENT'
      prompt      'Attributes for WCS conversion'
      helpkey     '*'
      default     !
   endparameter

endinterface
