        SUBROUTINE SHELLSORT(NDATA, XDATA, KEY)
C
C MIKE IRWIN ROUTINE SUBSTANTIALLY MODIFIED BY T.R. MARSH
C SHELL SORT ROUTINE
C INPUT:
C       NDATA = NUMBER OF DATA VALUES
C       XDATA = DATA VALUES
C OUTPUT:
C       KEY   = KEY TO SORTED DATA VALUES (I.E. XDATA(KEY(I)) ASCENDS)
C
        REAL*4 XDATA(1)
        INTEGER*4 KEY(1)
C
C EVALUATE JUMP STEP TO BE USED IN SHELL SORT
C
        JUMP = 2
10      JUMP = 2*JUMP
        IF( JUMP .LT. NDATA ) GOTO 10
        JUMP = MIN0( NDATA, (3*JUMP)/4-1 )
C
C INITIALISE KEY ARRAY
C
        DO I = 1, NDATA
          KEY(I) = I
        END DO
        IF(NDATA.EQ.1) RETURN
        DO WHILE(JUMP .GT. 1)
          JUMP = JUMP/2
          IEND = NDATA - JUMP
          DO I = 1, IEND
            I1 = I
            I2 = I + JUMP
C
C COMPARE VALUES "JUMP" APART IN THE CURRENT SORTED ARRAY
C A VALUE IS MOVED IN THE ARRAY IF IT IS LESS THAN THE
C VALUE JUMP BINS BEFORE IT. IT WILL CARRY ON JUMPING
C UP THE ARRAY UNTIL IT MEETS A SMALLER VALUE OR RUNS OUT
C OF SPACE
C
            IF( XDATA(KEY(I1)) .GT. XDATA(KEY(I2)) ) THEN
              KEEP = KEY(I2)
              XX = XDATA(KEEP)
20            KEY(I2) = KEY(I1)
              I2 = I1
              I1 = I1 - JUMP
              IF( I1.LE.0 ) GOTO 30
              IF( XDATA(KEY(I1)) .GT. XX ) GOTO 20
30            KEY(I2) = KEEP
            END IF
          END DO
        END DO
        RETURN
        END
