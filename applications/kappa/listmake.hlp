.help listmake Starlink kappa
.nf
Creates a text file holding a positions list.

Usage:

   listmake outlist [ndf] [mode] [file]

Description:

   This application creates a text file containing a list of positions
   supplied by the user. Positions list are primarily intended for
   communicating positions between applications. In addition to the
   positions themselves, they contain information describing the
   co-ordinate Frames in which the positions are defined. They also
   contain integer position identifiers which allow positions to be
   distinguished.

   If an NDF is specified using parameter NDF, then the positions should
   be given in the current co-ordinate Frame of the NDF. Information
   describing the co-ordinate Frames available within the NDF will be
   copied to the output positions list. Subsequent applications can
   use this information in order to align the positions with other
   data sets.

   If no NDF is specified, then the user must indicate the co-ordinate
   Frame in which the positions will be supplied using parameter FRAME.
   A description of this Frame will be written to the output positions
   list for use by subsequent applications.

   The positions themselves may be supplied within another text file,
   or may be given in response to repeated prompts for a parameter.
   Alternatively, the pixel centres in the NDF supplied for parameter
   NDF can be used (see parameter MODE).

   The output can be initialised by copying positions from an existing
   positions list. Any positions supplied directly by the user are then
   appended to the end of this initial list (see parameter INLIST).

Parameters

For information on individual parameters, select from the list below:

DESCRIBE

DESCRIBE = _LOGICAL (Read)
   If TRUE, a detailed description of the co-ordinate Frame in which
   positions are required will be displayed before the positions
   are obtained using either parameter POSITION or FILE. [current value]

DIM

DIM = _INTEGER (Read)
   The number of axes in the co-ordinate Frame in which the positions
   will be supplied. Only accessed if a null value is supplied for
   parameter NDF.

EPOCH

EPOCH = _DOUBLE (Read)
   If a "Sky Co-ordinate System" specification is supplied (using
   parameter FRAME) for a celestial co-ordinate system, then an epoch
   value is needed to qualify it. This is the epoch at which the
   supplied sky positions were determined. It should be given as a
   decimal years value, with or without decimal places  ("1996.8" for
   example). Such values are interpreted as a Besselian epoch if less
   than 1984.0 and as a Julian epoch otherwise.

FILE

FILE = FILENAME (Read)
   A text file containing the positions to be stored in the output
   positions list. Each line should contain the formatted axis values
   for a single position, separated by white space. Only accessed if
   parameter MODE is given the value "File".

FRAME

FRAME = LITERAL (Read)
   Specifies the domain of the positions supplied using parameter
   POSITION or FILE. If a "Sky Co-ordinate System" (SCS) string
   such as EQUAT(J2000) is supplied (see section "Sky Co-ordinate
   Systems" in SUN/95), then the positions are assumed to be
   2-dimensional celestial co-ordinates in the specified system.
   Otherwise, the given domain name is used without any interpretation.
   Any string may be supplied, but normally one of the standard domain
   names such as GRID, PIXEL, GRAPHICS, etc, should be given. Parameter
   DIM is used to determine the number of axes in the Frame. This
   parameter is only accessed if the parameter NDF is given a null value.

INLIST

INLIST = FILENAME (Read)
   A text file containing an existing positions list which is to be
   included at the start of the output positions list. These positions
   are mapped into the current co-ordinate Frame of the supplied
   NDF, or into the Frame specified by parameter FRAME if no NDF was
   supplied. A message is displayed indicating the Frame in which
   alignment occurred. They are then stored in the output list before
   any further positions are added. A null value may be supplied
   if there is no input positions list. [!]

MODE

MODE = LITERAL (Read)
   The mode by which the positions are to be obtained. The options are
   as follows:

   - "Interface" -- The positions are obtained using parameter
   POSITION.

   - "File" -- The positions are to be read from a text file
   specified using parameter FILE.

   - "Pixel" -- The positions used are the pixel centres in the data
   file specified by parameter NDF.

   [Interface]

NDF

NDF = NDF (Read)
   The NDF which defines the available co-ordinate Frames in the
   output positions list. If an NDF is supplied, the positions
   obtained using parameter POSITION or FILE are assumed to be in
   the current co-ordinate Frame of the NDF, and the WCS component
   of the NDF is copied to the output positions list. If a null
   value is supplied, the single co-ordinate Frame defined by parameter
   FRAME is stored in the output positions list, and supplied
   positions are assumed to be in the same Frame. [!]

OUTLIST

OUTLIST = FILENAME (Write)
   The output positions list.

POSITION

POSITION = LITERAL (Read)
   The co-ordinates of a single position to be stored in the output
   positions list. Supplying a colon ":" will display details of the
   co-ordinate Frame in which the position is required. The position
   should be given as a list of formatted axis values separated by
   commas or spaces. You are prompted for new values for this parameter
   until a null value (!) is entered. This parameter is only accessed
   if parameter MODE is given the value "Interface".

TITLE

TITLE = LITERAL (Read)
   A title for the output positions list. The dynamic default
   is obtained from the input positions list if one is supplied.
   Otherwise, the dynamic default is obtained from the NDF if one
   is supplied. Otherwise, the dynamic default is "Output from
   LISTMAKE". []

Examples

listmake newlist frame=pixel dim=2
   This creates a text file called newlist containing a list of
   positions, together with a description of a single 2-dimensional
   pixel co-ordinate Frame. The positions are supplied as a set of
   space-separated pixel co-ordinates in response to repeated prompts
   for the parameter POSITION.

listmake stars.dat frame=equat(B1950) epoch=1962.3
   This creates a text file called stars.dat containing a list of
   positions, together with a description of a single FK4 equatorial
   RA/DEC co-ordinate Frame (referenced to the B1950 equinox). The
   positions were determined at epoch B1962.3. The epoch of
   observation is required since the underlying model on which the
   FK4 system is based is non-inertial and rotates slowly with time,
   introducing fictitious proper motions. The positions are supplied
   as hours and degrees values in response to repeated prompts for
   parameter POSITIONS.

listmake outlist ndf=allsky mode=file file=stars
   This creates a text file called outlist containing a list of
   positions, together with descriptions of all the co-ordinate
   Frames contained in the NDF allsky. The positions are supplied
   within the current co-ordinate Frame of the NDF. Application
   WCSFRAME can be used to find out what this Frame is.
   The positions are supplied in a text file called stars. It may
   seem pointless to copy positions out of one text file into
   another. The input and output text files are, however, different in
   two important respects: the output file contains Frame descriptions
   which enable subsequent applications to align the positions with
   other data, and it also contains integer position identifiers which
   allow the positions to be distinguished.

listmake out inlist=old.dat frame=gal
   This creates a text file called out containing a list of
   positions, together with a description of a single galactic
   co-ordinate Frame. The positions contained in the existing
   positions list old.dat are mapped into galactic co-ordinates (if
   possible) and stored in the output positions list. Further
   galactic co-ordinate positions are then obtained by repeated
   prompting for the parameter POSITION. These positions are
   appended to the positions obtained from file old.dat.

listmake out inlist=old.dat ndf=cobe
   As above but the output positions list contains copies of all the
   Frames in the NDF cobe. The positions in old.dat are mapped into
   the current co-ordinate Frame of the NDF (if possible) before
   being stored in the output positions list. The new positions must
   also be supplied in the same Frame (using parameter POSITION).

listmake profpos ndf=prof1 mode=pixel
   This creates a positions list called profpos containing the
   positions of all the pixel centres in the 1-dimensional NDF
   called prof. This could for instance be used as input to
   application PROFILE in order to produce another profile in which
   the samples are at the same positions as those in NDF prof.

Notes

-  There is a limit of 200 on the number of positions which can be
given using parameter POSITION. There is no limit on the number of
positions which can be given using parameter FILE.

-  Position identifiers are assigned to the supplied positions in
the order in which they are supplied. If no input positions list is
given using parameter INLIST, then the first supplied position will
be assigned the identifier "1". If an input positions list is
given, then the first supplied position is assigned an identifier
one greater than the largest identifier in the input positions list.

-  Each line in the created file will either be a comment line
commencing with a "#" character, or will contain a single integer
position identifier, followed by a set of space separated double
precision floating point axis values. A block of comments will be
included at the end of the file containing a description of the
co-ordinates Frames in which the positions are defined (an AST
"FrameSet" - see SUN/210). The structure of such FrameSets is
complicated and will usually be created by applications, not directly
by the user. The positions stored in file are in the Base Frame of
the FrameSet. If no FrameSet is included (for instance if a user
creates a positions list using a text editor and does not include
a FrameSet), then subsequent applications will assume that the
positions are pixel co-ordinates.

Related_Applications

   KAPPA: CURSOR, LISTSHOW

Authors

DSB: David S. Berry (STARLINK)

History

 16-SEP-1998 (DSB):
    Original version.

.endhelp
