package kappa {
   version PKG_VERS
   prefix kap

   executable mem2d {

      action mem2d {
         alias {mem2(d)}
         helplib {$KAPPA_HELP}

         parameter analyse {
            type _LOGICAL
            vpath DYNAMIC DEFAULT
            default FALSE
            prompt {Do an analysis rather than a deconvolution?}
            helpkey *
          }

         parameter def {
            type _REAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {The constant value to use for the default model}
            helpkey *
          }

         parameter dsum {
            type _REAL
            access WRITE
            vpath DYNAMIC
            helpkey *
          }

         parameter extend {
            type _LOGICAL
            vpath DEFAULT
            default TRUE
            prompt {Are analysis data to be added to output NDF?}
            helpkey *
          }

         parameter fwhmicf {
            type _REAL
            vpath DEFAULT PROMPT DYNAMIC
            ppath CURRENT DEFAULT
            default 2
            prompt {Full width at half max. of the Gaussian ICF}
            helpkey *
          }

         parameter fwhmpsf {
            type _REAL
            access READ
            vpath PROMPT DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Full width at half max of the Gaussian PSF}
            helpkey *
          }

         parameter ilevel {
            type _INTEGER
            vpath CURRENT DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Amount of diagnostic information to display (0-3)}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
          }

         parameter mask {
            type NDF
            access READ
            vpath PROMPT
            prompt {An NDF holding the analysis mask}
            helpkey *
          }

         parameter model {
            type NDF
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding the default model}
            helpkey *
          }

         parameter modelout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding a new default model}
            helpkey *
          }

         parameter niter {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 50
            prompt {Maximum number of MEMSYS3 iterations to perform}
            helpkey *
          }

         parameter noise {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default GAUSSIAN
            prompt {Type of noise statistics}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
          }

         parameter psf {
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {The input NDF}
            helpkey *
          }

         parameter psftype {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default NDF
            prompt {Type of PSF to use}
            helpkey *
          }

         parameter rate {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.5
            prompt {The dimensionless distance constraint}
            helpkey *
          }

         parameter sum {
            type _REAL
            access WRITE
            vpath DYNAMIC
            helpkey *
          }

         parameter thresh {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0625
            prompt {Truncation fractional threshold of PSF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Title for output NDF}
            helpkey *
          }
 
         parameter update {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Is output NDF to be updated every iteration?}
            helpkey *
          }

         parameter xcentre {
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
          }

         parameter ycentre {
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
          }
      }
   }

   executable ndfpack_mon {

      action axconv {
         alias {axco(nv)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be modified}
            helpkey *
          }

      }

      action axlabel {
         alias {axla(bel)}

         helplib {$KAPPA_HELP}
   
         parameter dim {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
          }

         parameter label {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF axis label}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

      }

      action axunits {
         alias {axun(its)}

         helplib {$KAPPA_HELP}
   
         parameter dim {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter units {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF axis units}
            helpkey *
          }

      }

      action erase {
         alias {eras()}

         helplib {$KAPPA_HELP}

         parameter object {
            position 1
            access WRITE
            vpath PROMPT
            prompt {HDS object to be erased?}
            helpkey *
          }

         parameter ok {
            type _LOGICAL
            access READ
            vpath PROMPT
            ppath DEFAULT
            default FALSE
            prompt {Confirm erasure?}
            helpkey *
          }

      }

      action fitsdin {
         alias {fitsd(in)}

         helplib {$KAPPA_HELP}

         parameter encodings {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT CURRENT
            prompt {FITS keywords to use when creating NDF WCS components}
            helpkey *
            default !
          }

         parameter files {
            size *
            position 1
            type LITERAL
            vpath PROMPT
            prompt {Give a list of the FITS files to be processed}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            helpkey *
          }

         parameter auto {
            position 3
            type _LOGICAL
            vpath DEFAULT
            prompt {Automatic mode?}
            helpkey *
            default FALSE
          }

         parameter fmtcnv {
            position 4
            type _LOGICAL
            vpath PROMPT
            prompt {Convert data?}
            helpkey *
            default TRUE
          }

         parameter logfile {
            position 5
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store FITS headers}
            default !
            helpkey *
          }

         parameter glocon {
            type _LOGICAL
            vpath DEFAULT
            prompt {Data-conversion switch to apply globally?}
            helpkey *
            default FALSE
          }

         parameter dscftable {
            type FILENAME
            access WRITE
            vpath PROMPT
            prompt {Name of FACTS description file}
            helpkey *
          }

         parameter table {
            type FILENAME
            access WRITE
            vpath PROMPT
            prompt {Name of output table}
            helpkey *
          }

      }

      action fitsexp {

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
          }

         parameter table {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS keyword translation table}
            helpkey *
          }

      }

      action fitsimp {
         alias {fitsim(p)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
          }

         parameter table {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS keyword translation table}
            helpkey *
          }

         parameter xname {
            position 3
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Output extension name}
            helpkey *
          }

         parameter xtype {
            position 4
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Output extension type}
            helpkey *
          }

      }

      action fitsin {

         helplib {$KAPPA_HELP}

         parameter auto {
            position 4
            type _LOGICAL
            vpath DEFAULT
            prompt {Automatic mode?}
            helpkey *
            default FALSE
          }

         parameter dscftable {
            type FILENAME
            access WRITE
            vpath PROMPT
            prompt {Name of FACTS description file}
            helpkey *
          }

         parameter encodings {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT CURRENT
            prompt {FITS keywords to use when creating NDF WCS components}
            helpkey *
            default !
          }

         parameter files {
            size *
            position 2
            type _CHAR
            vpath PROMPT
            prompt {Give a list of the numbers of the files to be processed}
            helpkey *
          }

         parameter fmtcnv {
            position 5
            type _LOGICAL
            vpath PROMPT
            prompt {Convert data?}
            helpkey *
            default TRUE
          }

         parameter glocon {
            type _LOGICAL
            vpath DEFAULT
            prompt {Data-conversion switch to apply globally?}
            helpkey *
            default FALSE
          }

         parameter label {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the tape labelled?}
            helpkey *
            default FALSE
          }

         parameter logfile {
            position 7
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store FITS headers}
            default !
            helpkey *
          }

         parameter more {
            type _LOGICAL
            vpath PROMPT
            prompt {Any more files?}
            helpkey *
            default FALSE
          }

         parameter mt {
            position 1
            ptype DEVICE
            type TAPE
            ppath CURRENT
            prompt {Tape deck}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            helpkey *
          }

         parameter prefix {
            position 6
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Prefix for the NDF file names?}
            helpkey *
            default fits
          }

         parameter rewind {
            type _LOGICAL
            vpath DEFAULT
            prompt {Rewind the tape before reading?}
            helpkey *
            default TRUE
          }

         parameter table {
            type FILENAME
            access WRITE
            vpath PROMPT
            prompt {Name of output table}
            helpkey *
          }

      }

      action fitslist {
         alias {fitsl(ist)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
          }

         parameter logfile {
            position 2
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store the FITS headers}
            default !
            helpkey *
          }

      }

      action fitsmod {
         alias {fitsm(od)}

         helplib {$KAPPA_HELP}

         parameter comment {
            position 5
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Comment to write}
            helpkey *
          }

         parameter edit {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Edit command}
            helpkey *
            default Read
          }

         parameter exists {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            prompt {Object to store result of final "Exist" operation}
            helpkey *
          }

         parameter keyword {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Keyword to edit}
            helpkey *
          }

         parameter mode {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode by which editing instructions are to be supplied}
            default Interface
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF containing FITS extension to edit}
            helpkey *
          }

         parameter newkey {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Renamed keyword}
            helpkey *
          }

         parameter position {
            position 6
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Position keyword}
            helpkey *
          }

         parameter string {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the value a string?}
            default FALSE
            helpkey *
          }

         parameter table {
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS editing-instruction table}
            helpkey *
          }

         parameter value {
            position 4
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Value to write}
            helpkey *
          }

      }

      action fitstext {
         alias {fitst(ext)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
          }

         parameter file {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Text file of FITS Headers}
            helpkey *
          }

      }

      action hiscom {
         alias {hisc(om)}

         helplib {$KAPPA_HELP}

         parameter comment {
            type LITERAL
            vpath PROMPT
            prompt {Comment line}
            helpkey *
          }

         parameter file {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File containing the commentary}
            helpkey *
          }

         parameter mode {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Interface
            prompt {Method by which to obtain commentary}
            helpkey *
          }

         parameter ndf {
				 # added
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be given commentary}
            helpkey *
          }

         parameter wrap {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Wrap the comments to the maximum width?}
            helpkey *
          }

      }

      action hislist {
         alias {hisl(ist)}

         helplib {$KAPPA_HELP}

         parameter brief {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Produce a brief listing?}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF whose history is to be listed}
            helpkey *
          }

      }

      action hisset {
         alias {hiss(et)}

         helplib {$KAPPA_HELP}

         parameter mode {
            position 2
            type _CHAR
            vpath DEFAULT
            ppath DEFAULT
            default Normal
            prompt {History update mode}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Dataset}
            helpkey *
          }

         parameter ok {
            type _LOGICAL
            vpath PROMPT
            ppath DEFAULT
            default FALSE
            prompt {Erase history?}
            helpkey *
          }

      }

      action native {
         alias {nati(ve)}

         helplib {$KAPPA_HELP}

         parameter object {
            position 1
            type UNIVERSAL
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {HDS object to convert}
            helpkey *
          }

      }

      action ndfcopy {
         alias {ndfc(opy)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF structure}
            helpkey *
          }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {NDF to use as a shape template}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey *
          }

          parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Title for output NDF}
            helpkey *
          }

          parameter trim {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Remove insignificant output pixel axes?}
            helpkey *
            default FALSE
          }

          parameter trimwcs {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Remove surplus output WCS axes?}
            helpkey *
            default TRUE
          }

          parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The WCS axes to retain in the output}
            helpkey *
          }
      }

      action ndftrace {
         alias {ndft(race)}

         helplib {$KAPPA_HELP}

         parameter aend {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter aform {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter alabel {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter amono {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter anorm {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter astart {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter atype {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter aunits {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter avariance {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter axis {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter bad {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter badbits {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 000000
            helpkey *
          }

         parameter current {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter dims {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter extname {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter exttype {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter fdim {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter fdomain {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter form {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter ftitle {
            size *
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter fullaxis {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Display full axis information?}
            helpkey *
          }

         parameter fullframe {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Display full coordinate Frame information?}
            helpkey *
          }

         parameter fullwcs {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Display full WCS information?}
            helpkey *
          }

         parameter history {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter label {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter lbound {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF structure to examine}
            helpkey *
          }

         parameter ndim {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter nextn {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter nframe {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter quality {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter quiet {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Display no NDF information?}
            helpkey *
          }

         parameter title {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter type {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter ubound {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter units {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter wcs {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter width {
            size *
            type _LOGICAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

      }

      action setaxis {
         alias {seta(xis)}

         helplib {$KAPPA_HELP}
   
         parameter comp {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {Axis array component to modify}
            helpkey *
          }

         parameter dim {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
          }

         parameter exprs {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Expression}
            helpkey *
          }

         parameter file {
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Text file containing replacement axis values}
            helpkey *
          }

         parameter index {
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Pixel index of the element}
            helpkey *
          }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {NDF containing axis structures to copy}
            helpkey *
          }

         parameter mode {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Type of modification}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter newval {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {New value for the array element}
            helpkey *
          }

         parameter type {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Data type of the modified array component}
            helpkey *
          }

      }

      action setbad {
         alias {setba(d)}

         helplib {$KAPPA_HELP}

         parameter data {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Process the data array?}
            helpkey *
          }

         parameter modify {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Modify the NDF?}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter value {
            position 2
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {New bad-pixel flag value}
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Process the variance array?}
            helpkey *
          }

      }

      action setbb {

         helplib {$KAPPA_HELP}

         parameter and {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Perform bit-wise AND with existing mask value?}
            helpkey *
          }

         parameter bb {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {New bad-bits mask value}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to modify}
            helpkey *
          }

         parameter or {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Perform bit-wise OR with existing mask value?}
            helpkey *
          }

      }

      action setbound {
         alias {setbo(und)}

         helplib {$KAPPA_HELP}

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Template NDF}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to be modified}
            helpkey *
          }

      }

      action setext {
         alias {setex(t)}

         helplib {$KAPPA_HELP}

         parameter cname {
            position 4
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component name}
            helpkey *
          }

         parameter ctype {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component type}
            helpkey *
          }

         parameter cvalue {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component value}
            helpkey *
          }

         parameter dvalue {
            type _DOUBLE
           keyword cvalue
				 # the user
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component value}
            helpkey *
          }

         parameter ivalue {
            type _INTEGER
           keyword cvalue
				 # the user
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component value}
            helpkey *
          }

         parameter loop {
				 # SETEXT is to operate in looping
				 # mode, accepting more that one option
				 # at a time.  Set this to TRUE to use
				 # SETEXT interactively or FALSE to use
				 # in an ICL procedure.  The parameter
				 # is only given on the command line,
				 # and should not be prompted for.
            type _LOGICAL
            vpath DEFAULT NOPROMPT
            prompt {Run in looping mode?}
            default TRUE
            helpkey *
          }

         parameter lvalue {
            type _LOGICAL
           keyword cvalue
				 # the user
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component value}
            helpkey *
          }

         parameter ndf {
				 # examined/modified.
            position 1
            type NDF
            vpath PROMPT
            ppath CURRENT
            prompt {NDF containing extension}
            association <-GLOBAL.NDF
            helpkey *
          }

         parameter newname {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {New component name}
            helpkey *
          }

         parameter ok {
				 # verification from the user before
				 # carrying out an action.  It is only
				 # prompted for and should not appear
				 # on the command line.
            type _LOGICAL
            vpath PROMPT
            ppath DEFAULT
            default FALSE
            prompt {Do you still wish to proceed ? (Y/N)}
            helpkey *
          }

         parameter option {
            position 3
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC
            default SELECT
            prompt {Option to modify or examine the extension}
            helpkey *
          }

         parameter rvalue {
            type _REAL
           keyword cvalue
				 # the user
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Component value}
            helpkey *
          }

         parameter shape {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC CURRENT
            default 1
            prompt {Shape of the component}
            helpkey *
          }

         parameter xname {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default FITS
            prompt {Extension name}
            helpkey *
          }

         parameter xtype {
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default EXT
            prompt {Extension type}
            helpkey *
          }

      }

      action setlabel {
         alias {setl(abel)}

         helplib {$KAPPA_HELP}
   
         parameter label {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF label}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

      }

      action setnorm {
         alias {setno(rm)}

         helplib {$KAPPA_HELP}
   
         parameter anorm {
            type _LOGICAL
            vpath PROMPT
            ppath CURRENT
            prompt {New normalisation flag}
            helpkey *
          }

         parameter dim {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Dimension of axis to modify}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

      }

      action setorigin {
         alias {seto(rigin)}

         helplib {$KAPPA_HELP}

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Template NDF}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter origin {
            size *
            position 2
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {New pixel origin value(s)}
            helpkey *
          }

      }

      action setsky {
         alias {setsk(y)}

         helplib {$KAPPA_HELP}

         parameter coords {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sky co-ordinate system}
            helpkey *
          }

         parameter epoch {
            position 4
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 1994.0D0
            prompt {Epoch of the data}
            helpkey *
          }

         parameter lat {
            position 7
            type LITERAL
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {Latitude of the reference point}
            helpkey *
          }

         parameter logfile {
            position 12
            type LITERAL
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {The name of a log file}
            helpkey *
          }

         parameter lon {
            position 6
            type LITERAL
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {Longitude of the reference point}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to have astrometry information appended}
            helpkey *
          }

         parameter orient {
            position 10
            type LITERAL
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {Orientation of the image y-axis from north measured via east}
            helpkey *
          }

         parameter pixelref {
            size *
				 # position
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {Pixel co-ordinates of the reference position}
            helpkey *
          }

         parameter pixelsize {
            size *
            position 9
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {Size of the pixels at the reference point}
            helpkey *
          }

         parameter positions {
            position 2
            type LITERAL
            vpath PROMPT
            prompt {A group of corresponding sky and image co-ordinates }
            helpkey *
          }

         parameter projtype {
            position 5
            type LITERAL
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {Projection type}
            helpkey *
          }

         parameter refcode {
            position 8
            type LITERAL
            vpath DEFAULT PROMPT
            ppath CURRENT
            default !
            prompt {Location of the reference point}
            helpkey *
          }

         parameter tilt {
            position 11
            type LITERAL
            vpath DEFAULT
            ppath CURRENT
            prompt {Tilt of the celestial sphere prior to projection}
            helpkey *
            default 0.0
          }

      }

      action settitle {
         alias {setti(tle)}

         helplib {$KAPPA_HELP}

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter title {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF title}
            helpkey *
          }

      }

      action settype {
         alias {setty(pe)}

         helplib {$KAPPA_HELP}

         parameter complex {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {NDF to hold complex values?}
            helpkey *
          }

         parameter data {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Set a new type for the data component?}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter type {
            position 2
            type LITERAL
            access UPDATE
            vpath PROMPT
            ppath DYNAMIC
            prompt {New numeric type}
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Set a new type for the variance component?}
            helpkey *
          }

      }

      action setunits {
         alias {setu(nits)}

         helplib {$KAPPA_HELP}
   
         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter units {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {New NDF units}
            helpkey *
          }

      }

      action setvar {
         alias {setv(ar)}

         helplib {$KAPPA_HELP}
   
         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter variance {
            position 2
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default DATA
            prompt {Variance expression}
            helpkey *
          }

      }

      action wcsadd {

         helplib {$KAPPA_HELP}

         parameter domain {
            position 3
            type LITERAL
            ppath CURRENT
            prompt {The Domain name for the new Frame}
            helpkey *
          }

         parameter epoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
          }

         parameter frame {
            position 2
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {An existing co-ordinate Frame}
            helpkey *
            default !
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF in which to store the new Frame}
            helpkey *
          }

         parameter tr {
            size *
            position 4
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Co-efficients of a linear transformation}
            default !
            helpkey *
          }

      }

      action wcsattrib {

         helplib {$KAPPA_HELP}

         parameter mode {
            position 2
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Operation to perform}
            default GET
            helpkey *
          }

         parameter name {
            position 3
            type LITERAL
            ppath CURRENT
            prompt {Attribute name}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be modified}
            helpkey *
          }

         parameter newval {
            position 4
            type LITERAL
            ppath DYNAMIC
            prompt {Attribute value}
            helpkey *
          }

         parameter state {
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter value {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
          }

      }

      action wcscopy {

         helplib {$KAPPA_HELP}

         parameter confirm {
            position 4
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should replacement of any existing WCS component be confirmed?}
            default TRUE
            helpkey *
          }

         parameter like {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {An NDF containing WCS information}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be modified}
            helpkey *
          }

         parameter ok {
            type _LOGICAL
            access READ
            ppath DEFAULT
            prompt {Replace the existing WCS component?}
            default FALSE
            helpkey *
          }

         parameter tr {
            size *
            position 3
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Co-efficients of a linear transformation}
            default !
            helpkey *
          }

      }

      action wcsframe {

         helplib {$KAPPA_HELP}

         parameter epoch {
            position 3
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
          }

         parameter frame {
            position 2
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Required co-ordinate Frame}
            helpkey *
            default !
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be modified}
            helpkey *
          }

      }

      action wcsremove {

         helplib {$KAPPA_HELP}

         parameter frames {
            size *
            position 2
            type _CHAR
            vpath PROMPT
            prompt {The indices of the Frames to be removed}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be modified}
            helpkey *
          }

      }

      action wcsshow {

         helplib {$KAPPA_HELP}

         parameter cat {
            type FILENAME
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association <-GLOBAL.POSITIONS_LIST
            prompt {Catalogue or positions list}
            default !
            helpkey *
          }

         parameter full {
            position 5
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Level of detail in output (-1,0,+1)}
            default 0
            helpkey *
          }

         parameter logfile {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Log file}
            default !
            helpkey *
          }

         parameter newwcs {
            position 4
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Group expression giving new WCS FrameSet}
            default !
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure}
            helpkey *
          }

         parameter object {
            position 2
            access WRITE
            vpath PROMPT
            prompt {HDS object}
            helpkey *
          }

         parameter quiet {
            position 6
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            default !
            prompt {Run without displaying Object structure?}
            helpkey *
          }

      }

      action chain {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Base NDF structure}
            helpkey *
          }

         parameter c1 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
          }

         parameter c2 {
            position 3
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c3 {
            position 4
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c4 {
            position 5
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c5 {
            position 6
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c6 {
            position 7
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c7 {
            position 8
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c8 {
            position 9
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c9 {
            position 10
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c10 {
            position 11
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c11 {
            position 12
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c12 {
            position 13
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c13 {
            position 14
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c14 {
            position 15
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c15 {
            position 16
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c16 {
            position 17
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c17 {
            position 18
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c18 {
            position 19
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c19 {
            position 20
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c20 {
            position 21
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c21 {
            position 22
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c22 {
            position 23
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c23 {
            position 24
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c24 {
            position 25
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter c25 {
            position 26
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to chain}
            helpkey CHAIN Parameters C1-C25
            default !
          }

         parameter out {
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action reshape {
         alias {resha(pe)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be reshaped}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Reshaped NDF}
            helpkey *
          }

         parameter shape {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Shape of the output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter vectorize {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Vectorize the arrays?}
            default FALSE
            helpkey *
          }

      }

   }

   executable kapview_mon {

      action colcomp {

         alias {colcomp}

         helplib {$KAPPA_HELP}

         parameter badcol {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Colour of bad pixels}
            ppath CURRENT DEFAULT
            default MIN
            helpkey *
          }

         parameter device {
            position 6
            ptype DEVICE
            vpath GLOBAL PROMPT
            prompt {Name of display device}
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            helpkey *
          }

         parameter inr {
            position 1
            type NDF
            prompt {The red NDF}
            ppath CURRENT
            helpkey *
          }

         parameter ing {
            position 2
            type NDF
            prompt {The green NDF}
            ppath CURRENT
            helpkey *
          }

         parameter inb {
            position 3
            type NDF
            prompt {The blue NDF}
            ppath CURRENT
            helpkey *
          }

         parameter out {
            position 4
            type NDF
            prompt {The output NDF containing an image of colour indices}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
          }

         parameter lut {
            position 5
            type NDF
            prompt {The output NDF containing the colour table}
            association ->GLOBAL.LUT
            helpkey *
          }

         parameter percentiles {
            type _REAL
            prompt {Percentiles for default scaling}
            ppath CURRENT DEFAULT
            default 5 95
            helpkey *
            size *
          }

         parameter ppm {
            type FILENAME
            access READ
            vpath DEFAULT
            prompt {Filename to store output PPM image}
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter rlow {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to zero red intensity}
            helpkey *
          }

         parameter rhigh {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to full red intensity}
            helpkey *
          }

         parameter glow {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to zero green intensity}
            helpkey *
          }

         parameter ghigh {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to full green intensity}
            helpkey *
          }

         parameter blow {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to zero blue intensity}
            helpkey *
          }

         parameter bhigh {
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT
            default !
            prompt {NDF data value corresponding to full blue intensity}
            helpkey *
          }

      }


      action contour {
         alias {contou(r)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to contour}
            helpkey *
            default Data
          }

         parameter dashed {
            type _REAL
            prompt {Height below which contours are dashed}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 6
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter fast {
            type _LOGICAL
            prompt {Optimise drawing speed?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter firstcnt {
            type _REAL
            prompt {Give the height of the first contour}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter heights {
            size *
            type _REAL
            prompt {Give the heights of the contours}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter key {
            position 5
            type _LOGICAL
            prompt {Do you want a key to contour levels?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal and vertical position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.05
          }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
          }

         parameter length {
            size *
            type _REAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter mode {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Method for selecting contour heights}
            helpkey *
          }

         parameter ncont {
            position 4
            type _INTEGER
            prompt {Give the number of contour heights}
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 6
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be contoured}
            helpkey *
          }

         parameter number {
            size *
                                 
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter penrot {
            type _LOGICAL
            prompt {Is the graphics pen to be cycled through 3 colours?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter pens {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Pen definitions for each contour}
            helpkey *
            default !
          }

         parameter percentiles {
            size *
            type _REAL
            prompt {Give the heights of the contours as percentiles}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter stats {
            type _LOGICAL
            prompt {Are contouring statistics to be computed?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter stepcnt {
            type _REAL
            prompt {Give the interval between contour heights}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and contours}
            helpkey *
            default !
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The axes to be annotated}
            helpkey *
          }

      }

      action contover {
         alias {contov(er)}

         helplib {$KAPPA_HELP}

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to contour}
            helpkey *
            default Data
          }

         parameter concol {
            type LITERAL
            prompt {Colour of contours}
            vpath CURRENT DEFAULT
            ppath CURRENT
            helpkey *
            default 1
          }

         parameter dashed {
            type _REAL
            prompt {Height below which contours are dashed}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 6
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_OVERLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter firstcnt {
            type _REAL
            prompt {Give the height of the first contour}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter heights {
            size *
            type _REAL
            prompt {Give the heights of the contours}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter mode {
            position 4
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Method for selecting contour heights}
            helpkey *
          }

         parameter ncont {
            position 5
            type _INTEGER
            prompt {Give the number of contour heights}
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 6
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be contoured}
            helpkey *
          }

         parameter offset {
            position 3
            type _INTEGER
            vpath PROMPT
            access READ
            ppath DYNAMIC
            prompt {x-y displacement in pixels}
            helpkey *
            default 0 0
            size *
          }

         parameter penrot {
            type _LOGICAL
            prompt {Is the graphics pen to be cycled through 3 colours?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter percentiles {
            size *
            type _REAL
            prompt {Give the heights of the contours as percentiles}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter stepcnt {
            type _REAL
            prompt {Give the interval between contour heights}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter thick {
            type _REAL
            prompt {Give the relative thickness of contours}
            vpath DEFAULT
            default 1.0
            helpkey *
          }

      }

      action crelut {
         alias {crel(ut)}

         helplib {$KAPPA_HELP}

         parameter colour {
            size *
            type LITERAL
            vpath PROMPT
            prompt {New palette colour}
            helpkey *
          }

         parameter colrange {
            size *
            type _INTEGER
            vpath PROMPT
            prompt {Select one or two colours from the palette}
            helpkey *
          }

         parameter comp {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to display}
            helpkey *
            default Data
          }

         parameter device {
            ptype DEVICE
            position 9
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Image-display device}
            helpkey *
          }

         parameter high {
            position 6
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {High value for image scaling}
            helpkey *
          }

         parameter inlut {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.LUT
            prompt {NDF containing input lookup table}
            helpkey *
          }

         parameter inpal {
            position 7
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF containing input palette}
            helpkey *
            default !
          }

         parameter low {
            position 5
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {Low value for image scaling}
            helpkey *
          }

         parameter ndf {
            position 3
            type NDF
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image to be displayed}
            helpkey *
          }

         parameter nn {
            type _LOGICAL
            prompt {Nearest-neighbour mapping?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter ok {
            type _LOGICAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Accept this colour (Y/N)?}
            helpkey *
          }

         parameter outlut {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            ppath DEFAULT
            prompt {NDF to save the lookup table}
            association ->GLOBAL.LUT
            helpkey *
          }

         parameter outpal {
            position 8
            type NDF
            access WRITE
            vpath PROMPT
            ppath DEFAULT
            prompt {NDF to save the palette}
            helpkey *
            default !
          }

         parameter palnum {
            type _INTEGER
            vpath PROMPT
            prompt {Number of the palette entry to be modified}
            helpkey *
          }

         parameter penrange {
            size *
            type _INTEGER
            vpath PROMPT
            prompt {First and last pen of the LUT to be modified}
            helpkey *
          }

         parameter ptitle {
            type LITERAL
            vpath DEFAULT
            prompt {Title for the palette}
            helpkey *
            default {Kappa - Crelut}
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for the lookup table}
            helpkey *
            default {Kappa - Crelut}
          }

         parameter valrange {
            size *
            type _DOUBLE
            vpath PROMPT
            prompt {Data-value range to be assigned colours}
            helpkey *
          }

      }

      action cursor {

         helplib {$KAPPA_HELP}

         parameter close {
            type _LOGICAL
            prompt {Are polygons to be closed?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter describe {
            type _LOGICAL
            prompt {Are co-ordinate Frames to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 4
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter epoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
          }

         parameter frame {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Required coordinate Frame}
            helpkey *
            default !
          }

         parameter geodesic {
            type _LOGICAL
            prompt {Should polygon edges be geodesic curves?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter info {
            type _LOGICAL
            prompt {Should the use of the mouse be described?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter just {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Justification for displayed text strings}
            helpkey *
            default CC
          }

         parameter lastdim {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter lastpos {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to store cursor co-ordinates}
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {The PGPLOT type for position markers}
            default 2
            helpkey *
          }

         parameter maxpos {
            type _INTEGER
            access READ
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Maximum number of positions which can be supplied}
            helpkey *
          }

         parameter minpos {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Minimum number of positions which must be supplied}
            default 0
            helpkey *
          }

         parameter mode {
            position 1
            type LITERAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Co-ordinate system/picture mode}
            default Dynamic
            helpkey *
          }

         parameter name {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Name of pictures to be selected}
            default !
            helpkey *
          }

         parameter number {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter outcat {
            position 3
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Output positions list}
            association ->GLOBAL.CATALOGUE
            default !
            helpkey *
          }

         parameter plot {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default NONE
            prompt {What sort of graphics should be used?}
            helpkey *
          }

         parameter quiet {
            type _LOGICAL
            prompt {Suppress the display of positions on the screen?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter showpixel {
            type _LOGICAL
            prompt {Also report pixel co-ordinates?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter strings {
            type LITERAL
            ppath DEFAULT
            prompt {Strings to mark positions}
            helpkey *
            default !
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Style for graphics and formatted axis values}
            helpkey *
            default !
          }

      }

      action drawsig {
         alias {draw(sig)}

         helplib {$KAPPA_HELP}

         parameter axis {
            position 3
            type LITERAL
            prompt {Orientation of lines}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Y
            helpkey *
          }

         parameter comp {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to process}
            default Data
            helpkey *
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Array to be analysed}
            helpkey *
          }

         parameter nsigma {
            size *
            position 2
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Sigma levels}
            default 1.0
            helpkey *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the lines}
            helpkey *
            default !
          }

      }

      action display {
         alias {disp(lay)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter badcol {
            type LITERAL
            prompt {Colour of bad pixels}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default MIN
          }

         parameter border {
            type _LOGICAL
            prompt {Is a coloured border required?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter borstyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the border}
            helpkey *
            default !
          }

         parameter centre {
            position 6
            type LITERAL
            prompt {Position at the centre of the display}
            vpath DEFAULT
            ppath DYNAMIC CURRENT
            default !
            helpkey *
          }

         parameter clear {
            position 3
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before display?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to display}
            helpkey *
            default Data
          }

         parameter device {
            ptype DEVICE
            position 4
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter high {
            type _DOUBLE
            prompt {High value for display}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be displayed}
            helpkey *
          }

         parameter key {
            type _LOGICAL
            prompt {Do you want a key to the colour table?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter keypos {
            type _REAL
            prompt {Horizontal position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.05
          }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
          }

         parameter low {
            type _DOUBLE
            prompt {Low value for display}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
          }

         parameter lut {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {NDF containing lookup table}
            helpkey *
            default !
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter mode {
            position 5
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Method to define the scaling limits}
            helpkey *
          }

         parameter nn {
            type _LOGICAL
            prompt {Nearest-neighbour mapping of lookup table?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter numbin {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 2048
            prompt {Number of bins to compute percentiles}
            helpkey *
          }

         parameter out {
            position 9
            type NDF
            access WRITE
            vpath DEFAULT
            prompt {NDF for scaled data}
            helpkey *
            default !
          }

         parameter percentiles {
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 10 90
            prompt {Percentiles for scaling}
            helpkey *
            size *
          }

         parameter scahigh {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the upper scaling value.}
            association ->GLOBAL.DISP_SCALE_HIGH
            default 0.0
          }

         parameter scale {
            type _LOGICAL
            prompt {Scale the data?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter scalow {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the lower scaling value.}
            association ->GLOBAL.DISP_SCALE_LOW
            default 0.0
          }

         parameter sigmas {
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default -2 2
            prompt {Standard-deviation limits for scaling}
            helpkey *
            size *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes}
            helpkey *
            default !
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {The axes to be annotated}
            default !
            helpkey *
          }

         parameter xmagn {
            position 7
            type _REAL
            prompt {Magnification in X co-ordinate about the centre of array}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            helpkey *
          }

         parameter ymagn {
            position 8
            type _REAL
            prompt {Magnification in Y co-ordinate about the centre of array}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

      }

      action elprof {
         alias {elpr(of)}

         helplib {$KAPPA_HELP}

         parameter anglim {
            size *
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            default 0.0
            prompt {Azimuthal angles defining the sector to be binned}
            helpkey *
          }

         parameter angmaj {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0
            prompt {Angle from X-axis to ellipse major axis}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
          }

         parameter mask {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Output NDF to hold pixel mask}
            helpkey *
          }

         parameter mtitle {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output mask NDF}
            default {Mask created by KAPPA - Elprof}
            helpkey *
          }

         parameter nbin {
            position 3
            type _INTEGER
            ppath CURRENT DEFAULT
            default 20
            prompt {Number of bins to use}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Binned output NDF}
            helpkey *
          }

         parameter radial {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Radial (as opposed to azimuthal) profile?}
            helpkey *
          }

         parameter ratio {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            prompt {Ratio of the ellipse minor axis to the major axis}
            helpkey *
          }

         parameter rmax {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Radius to outer edge of outer-most annulus}
            helpkey *
          }

         parameter rmin {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0
            prompt {Radius to inner edge of inner-most annulus}
            helpkey *
          }

         parameter title {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Title for binned output NDF}
            default {KAPPA - Elprof}
            helpkey *
          }

         parameter width {
            type _REAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC CURRENT
            prompt {Bin size}
            default !
            helpkey *
          }

         parameter xc {
            position 4
            type _REAL
            access READ
            ppath CURRENT DYNAMIC
            prompt {X pixel co-ordinate of ellipse centre}
            helpkey *
          }

         parameter yc {
            position 5
            type _REAL
            access READ
            ppath CURRENT DYNAMIC
            prompt {Y pixel co-ordinate of ellipse centre}
            helpkey *
          }

      }

      action gdclear {
         alias {gdcl(ear)}

         helplib {$KAPPA_HELP}

         parameter current {
            position 2
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clear just the current picture?}
            default FALSE
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

      }

      action gdnames {
         alias {gdna(mes) sho(dev)}

            message BLANK {
              text " "
	}

            message HEADING {
              text "Graphics devices available:"
	}

            message DEVICE {
              text "^NAME - ^COMMENT"
	}

      }

      action gdset {
         alias {gdse(t)}

         helplib {$KAPPA_HELP}

         parameter device {
            position 1
            ptype DEVICE
            access READ
            prompt {Graphics device}
            helpkey *
            vpath PROMPT
            association ->GLOBAL.GRAPHICS_DEVICE
          }

      }

      action gdstate {
         alias {gdst(ate)}

         helplib {$KAPPA_HELP}

         parameter comment {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter describe {
            type _LOGICAL
            vpath CURRENT DEFAULT
            prompt {Show a description of the requested Frame?}
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter device {
            position 1
            ptype DEVICE
            access UPDATE
            vpath GLOBAL CURRENT
            prompt {Graphics device}
            association <-GLOBAL.GRAPHICS_DEVICE
            helpkey *
          }

          parameter domain {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

          parameter epoch {
            type _DOUBLE
            prompt {Epoch of observation}
            ppath DYNAMIC CURRENT
            helpkey *
          }

         parameter frame {
            position 2
            type LITERAL
            vpath DEFAULT
            prompt {Co-ordinate Frame to be displayed}
            ppath DEFAULT
            default !
            helpkey *
          }

          parameter label {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter name {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

          parameter outline {
            type _LOGICAL
            access READ
            vpath DEFAULT
            prompt {Outline the current picture?}
            helpkey *
            default FALSE
          }

         parameter refnam {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter report {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Report results?}
            default TRUE
            helpkey *
          }

          parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Plotting style for the outline}
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter x1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter x2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter y1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter y2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

      }

      action greyplot {
         alias {grey(plot)}

         helplib {$KAPPA_HELP}

         parameter abslab {
            type LITERAL
            prompt {Give the label for the abscissa axis}
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC CURRENT
            helpkey *
            default X
          }

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter badcol {
            type LITERAL
            prompt {Colour of bad pixels}
            vpath CURRENT DEFAULT
            ppath CURRENT
            helpkey *
            default MIN
          }

         parameter black {
            position 9
            type _DOUBLE
            prompt {Value to be black in the plot?}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
          }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to display}
            helpkey *
            default Data
          }

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system}
            association <->GLOBAL.COORD_SYSTEM
            helpkey *
            default Data
          }

         parameter device {
            ptype DEVICE
            position 4
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter font {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fount type?}
            default GKS
            helpkey *
          }

         parameter full {
            type _LOGICAL
            prompt {Is the full greyscale to be used?}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be displayed}
            helpkey *
          }

         parameter key {
            position 3
            type _LOGICAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Do you want a key of the grey levels and a title ?}
            helpkey *
            default TRUE
          }

         parameter majtic {
            type _REAL
            prompt {Give the parameter controlling the numbers of major ticks for the x and y axes}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 3. 3.
            size *
          }

         parameter mintic {
            type _REAL
            prompt {Give the numbers of minor tick marks between major ticks for x and y axes}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default -1. -1.
            size *
          }

         parameter mode {
            position 5
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Method to define the scaling limits}
            helpkey *
          }

         parameter numbin {
            type _INTEGER
            vpath DEFAULT
            default 2048
            prompt {Number of bins to compute percentiles}
            helpkey *
          }

         parameter ordlab {
            type LITERAL
            prompt {Give the label for the ordinate axis}
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC CURRENT
            helpkey *
            default Y
          }

         parameter out {
            position 10
            type NDF
            access WRITE
            vpath DEFAULT
            prompt {NDF for scaled data}
            helpkey *
            default !
          }

         parameter outtic {
            type _LOGICAL
            prompt {Do you want the axis tick marks on the outside of the axes?}
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter percentiles {
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 90 10
            prompt {Percentiles for scaling}
            helpkey *
            size *
          }

         parameter pltitl {
            type LITERAL
            prompt {Give the title of the image}
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC
            helpkey *
            default { }
          }

         parameter pxsize {
            position 6
            type _REAL
            prompt {Give size of the plot in the x-direction in metres}
            vpath DYNAMIC
            ppath DYNAMIC
            helpkey *
          }

         parameter pysize {
            position 7
            type _REAL
            prompt {Give size of the plot in the y-direction in metres}
            vpath DYNAMIC
            ppath DYNAMIC
            helpkey *
          }

         parameter reduct {
            type _REAL
            prompt {Give the reduction factor for the plotting of the array}
            vpath DEFAULT
            default 1.0
            helpkey *
          }

         parameter scahigh {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the upper scaling value.}
            association ->GLOBAL.DISP_SCALE_HIGH
            default 0.0
          }

         parameter scale {
            type _LOGICAL
            prompt {Scale the data?}
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter scalow {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the lower scaling value.}
            association ->GLOBAL.DISP_SCALE_LOW
            default 0.0
          }

         parameter sigmas {
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 2 -2
            prompt {Standard-deviation limits for scaling}
            helpkey *
            size *
          }

         parameter thick {
            type _REAL
            prompt {Give the relative thickness of plotted axis lines and annotations}
            vpath DEFAULT
            default 1.0
            helpkey *
          }

         parameter white {
            position 8
            type _DOUBLE
            prompt {Value to be white in the plot?}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
          }

      }

      action idclear {
         alias {idcl(ear)}

         helplib {$KAPPA_HELP}

         parameter current {
            position 2
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clear just the current picture?}
            default FALSE
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of the image display}
            helpkey *
          }

      }

      action idinvisible {
         alias {idin(visible)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter planes {
            size *
            position 1
            type _INTEGER
            prompt {Memory plane number(s)?}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 0
          }

      }

      action idpazo {
         alias {idpaz(o)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

      }

      action idset {
         alias {idse(t)}

         helplib {$KAPPA_HELP}

         parameter device {
            position 1
            ptype DEVICE
            access READ
            prompt {Image-display device}
            helpkey *
            vpath PROMPT
            association ->GLOBAL.IMAGE_DISPLAY
          }

      }

      action idstate {
         alias {idst(ate)}

         helplib {$KAPPA_HELP}

         parameter comment {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
         }

         parameter describe {
            type _LOGICAL
            vpath CURRENT DEFAULT
            prompt {Show a description of the requested Frame?}
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
         }

         parameter device {
            access UPDATE
            position 1
            prompt {Image display}
            helpkey *
            vpath GLOBAL CURRENT
            ptype DEVICE
            association <-GLOBAL.IMAGE_DISPLAY
          }

          parameter domain {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

          parameter epoch {
            type _DOUBLE
            prompt {Epoch of observation}
            ppath DYNAMIC CURRENT
            helpkey *
          }

         parameter frame {
            position 2
            type LITERAL
            vpath DEFAULT
            prompt {Co-ordinate Frame to be displayed}
            ppath DEFAULT
            default !
            helpkey *
          }

          parameter label {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter name {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

          parameter outline {
            type _LOGICAL
            access READ
            vpath DEFAULT
            prompt {Outline the current picture?}
            helpkey *
            default FALSE
          }

         parameter refnam {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter report {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Report results?}
            default TRUE
            helpkey *
          }

          parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Plotting style for the outline}
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter x1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter x2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter y1 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter y2 {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

      }

      action inspect {
         alias {insp(ect)}

         helplib {$KAPPA_HELP}

         parameter abslab {
            type LITERAL
            prompt {Give the label for the abscissa (pixel number) axis}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
          }

         parameter filename {
            type FILENAME
            vpath PROMPT
            prompt {Name of file to save listing}
            helpkey *
            default inspect_list.lis
          }

         parameter font {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fount type?}
            default GKS
            helpkey *
          }

         parameter gdevice {
            ptype DEVICE
            position 3
            vpath PROMPT
            ppath CURRENT
            prompt {Graphics device to be used for line plots}
            helpkey *
          }

         parameter hirep {
            type _LOGICAL
            prompt {Is the full histogram to be reported?}
            vpath PROMPT
            ppath DEFAULT
            helpkey *
            default FALSE
          }

         parameter histogram {
            type NDF
            access WRITE
            vpath PROMPT
            ppath DEFAULT
            prompt {Name of file to save histogram}
            helpkey *
            default !
          }

         parameter hititle {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for histogram}
            default {Kappa - Inspect_Histogram}
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image to be inspected}
            helpkey *
          }

         parameter lbound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Lower bounds of the region}
            helpkey *
          }

         parameter majtic {
            type _REAL
            prompt {Give the parameter controlling the numbers of major ticks for the x and y axes}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 4. 4.
            size *
          }

         parameter mintic {
            type _REAL
            prompt {Give the numbers of minor tick marks between major ticks for x and y axes}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default -1. -1.
            size *
          }

         parameter mode {
            position 2
            type LITERAL
            vpath GLOBAL
            ppath GLOBAL DYNAMIC DEFAULT
            prompt {Interaction mode}
            association <->GLOBAL.INTERACTIONMODE
            default Cursor
            helpkey *
          }

         parameter numbin {
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Number of bins needed in the histogram}
            helpkey *
          }

         parameter option {
            position 4
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Option required}
            helpkey *
          }

         parameter ordlab {
            type LITERAL
            prompt {Give the label for the ordinate (pixel value) axis}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
          }

         parameter out {
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Name of NDF to save the region}
            helpkey *
          }

         parameter outtic {
            type _LOGICAL
            prompt {Do you want the axis tick marks on the outside of the axes?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter overlay {
            ptype DEVICE
            position 5
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_OVERLAY
            prompt {Image-display overlay}
            helpkey *
          }

         parameter peind {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Pixel indices at peep centre}
            helpkey *
          }

         parameter plotstyle {
            type _LOGICAL
            prompt {Are the plotting options to be modified?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default FALSE
          }

         parameter pltitl {
            type LITERAL
            prompt {Give the title of the plot}
            vpath PROMPT
            ppath DYNAMIC
            helpkey *
          }

         parameter slend {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {End indices of the slice}
            helpkey *
          }

         parameter slice {
            type NDF
            access WRITE
            vpath PROMPT
            ppath DEFAULT
            prompt {Name of file to save slice}
            helpkey *
            default !
          }

         parameter slstart {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Start indices of the slice}
            helpkey *
          }

         parameter sltitle {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for slice}
            default {Kappa - Inspect_Slice}
          }

         parameter thick {
            type _REAL
            prompt {Give the relative thickness of plotted lines}
            vpath DEFAULT
            default 1.0
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for the region}
            default {Kappa - Inspect}
          }

         parameter ubound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Upper bounds of the region}
            helpkey *
          }

         parameter vaind {
            size *
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Pixel indices}
            helpkey *
          }

         parameter xlog {
            type _LOGICAL
            prompt {Is the abscissa to be plotted logarithmically?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter xycont {
            type _LOGICAL
            vpath PROMPT
            ppath DEFAULT
            prompt {Do you wish to append to an existing ASCII file?}
            helpkey *
            default FALSE
          }

         parameter xyfile {
            type FILENAME
            vpath PROMPT
            prompt {Name of file to store x,y positions and values of selected pixels}
            helpkey *
            default xylist.lis
          }

         parameter xytitle {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for ASCII file}
            helpkey *
            default {# Kappa - Inspect_XYcur}
          }

         parameter ylog {
            type _LOGICAL
            prompt {Is the ordinate to be plotted logarithmically?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

      }

      action linplot {
         alias {linp(lot)}

         helplib {$KAPPA_HELP}

         parameter align {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Align the horizontal axis with the existing plot?}
            default !
            helpkey *
          }

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Produce annotated axes?}
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Component to display}
            helpkey *
            default Data
          }

         parameter device {
            position 8
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter errbar {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Draw error bars on the graph?}
            helpkey *
            default FALSE
          }

         parameter freq {
            type _INTEGER
            prompt {Frequency of plotted error bars}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1
          }

         parameter key {
            type _LOGICAL
            prompt {Do you want a key?}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
          }

         parameter lmode {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Method for determining default Y bounds}
            helpkey *
            default Extended
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
          }

         parameter mode {
            position 3
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for displaying the data curve}
            default Line
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {1-D array to be displayed}
            helpkey *
          }

         parameter shape {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for displaying the errors}
            helpkey *
            default Bars
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and data curve}
            helpkey *
            default !
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {The axis to be annotated}
            default !
            helpkey *
          }

         parameter xleft {
            position 4
            type LITERAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter xright {
            position 5
            type LITERAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter xsigma {
            type _REAL
            prompt {Number of standard deviations for horizontal error bars}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1.0
          }

         parameter ybot {
            position 6
            type LITERAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ylog {
            type _LOGICAL
            prompt {Is the logarithm of the data to be displayed?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter ysigma {
            type _REAL
            prompt {Number of standard deviations for vertical error bars}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1.0
          }

         parameter ytop {
            position 7
            type LITERAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

      }

      action lutable {
         alias {luta(ble)}

         helplib {$KAPPA_HELP}

         parameter coltab {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Kind of colour table}
            helpkey *
          }

         parameter device {
            position 4
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter full {
            type _LOGICAL
            prompt {Write to the full colour table?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter lut {
            position 3
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.LUT
            prompt {NDF containing input LUT}
            helpkey *
          }

         parameter mapping {
            position 1
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Type of scaling between limits}
            helpkey *
          }

         parameter ndf {
            position 5
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image for histogram equalisation}
            helpkey *
          }

         parameter nn {
            type _LOGICAL
            prompt {Nearest-neighbour mapping?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter percentiles {
            position 6
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 10 90
            prompt {Percentile limits for the histogram}
            helpkey *
            size *
          }

         parameter shade {
            position 7
            type _REAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Type of shading}
            helpkey *
          }

      }

      action lutflip {
         alias {lutfl(ip)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter plane {
            position 2
            type _INTEGER
            prompt {Memory plane number?}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 0
          }

      }

      action luthilite {
         alias {luthi(lite)}

         helplib {$KAPPA_HELP}

         parameter colour {
            size *
            position 1
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Highlight colour}
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter full {
            type _LOGICAL
            prompt {Highlight the full colour table?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter plane {
            position 3
            type _INTEGER
            prompt {Memory plane number}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 0
          }

         parameter view {
            type _LOGICAL
            position 4
            prompt {Display the colour table?}
            vpath DEFAULT
            ppath CURRENT
            default FALSE
            helpkey *
          }

      }

      action lutrot {
         alias {lutro(t)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter full {
            type _LOGICAL
            prompt {Rotate the full colour table?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter plane {
            position 2
            type _INTEGER
            prompt {Memory plane number}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 0
          }

      }

      action lutsave {
         alias {lutsa(ve)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter full {
            type _LOGICAL
            prompt {Is the full colour-table to be saved?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter lut {
            position 1
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.LUT
            prompt {Lookup-table NDF}
            helpkey *
          }

         parameter plane {
            position 3
            type _INTEGER
            prompt {Memory plane number?}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 0
          }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Title for output NDF}
            default {KAPPA - Lutsave}
            helpkey *
          }

      }

      action luttweak {
         alias {lutt(weak)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Name of display device}
            helpkey *
          }

         parameter full {
            type _LOGICAL
            prompt {Tweak the full colour table?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter plane {
            position 2
            type _INTEGER
            prompt {Memory plane number}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 0
          }

         parameter view {
            type _LOGICAL
            position 3
            prompt {Display the colour table?}
            vpath DEFAULT
            ppath CURRENT
            default FALSE
            helpkey *
          }

      }

      action lutview {
         alias {lutv(iew)}

         helplib {$KAPPA_HELP}

         parameter curpic {
            position 4
            type _LOGICAL
            vpath DEFAULT
            prompt {Restrict to the current picture?}
            ppath DEFAULT
            default FALSE
            helpkey *
          }
         parameter device {
            position 5
            ptype DEVICE
            vpath GLOBAL PROMPT
            prompt {Name of display device}
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            helpkey *
          }
         parameter epoch {
            type _DOUBLE
            prompt {Epoch of observation}
            ppath DYNAMIC CURRENT
            helpkey *
          }
         parameter frame {
            type LITERAL
            vpath DEFAULT
            prompt {Required coordinate Frame}
            ppath DEFAULT
            default BASEPIC
            helpkey *
          }
         parameter high {
            position 3
            type _REAL
            vpath GLOBAL DEFAULT
            prompt {Value corresponding to highest colour index}
            ppath GLOBAL DEFAULT
            default !
            association <-GLOBAL.DISP_SCALE_HIGH
            helpkey *
          }
         parameter lbound {
            type LITERAL
            prompt {Lower bound}
            ppath DYNAMIC
            helpkey *
          }
         parameter low {
            position 2
            type _REAL
            vpath GLOBAL DEFAULT
            prompt {Value corresponding to lowest colour index}
            ppath GLOBAL DEFAULT
            default !
            association <-GLOBAL.DISP_SCALE_LOW
            helpkey *
          }
         parameter lut {
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF containing lookup table}
            default !
            helpkey *
          }
         parameter mode {
            position 1
            type LITERAL
            vpath DEFAULT
            prompt {Positioning method}
            ppath DEFAULT
            default CURSOR
            helpkey *
          }
         parameter nn {
            type _LOGICAL
            vpath DEFAULT
            prompt {Nearest-neighbour mapping of lookup table?}
            default FALSE
            helpkey *
          }
         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotation}
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }
         parameter ubound {
            type LITERAL
            prompt {Upper bound}
            ppath DYNAMIC
            helpkey *
          }

      }

      action mlinplot {
         alias {mlin(plot)}

         helplib {$KAPPA_HELP}

         parameter absaxs {
            type _INTEGER
            prompt {Dimension of the NDF to use as abscissa}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 1
          }

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Produce annotated axes?}
            default !
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 2
            type LITERAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Component to plot}
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 9
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of display device}
            helpkey *
          }

         parameter errbar {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Draw error bars on the graph?}
            helpkey *
            default FALSE
          }

         parameter freq {
            type _INTEGER
            prompt {Frequency of plotted error bars}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1
          }

         parameter key {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Plot a key of the offsets?}
            helpkey *
            default TRUE
          }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal and vertical position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.05
          }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
          }

         parameter labels {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Labels for each curve}
            helpkey *
            default !
          }

         parameter linlab {
            type _LOGICAL
            prompt {Should a label be included within each curve}
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            helpkey *
          }

         parameter lnindx {
            position 3
            type LITERAL
            prompt {Select lines to plot}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
          }

         parameter mode {
            position 4
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method for displaying the data curve}
            default Line
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image to be plotted}
            helpkey *
          }

         parameter offset {
            size *
            type _REAL
            vpath PROMPT
            ppath CURRENT
            prompt {Offset value for each line }
            helpkey *
          }
  
         parameter pens {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Pen definitions for each curve}
            helpkey *
            default !
          }

         parameter sigma {
            type _REAL
            prompt {Number of standard deviations for vertical error bars}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 1.0
          }

         parameter space {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Method to offset the lines}
            default AVERAGE
            helpkey *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and data curves}
            helpkey *
            default !
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {The axis to be annotated}
            default !
            helpkey *
          }

         parameter xleft {
            position 5
            type LITERAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter xright {
            position 6
            type LITERAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ybot {
            position 7
            type LITERAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ylog {
            type _LOGICAL
            prompt {Is the logarithm of the data to be displayed?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter ytop {
            position 8
            type LITERAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter zmark {
            type _LOGICAL
            prompt {Should zero point markers be drawn?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

      }

      action ovclear {
         alias {ovcl(ear)}

         helplib {$KAPPA_HELP}

         parameter current {
            position 2
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clear just the current picture?}
            default FALSE
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_OVERLAY
            prompt {Name of overlay device}
            helpkey *
          }

      }

      action ovset {
         alias {ovse(t)}

         helplib {$KAPPA_HELP}

         parameter device {
            position 1
            ptype DEVICE
            access READ
            vpath PROMPT
            prompt {Image-display overlay}
            helpkey *
            association ->GLOBAL.IMAGE_OVERLAY
          }

      }

      action paldef {
         alias {pald(ef)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Image-display device}
            helpkey *
          }

      }

      action palentry {
         alias {pale(ntry)}

         helplib {$KAPPA_HELP}

         parameter colour {
            size *
            position 2
            type LITERAL
            vpath PROMPT
            prompt {New palette colour}
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 3
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Image-display device}
            helpkey *
          }

         parameter palnum {
            position 1
            type _INTEGER
            vpath PROMPT
            prompt {Number of the palette entry to be modified}
            helpkey *
          }

      }

      action palread {
         alias {palr(ead)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Image-display device}
            helpkey *
          }

         parameter palette {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF containing the palette of reserved colours}
            helpkey *
          }

      }

      action palsave {
         alias {pals(ave)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Image-display device}
            helpkey *
          }

         parameter palette {
            position 1
            type NDF
            access WRITE
            vpath PROMPT
            prompt {NDF to save the palette of reserved colours}
            helpkey *
          }

         parameter title {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Title for the palette NDF}
            helpkey *
            default {Kappa - Palsave}
          }

      }

      action piccur {
         alias {picc(ur)}

         helplib {$KAPPA_HELP}

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system}
            association <->GLOBAL.COORD_SYSTEM
            helpkey *
            default Data
          }

         parameter device {
            ptype DEVICE
            position 4
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter double {
            type _LOGICAL
            prompt {Report co-ordinates in double precision?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter logfile {
            position 3
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to store cursor co-ordinates}
            default !
            helpkey *
          }

         parameter mode {
            position 1
            type LITERAL
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Co-ordinate system/picture mode}
            default Dynamic
            helpkey *
          }

         parameter name {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Name of pictures to be selected}
            default !
            helpkey *
          }

         parameter xc {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter yc {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

      }

      action picdef {
         alias {picd(ef) defp(ic)}

         helplib {$KAPPA_HELP}

         parameter aspect {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Aspect ratio of the new picture}
            helpkey *
            default !
          }

         parameter current {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Is the current picture to enclose the new picture?}
            helpkey *
            default FALSE
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter fill {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Linear filling factor}
            helpkey *
            default 1.0
          }

         parameter fraction {
            size *
            position 2
            type _REAL
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Linear fractions of the picture to form the new picture}
            helpkey *
            default 0.5
          }

         parameter labelno {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Label number of the bottom-left picture in the array}
            helpkey *
            default 1
          }

         parameter lbound {
            size *
            position 5
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Lower bound}
            helpkey *
          }

         parameter mode {
            position 1
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            default Cursor
            prompt {Which option is required ?}
            helpkey *
          }

         parameter outline {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Mark the new picture with a box?}
            helpkey *
            default TRUE
          }

         parameter prefix {
            type _CHAR
            vpath PROMPT
            ppath CURRENT
            prompt {Label prefix. Type ! to prevent labelling}
            helpkey *
            default !
          }

         parameter size {
            size *
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Dimensions of the new picture in centimetres}
            helpkey *
            default !
          }

         parameter ubound {
            size *
            position 6
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Upper bound}
            helpkey *
          }

         parameter xpic {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Number of pictures per line of the array}
            helpkey *
          }

         parameter ypic {
            position 4
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Number of pictures per column of the array}
            helpkey *
          }

      }

      action picempty {
         alias {picem(pty)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

      }

      action picentire {
         alias {pice(ntire)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

      }

      action picin {
         alias {pici(n)}

         helplib {$KAPPA_HELP}

         parameter comment {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter current {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Include current picture in search?}
            default FALSE
            helpkey *
          }

         parameter device {
            access READ
            position 2
            prompt {Graphics device}
            helpkey *
            vpath GLOBAL CURRENT
            ptype DEVICE
            association <-GLOBAL.GRAPHICS_DEVICE
          }

         parameter label {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter name {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Name of interior picture}
            default DATA
            helpkey *
          }

         parameter ncx1 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter ncx2 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter ncy1 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter ncy2 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter pname {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter rcx1 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter rcx2 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter rcy1 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter rcy2 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter refnam {
				 # picture
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter report {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Report results?}
            default TRUE
            helpkey *
          }

         parameter wcx1 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter wcx2 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter wcy1 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter wcy2 {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

      }

      action piclabel {
         alias {piclab(el)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter label {
            position 1
            type LITERAL
            vpath PROMPT
            prompt {Label to be given to the current picture}
            helpkey *
          }

      }

      action piclist {
         alias {picli(st)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 3
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter logfile {
            position 2
            type FILENAME
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to store list of pictures}
            default !
            helpkey *
          }

         parameter name {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Name of pictures to be selected}
            default !
            helpkey *
          }

         parameter picnum {
            type LITERAL
            access READ
            vpath PROMPT
            ppath DEFAULT
            prompt {Number of new current picture}
            default !
            helpkey *
          }

      }

      action picsel {
         alias {pics(el)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 2
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter label {
            position 1
            type _CHAR
            vpath PROMPT
            ppath CURRENT
            prompt {Label of the picture to be selected}
            helpkey *
          }

      }

      action pictrans {
         alias {pict(rans)}

         helplib {$KAPPA_HELP}

         parameter bound {
				 # bounds?
            position 4
            type _LOGICAL
            access WRITE
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system}
            association <->GLOBAL.COORD_SYSTEM
            helpkey *
            default Data
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter inxy {
            size *
            position 1
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Co-ordinates to be converted}
            helpkey *
          }

         parameter outx {
            position 2
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter outy {
            position 3
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter tobase {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT
            prompt {Convert to BASE-picture co-ordinates?}
            default TRUE
            helpkey *
          }

      }

      action picvis {
         alias {picv(is)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            position 1
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

      }

      action scatter {
         alias {scat(ter)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should graphics workstation be cleared?}
            default TRUE
            helpkey *
          }

         parameter comp1 {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Component to display on horizontal axis}
            helpkey *
            default Data
          }

         parameter comp2 {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Component to display on vertical axis}
            helpkey *
            default Data
          }

         parameter compress {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Compression factors}
            helpkey *
          }

         parameter device {
            position 5
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF for horizontal axis}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for vertical axis}
            helpkey *
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 1
            helpkey *
          }

         parameter perc1 {
            type _REAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Percentile range for horizontal axis}
            default (5 95)
            helpkey *
            size *
          }

         parameter perc2 {
            type _REAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Percentile range for vertical axis}
            default (5 95)
            helpkey *
            size *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
          }

         parameter xleft {
            type _REAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter xright {
            type _REAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ybot {
            type _REAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ytop {
            type _REAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

      }

      action snapshot {
         alias {snap(shot)}

         helplib {$KAPPA_HELP}

         parameter device {
            ptype DEVICE
            access READ
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.IMAGE_DISPLAY
            prompt {Display device}
            helpkey *
          }

         parameter negative {
            position 5
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Negative of the display?}
            helpkey *
            default TRUE
          }

         parameter odevice {
            ptype DEVICE
            position 1
            vpath PROMPT
            ppath CURRENT GLOBAL
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of output device}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath DEFAULT
            prompt {Output NDF}
            helpkey *
            default !
          }

         parameter planes {
            size *
            position 7
            type _INTEGER
            prompt {Image memory planes to dump}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default !
          }

         parameter scale {
            position 4
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.707
            prompt {Scale factor for output}
            helpkey *
          }

         parameter title {
            position 6
            type LITERAL
            prompt {Give the title of the plot}
            vpath DEFAULT
            helpkey *
            default !
          }

         parameter whole {
            position 3
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Whole memory? (As opposed to what is visible.) }
            helpkey *
            default FALSE
          }
 
      }

      action turbocont {
         alias {turb(ocont)}

         helplib {$KAPPA_HELP}

         parameter abslab {
            type LITERAL
            prompt {Give the label for the abscissa axis}
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC CURRENT
            helpkey *
            default X
          }

         parameter annota {
            type _LOGICAL
            prompt {Are the contours to be annotated?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter border {
            type _LOGICAL
            prompt {Is a border to be drawn about the contour plot?}
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to contour}
            helpkey *
            default Data
          }

         parameter concol {
            type LITERAL
            prompt {Colour of contours}
            vpath CURRENT DEFAULT
            ppath CURRENT
            helpkey *
            default 1
          }

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system}
            association <->GLOBAL.COORD_SYSTEM
            helpkey *
            default Data
          }

         parameter dashed {
            type _REAL
            prompt {Height below which contours are dashed}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 6
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter firstcnt {
            type _REAL
            prompt {Give the height of the first contour}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter font {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fount type?}
            default GKS
            helpkey *
          }

         parameter heights {
            size *
            type _REAL
            prompt {Give the heights of the contours}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter key {
            position 5
            type _LOGICAL
            prompt {Do you want a key of the contour plot and a title ?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter labelfreq {
            type _INTEGER
            prompt {Frequency of labelling of contour levels}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default 1
            helpkey *
          }

         parameter majtic {
            type _REAL
            prompt {Give the parameter controlling the numbers of major ticks for the x and y axes}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default 3. 3.
            size *
          }

         parameter maxres {
            type _LOGICAL
            prompt {Are the contours to be drawn at resolution limit?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter mintic {
            type _REAL
            prompt {Give the numbers of minor tick marks between major ticks for x and y axes}
            vpath DEFAULT
            ppath DEFAULT
            helpkey *
            default -1. -1.
            size *
          }

         parameter mode {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Method for selecting contour heights}
            helpkey *
          }

         parameter ncont {
            position 4
            type _INTEGER
            prompt {Give the number of contour heights}
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 6
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be contoured}
            helpkey *
          }

         parameter noisy {
            type _LOGICAL
            prompt {Are the annotations to be drawn at double normal frequency?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter ordlab {
            type LITERAL
            prompt {Give the label for the ordinate axis}
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC CURRENT
            helpkey *
            default Y
          }

         parameter outtic {
            type _LOGICAL
            prompt {Do you want the axis tick marks on the outside of the axes?}
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter penrot {
            type _LOGICAL
            prompt {Is the graphics pen to be cycled through 3 colours?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter percentiles {
            size *
            type _REAL
            prompt {Give the heights of the contours as percentiles}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter pltitl {
            type LITERAL
            prompt {Give the title of the plot}
            vpath DYNAMIC
            ppath DYNAMIC
            helpkey *
          }

         parameter pxsize {
            type _REAL
            prompt {Give size of the plot in the x-direction in metres}
            vpath DYNAMIC
            ppath DYNAMIC
            helpkey *
          }

         parameter pysize {
            type _REAL
            prompt {Give size of the plot in the y-direction in metres}
            vpath DYNAMIC
            ppath DYNAMIC
            helpkey *
          }

         parameter resolution {
            type _REAL
            prompt {Resolution factor}
            vpath DEFAULT
            default 2.0
            helpkey *
          }

         parameter stepcnt {
            type _REAL
            prompt {Give the interval between contour heights}
            vpath PROMPT
            ppath CURRENT DYNAMIC
            helpkey *
          }

         parameter thick {
            type _REAL
            prompt {Give the relative thickness of contours, axis lines and annotations}
            vpath DEFAULT
            default 1.0
            helpkey *
          }

      }

      action vecplot {
         alias {vecp(lot)}

         helplib {$KAPPA_HELP}

         parameter angrot {
            type _REAL
            prompt {Angle by which to rotate the vectors (in degrees)}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.0
          }

         parameter arrow {
            type _REAL
            position 6
            prompt {Fractional size of arrow heads}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.0
          }

         parameter axes {
            type _LOGICAL
            prompt {Are annotated axes to be drawn?}
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component to plot vector magnitudes}
            helpkey *
            default Data
          }

         parameter device {
            position 8
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter fill {
            type _LOGICAL
            prompt {Fill the plotting area?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter just {
            position 7
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Vector justification}
            default CENTRE
            helpkey *
          }

         parameter key {
            type _LOGICAL
            prompt {Do you want a key showing the vector scale?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter keypos {
            size *
            type _REAL
            prompt {Horizontal and vertical position of key}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default 0.05
          }

         parameter keystyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the key}
            helpkey *
            default !
          }

         parameter keyvec {
            type _REAL
            prompt {Key vector magnitude}
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter ndf1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF giving vector magnitudes}
            helpkey *
          }

         parameter ndf2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {NDF giving vector orientations}
            helpkey *
          }

         parameter step {
            position 4
            type _INTEGER
            prompt {Increment in pixels between adjacent vectors}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style for the annotated axes and vectors}
            helpkey *
            default !
          }

         parameter vscale {
            position 5
            type _REAL
            prompt {Data value for a 1-centimetre vector}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The axes to be annotated}
            helpkey *
          }

      }

   }

   executable kappa_mon {

      action add {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action aperadd {
         alias {aper(add)}

         parameter inpic {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image to be binned}
            help "Name of the IMAGE structure containing the 2-d data array to be examined"
          }

         parameter xcen {
            position 2
            type _REAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {x co-ordinate of circle centre}
            help "Give the x co-ordinate of the centre of the circle to be binned up"
          }

         parameter ycen {
            position 3
            type _REAL
            ppath CURRENT DYNAMIC
            vpath PROMPT
            prompt {y co-ordinate of circle centre}
            help "Give the y co-ordinate of the centre of the circle to be binned up"
          }

         parameter diam {
            position 4
            type _REAL
            ppath CURRENT DYNAMIC DEFAULT
            vpath PROMPT
            prompt {Diameter of circle}
            help "Give diameter (in pixels) of the circle to be binned"
            default 10.0
          }

         parameter logfile {
            position 5
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to log the results}
            default !
            help "Name of the text file to be used to record the statistics."
          }

         parameter again {
            position 6
            type _LOGICAL
            ppath DEFAULT
            vpath PROMPT
            prompt {Do you another aperture in the same 2-d array?}
            help "Option to select another aperture in same input data array. Type N to exit"
            default FALSE
          }

         parameter numpix {
            access WRITE
            type _INTEGER
            vpath DEFAULT
            prompt {Object to contain the number of pixels}
            default 0
          }

         parameter total {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the total value}
            default 0.0
          }

         parameter mean {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the mean value}
            default 0.0
          }

         parameter sigma {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the standard deviation}
            default 0.0
          }

         parameter noise {
           keyword sigma
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the standard deviation after binning}
            default 0.0
          }

      }

      action ardgen {
         alias {ardg(en)}

         helplib {$KAPPA_HELP}

         parameter ardout {
            position 1
            type FILENAME
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Name of the output text file}
            default ardfile.dat
            helpkey *
          }

         parameter device {
            position 4
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }
 
         parameter operands {
            size *
            type _INTEGER
            prompt {Indices of regions to combine or invert}
            ppath DYNAMIC
            vpath PROMPT
            helpkey *
          }

         parameter operator {
            type LITERAL
            prompt {How to combine the regions}
            ppath DYNAMIC DEFAULT
            vpath PROMPT
            default AND
            helpkey *
          }
 
         parameter option {
            position 3
            type LITERAL
            prompt {Next operation to perform}
            ppath DYNAMIC DEFAULT
            vpath PROMPT
            default MULTI
            helpkey *
          }

         parameter palnum {
            position 6
            type _INTEGER
            prompt {Pen number}
            ppath CURRENT DEFAULT
            vpath DEFAULT
            default 3
            helpkey *
          }

         parameter poicol {
            position 7
            type _INTEGER
            prompt {Points pen number?}
            ppath CURRENT DEFAULT
            vpath DEFAULT
            default 2
            helpkey *
          }
 
         parameter regions {
            size *
            type LITERAL
            vpath PROMPT
            prompt {Give a list of the indices of the regions to be deleted}
            helpkey *
          }

         parameter shape {
            position 2
            type LITERAL
            prompt {Region shape}
            ppath DYNAMIC DEFAULT
            vpath PROMPT
            default CIRCLE
            helpkey *
          }

         parameter startup {
            position 5
            type LITERAL
            prompt {Start up mode}
            ppath DEFAULT
            vpath DEFAULT PROMPT
            default Multi
            helpkey *
          }
 
      }

      action ardmask {
         alias {ardm(ask)}

         helplib {$KAPPA_HELP}

         parameter ardfile {
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Masking ARD file}
            default ardfile.dat
            helpkey *
          }

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system used in the ARD file}
            association <->GLOBAL.COORD_SYSTEM
            helpkey *
            default World
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be masked}
            help "*"
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Masked NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action block {
         alias {bloc(k)}

         helplib {$KAPPA_HELP}

         parameter box {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3 3
            prompt {Smoothing box size}
            helpkey *
            size *
          }

         parameter estimator {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default Mean
            prompt {Method for estimating smoothed pixel values}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {Output title}
            helpkey *
          }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
          }

      }

      action cadd {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Value to be added}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action calc {

         helplib {$KAPPA_HELP}

         parameter fa {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fb {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fc {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fd {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fe {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter ff {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fg {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fh {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fi {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fj {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fk {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fl {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fm {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fn {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fo {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fp {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fq {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fr {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fs {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter ft {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fu {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fv {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fw {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fx {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fy {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter fz {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CALC PARAMETERS FA-FZ
          }

         parameter exp {
            position 1
            type LITERAL
            prompt {Expression to evaluate}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter pa {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pb {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pc {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pd {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pe {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pf {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pg {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter ph {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pi {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 3.14159265359D0
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pj {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pk {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pl {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pm {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pn {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter po {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pp {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pq {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pr {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter ps {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pt {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pu {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pv {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pw {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter px {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter py {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter pz {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey CALC PARAMETERS PA-PZ
          }

         parameter prec {
            position 2
            type LITERAL
            prompt {Precision of the evaluation}
            vpath DEFAULT
            ppath CURRENT
            helpkey *
            default _REAL
          }

         parameter result {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

      }

      action calpol {
         alias {calp(ol)}

         helplib {$KAPPA_HELP}

         parameter debias {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Remove statistical bias?}
            helpkey *
          }

         parameter i {
            position 7
            type NDF
            access WRITE
            prompt {Total intensity }
            association ->GLOBAL.POL_I
            helpkey *
          }

         parameter in1 {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <->GLOBAL.POL_0
            prompt {0-degree intensity map}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            ppath CURRENT
            prompt {45-degree intensity map}
            association <->GLOBAL.POL_45
            helpkey *
          }

         parameter in3 {
            position 3
            type NDF
            access READ
            ppath CURRENT
            prompt {90-degree intensity map}
            association <->GLOBAL.POL_90
            helpkey *
          }

         parameter in4 {
            position 4
            type NDF
            access READ
            ppath CURRENT
            prompt {135-degree intensity map}
            association <->GLOBAL.POL_135
            helpkey *
          }

         parameter ia {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Total intensity from 0- and 90-degree intensities}
            helpkey *
          }

         parameter ib {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Total intensity from 45- and 135-degree intensities}
            helpkey *
          }

         parameter ip {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Polarised intensity}
            helpkey *
          }

         parameter p {
            position 5
            type NDF
            access WRITE
            association ->GLOBAL.POL_P
            prompt {Percentage polarisation}
            helpkey *
          }

         parameter q {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Normalise Stokes parameter Q}
            helpkey *
          }

         parameter theta {
            position 6
            type NDF
            access WRITE
            prompt {Polarisation angle}
            association ->GLOBAL.POL_THETA
            helpkey *
          }

         parameter u {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Normalised Stokes parameter U}
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Are variance values to be generated?}
            helpkey *
          }

      }

      action cdiv {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Division constant}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action centroid {
         alias {cent(roid)}

         helplib {$KAPPA_HELP}

         parameter centre {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the centroid position}
            default { }
            helpkey *
          }

         parameter cerror {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Calculate centroid errors?}
            helpkey *
            default FALSE
          }

         parameter coin {
            type FILENAME
            ppath CURRENT
            prompt {Text file containing initial positions}
            helpkey *
          }

         parameter coout {
            type FILENAME
            vpath DEFAULT
            ppath DEFAULT
            prompt {Text file to hold centroid positions}
            default !
            helpkey *
          }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter error {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the centroid errors}
            default { }
            helpkey *
          }

         parameter guess {
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Display initial guesses?}
            default FALSE
            helpkey *
          }

         parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list containing initial positions}
            helpkey *
          }

         parameter init {
            position 3
            type LITERAL
            ppath CURRENT DYNAMIC
            prompt {Initial position}
            helpkey *
          }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store the screen output}
            default !
            helpkey *
          }

         parameter mark {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Positions to mark}
            helpkey *
            default Centroid
          }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {The PGPLOT type for position markers}
            default 2
            helpkey *
          }

         parameter maxiter {
            position 5
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            default 9
            prompt {Maximum number of iterations}
            helpkey *
          }

         parameter maxshift {
            size *
            position 6
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            default 9.0
            prompt {Maximum shift between guess and output}
            helpkey *
          }

         parameter mode {
            position 2
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode used to obtain initial positions}
            default Interface
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Array to be analysed}
            helpkey *
          }

         parameter nsim {
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            default 100
            prompt {Number of simulations to estimate the errors}
            helpkey *
          }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            association ->GLOBAL.CATALOGUE
            prompt {Output positions list}
            default !
            helpkey *
          }

         parameter plotstyle {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Style for graphics markers}
            helpkey *
            default !
          }

         parameter positive {
            type _LOGICAL
            ppath DEFAULT
            vpath DEFAULT
            default TRUE
            prompt {Array features positive}
            helpkey *
          }

         parameter quiet {
            type _LOGICAL
            ppath DEFAULT
            vpath DEFAULT
            default FALSE
            prompt {Suppress screen output?}
            helpkey *
          }

         parameter search {
            size *
            position 4
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            default 9
            prompt {Size of search box in pixels}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output positions list}
            default !
            helpkey *
          }

         parameter toler {
            position 7
            type _REAL
            vpath DEFAULT
            ppath DEFAULT
            default 0.05
            prompt {Accuracy required}
            helpkey *
          }

         parameter useaxis {
            type LITERAL
            ppath DEFAULT
            vpath DYNAMIC DEFAULT
            prompt {The axes to use}
            default !
            helpkey *
          }

         parameter xcen {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the x centroid position}
            default { }
            helpkey *
          }

         parameter xerr {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the x centroid error}
            default { }
            helpkey *
          }

         parameter ycen {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the y centroid position}
            default { }
            helpkey *
          }

         parameter yerr {
            access WRITE
            type LITERAL
            vpath DEFAULT
            prompt {Object to contain the y centroid error}
            default { }
            helpkey *
          }

      }

      action chpix {
         alias {chpi(x)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be modified}
            help "*"
          }

         parameter newval {
            position 4
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {New value for the section}
            default 0.0
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter section {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Section to be set to a constant}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action cmult {
         alias {cmul(t)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Multiplication constant}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action collapse {
         helplib {$KAPPA_HELP}
         parameter axis {
            position 3
            type LITERAL
            prompt {The axis to be collapsed}
            ppath DYNAMIC
            helpkey *
          }
         parameter estimator {
            position 6
            type LITERAL
            vpath DEFAULT
            prompt {Method for estimating collapsed pixel values}
            ppath CURRENT DEFAULT
            default Mean
            helpkey *
          }
         parameter high {
            position 5
            type LITERAL
            vpath DEFAULT
            prompt {Axis value at end of collapsed range}
            ppath DYNAMIC
            default !
            helpkey *
          }
         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF}
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            helpkey *
          }
         parameter low {
            position 4
            type LITERAL
            vpath DEFAULT
            prompt {Axis value at start of collapsed range}
            ppath DYNAMIC
            default !
            helpkey *
          }
         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            prompt {Output NDF}
            association ->GLOBAL.DATA_ARRAY
            helpkey *
          }
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Output title}
            ppath DYNAMIC
            default !
            helpkey *
          }
         parameter wlim {
            type _REAL
            vpath DEFAULT
            prompt {Weight limit for good output pixels}
            ppath CURRENT DEFAULT
            default 0.3
            helpkey *
          }
      }

      action compadd {
         alias {compad(d)}

         helplib {$KAPPA_HELP}

         parameter align {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default ORIGIN
            prompt {Position for a compresion box corner}
            helpkey *
         }

         parameter axweight {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Compute weighted axis centres?}
            helpkey *
          }

         parameter compress {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Compression factors}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be compressed}
            helpkey *
          }

         parameter normal {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Normalise summations for bad values?}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being compressed}
            helpkey *
          }

         parameter preserve {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Preserve input data type in output NDF?}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter trim {
            type _LOGICAL
            vpath CURRENT,DEFAULT
            ppath CURRENT,DEFAULT
            default TRUE
            prompt {Trim input NDF to a whole number of compression boxes?}
            helpkey *
          }

         parameter wlim {
            position 4
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.3
            prompt {Weight limit for good output pixels}
            helpkey *
          }

      }

      action compave {
         alias {compav(e)}

         helplib {$KAPPA_HELP}

         parameter align {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default ORIGIN
            prompt {Position for a compresion box corner}
            helpkey *
         }

         parameter axweight {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Compute weighted axis centres?}
            helpkey *
          }

         parameter compress {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Compression factors}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be compressed}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being compressed}
            helpkey *
          }

         parameter preserve {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Preserve input data type in output NDF?}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter trim {
            type _LOGICAL
            vpath CURRENT,DEFAULT
            ppath CURRENT,DEFAULT
            default TRUE
            prompt {Trim input NDF to a whole number of compression boxes?}
            helpkey *
          }

         parameter weight {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Compute weighted averages using variance?}
            helpkey *
          }

         parameter wlim {
            position 4
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.3
            prompt {Weight limit for good output pixels}
            helpkey *
          }

      }

      action compick {
         alias {compi(ck)}

         helplib {$KAPPA_HELP}

         parameter compress {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Compression factors}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be compressed}
            helpkey *
          }

         parameter origin {
            size *
            position 4
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Pixel indices of the first selected element.}
            default !
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being compressed}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action convolve {
         alias {conv(olve)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
          }

         parameter psf {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {NDF containing the convolution function or PSF}
            helpkey *
          }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            default !
            prompt {Output title}
            helpkey *
          }

         parameter wlim {
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
          }
  
         parameter xcentre {
            position 4
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
          }

         parameter ycentre {
            position 5
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
          }

      }

      action copybad {
         alias {copyb(ad)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
          }

         parameter ref {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Reference NDF}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action creframe {
         alias {cref(rame)}

         parameter xdim {
            position 1
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {x dimension of output array}
            help "Give the x dimension of the array to contain the generated data"
          }

         parameter ydim {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {y dimension of output array}
            help "Give the y dimension of the array to contain the generated data"
          }

         parameter typed {
            position 4
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Type of data to be generated}
            help "Current allowable types : GS,RR,RL,RP,RA,FL,BL,GN - see full help or paper documentation for further details"
          }

         parameter low {
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Lower limit for data}
            help "Give the lower intensity limit for the generated data array"
          }

         parameter high {
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Upper limit for data}
            help "Give the upper intensity limit for the generated data array"
          }

         parameter mean {
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Mean intensity}
            help "Give the mean intensity figure for the generated data array"
          }

         parameter sigma {
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Standard deviation of the noise.}
            help "Give the standard deviation of the noise about the mean for the generated data array"
          }

         parameter dirn {
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Direction of ramping}
            help "1 = L-R : 2 = R-L : 3 = B-T : 4 = T-B, where L is left, R is right, B is bottom and T is top."
          }

         parameter max {
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Maximum peak intensity for Gaussians}
            help "Give the value to be used as the upper limit to Gaussians' peak values"
          }

         parameter min {
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Minimum peak intensity for Gaussians}
            help "Give the value to be used as the lower limit to Gaussians' peak values"
          }

         parameter background {
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Background value}
            help "Give the value to be taken for the background in the data array"
          }

         parameter ngauss {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Number of Gaussians}
            help "Give the number of Gaussians to be generated by the application"
          }

         parameter seeing {
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Full-width half-maximum of Gaussians in pixels}
            help "FWHM is equivalent to the seeing or 2.354 standard deviations"
          }

         parameter distrib {
            type LITERAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Type of radial distribution (RSQ,FIX)}
            help "Give the radial distribution type - 1/r-squared or fixed"
          }

         parameter badpix {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Bad pixels to be included ?}
            help "Whether or not bad pixels are to be included in the array"
            default FALSE
          }

         parameter fraction {
            type _REAL
            access READ
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Fraction of bad pixels}
            help "Give the fraction of pixels in the data array to be set to bad-pixel value"
          }

         parameter badcol {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Bad column to be included ?}
            help "Whether or not a bad column is to be placed in the data array"
            default FALSE
          }

         parameter screen {
            type _LOGICAL
            access READ
            vpath DYNAMIC
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Report Gaussian parameters?}
            default FALSE
            help "If yes, the Gaussian parameters will be printed on the screen. Otherwise in a file"
          }

         parameter filename {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename for output}
            default !
            help "Name of the ASCII file to be used for storing the Gaussian parameters"
          }

         parameter outpic {
            position 3
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Image for output data}
            help "Name given to the IMAGE data structure to hold the generated data array"
          }

         parameter otitle {
            type _CHAR
            vpath DEFAULT
            prompt {Title for output array}
            default {KAPPA - Creframe}
            help "Character string used as a title for the output IMAGE structure."
          }

      }

      action csub {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Value to be subtracted}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action div {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action errclip {
         alias {errc(lip)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
          }

         parameter limit {
            position 3
            type _DOUBLE
            access READ
            prompt {Limiting value}
            helpkey *
          }

         parameter mode {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            default SIGMA
            prompt {Quantity to limit}
            helpkey *
          }

      }

      action expon {

         helplib {$KAPPA_HELP}

         parameter base {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Base}
            default Natural
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action ffclean {
         alias {ffcl(ean)}

         helplib {$KAPPA_HELP}

         parameter box {
            position 4
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3 3
            prompt {Smoothing box size}
            helpkey *
            size *
          }

         parameter clip {
            position 3
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3.0 3.0 3.0
            prompt {Clipping levels}
            helpkey *
            size *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Give image to be cleaned}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold the cleaned image}
            helpkey *
          }

         parameter ilevel {
            position 7
            type _INTEGER
            vpath DEFAULT
            prompt {Interaction level}
            default 2
            helpkey *
          }
   
         parameter sigma {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the RMS noise per pixel}
            default 0.0
            helpkey *
          }
   
         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter thresh {
            size *
            position 5
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Data-value limits}
            helpkey *
          }

         parameter wlim {
            position 6
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
          }

      }

      action fillbad {
         alias {fill(bad)}

         helplib {$KAPPA_HELP}

         parameter block {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 512
            prompt {Maximum block dimension}
            helpkey *
          }

         parameter cngmax {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the maximum change}
            default 0.0
            helpkey *
          }
   
         parameter cngrms {
            access WRITE
            type _DOUBLE
            vpath DEFAULT
            prompt {Object to contain the RMS change}
            default 0.0
            helpkey *
          }
   
         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Give image to be cleaned}
            helpkey *
          }

         parameter memory {
            type _LOGICAL
            prompt {Is the array to be processed in blocks?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter niter {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 2
            prompt {Number of iterations}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold the cleaned image}
            helpkey *
          }

         parameter size {
            position 4
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 5.0
            prompt {Initial scale length in pixels}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Are variance values to be generated?}
            helpkey *
          }

      }

      action fitsurface {
         alias {fitsu(rface)}

         helplib {$KAPPA_HELP}

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system}
            association <->GLOBAL.COORD_SYSTEM
            default World
            helpkey *
          }

         parameter fittype {
            position 2
            type LITERAL
            vpath DEFAULT
				 # implemented
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Type of the fit}
            default Polynomial
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to be fitted}
            helpkey *
          }

         parameter nxpar {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Number of fitting parameters in the x direction}
            default 4
            range 1 15
            helpkey *
          }

         parameter nypar {
            position 4
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Number of fitting parameters in the y direction}
            default 4
            range 1 15
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Weight using variance array, if available?}
            default TRUE
            helpkey *
          }

         parameter overwrite {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Overwrite any existing surface fit?}
            default TRUE
            helpkey *
          }

         parameter xmax {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Maximum X co-ordinate for fit}
            helpkey *
          }

         parameter xmin {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Minimum X co-ordinate for fit}
            helpkey *
          }

         parameter ymax {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Maximum Y co-ordinate for fit}
            helpkey *
          }

         parameter ymin {
            type _DOUBLE
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Minimum Y co-ordinate for fit}
            helpkey *
          }

      }

      action flip {

         helplib {$KAPPA_HELP}

         parameter axis {
            type _LOGICAL
            access READ
            vpath {DEFAULT }
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Flip associated axis values?}
            helpkey *
          }

         parameter dim {
            position 3
            type _INTEGER
            access READ
            vpath {PROMPT }
            ppath CURRENT
            prompt {Dimension to reverse pixels along}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF data structure}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath {DEFAULT }
            ppath CURRENT
            default !
            prompt {Title for output NDF}
            helpkey *
          }

      }

      action fourier {
         alias {four(ier)}

         helplib {$KAPPA_HELP}

         parameter fillval {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Fill and padding value}
            helpkey *
            default 0.0
          }

         parameter hermin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Hermitian Fourier transform}
            helpkey *
          }

         parameter hermout {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Hermitian-Fourier-transform NDF}
            helpkey *
          }

         parameter hm_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output Hermitian NDF}
            default {KAPPA - Fourier - Hermitian}
            helpkey *
          }

         parameter im_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output imaginary-transform NDF}
            default {KAPPA - Fourier - Imaginary}
            helpkey *
          }

         parameter imagin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform imaginary component}
            helpkey *
            default !
          }

         parameter imagout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for imaginary part of Fourier transform}
            helpkey *
            default !
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be transformed}
            helpkey *
          }

         parameter inverse {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Inverse transformation?}
            helpkey *
            default FALSE
          }

         parameter out {
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Real NDF to be created}
            helpkey *
          }

         parameter ph_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output power NDF}
            default {KAPPA - Fourier - Phase}
            helpkey *
          }

         parameter phasein {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform phase component}
            helpkey *
            default !
          }

         parameter phaseout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for phase part of Fourier transform}
            helpkey *
            default !
          }

         parameter powerin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform power component}
            helpkey *
            default !
          }

         parameter powerout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for power part of Fourier transform}
            helpkey *
            default !
          }

         parameter pw_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output power NDF}
            default {KAPPA - Fourier - Power}
            helpkey *
          }

         parameter realin {
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF for Fourier transform real component}
            helpkey *
            default !
          }

         parameter realout {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF for real part of Fourier transform}
            helpkey *
            default !
          }

         parameter rl_title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output real-transform NDF}
            default {KAPPA - Fourier - Real}
            helpkey *
          }

         parameter shift {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Locate transform's origin at centre?}
            helpkey *
            default FALSE
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output real NDF}
            default {KAPPA - Fourier}
            helpkey *
          }

         parameter trim {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Trim output arrays if necessary?}
            helpkey *
            default FALSE
          }

      }

      action gausmooth {
         alias {gausm(ooth)}

         helplib {$KAPPA_HELP}

         parameter box {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Smoothing box size}
            helpkey *
          }

         parameter fwhm {
            size *
            position 3
            type _REAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 2.0
            prompt {Gaussian PSF full-width(s) at half-maximum}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter orient {
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Orientation of the elliptical PSF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Output title}
            helpkey *
          }

         parameter wlim {
            type _DOUBLE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Weight limit for good output pixels}
            helpkey *
          }

      }

      action glitch {
         alias {glit(ch)}

         helplib {$KAPPA_HELP}

          parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input image}
            helpkey *
          }

          parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <->GLOBAL.CATALOGUE
            prompt {Positions list containing bad pixel positions}
            helpkey *
          }

          parameter infile {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File containing the bad pixel positions}
            helpkey *
          }

          parameter mode {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode to obtain pixel positions}
            default Interface
            helpkey *
          }

          parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            helpkey *
          }

          parameter pixpos {
            type LITERAL
            ppath DYNAMIC
            prompt {Bad pixel position}
            helpkey *
          }

          parameter title {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Title for output image}
            default !
            helpkey *
          }

      }

      action globals {
         alias {glob(als)}

         helplib {$KAPPA_HELP}

      }

      action histat {
         alias {hista(t)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 2
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
          }

         parameter logfile {
            position 4
            type FILENAME
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {File for logging results}
            helpkey *
          }

         parameter maxcoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter maximum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter maxpos {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter median {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter mincoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter minimum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter minpos {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter mode {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to analyse}
            helpkey *
          }

         parameter numbad {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter numbin {
            position 5
            type _INTEGER
            vpath DEFAULT
            default 2048
            prompt {Number of histogram bins}
            helpkey *
          }

         parameter numgood {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter numpix {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter percentiles {
            size *
            position 3
            type _REAL
            vpath DEFAULT
            prompt {List of percentiles}
            default !
            helpkey *
          }

         parameter perval {
            size *
            access WRITE
            type _DOUBLE
            vpath INTERNAL
            helpkey *
          }

         parameter total {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

      }

      action histeq {
         alias {histe(q)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be transformed}
            helpkey *
          }

         parameter numbin {
            position 3
            type _INTEGER
            vpath DEFAULT
            default 2048
            prompt {Number of histogram bins}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after transformation}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action histogram {
         alias {histo(gram)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 4
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF to analyse}
            helpkey *
          }

         parameter logfile {
            position 5
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {File for logging results}
            helpkey *
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter numbin {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            default 20
            prompt {Number of histogram bins}
            helpkey *
          }

         parameter out {
            type NDF
            access WRITE
            vpath DEFAULT
            ppath CURRENT
            prompt {NDF in which to store histogram}
            helpkey *
            default !
          }

         parameter range {
            size *
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DEFAULT
            default !
            prompt {Range of values in the histogram}
            helpkey *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT
            prompt {Title for histogram NDF}
            default {KAPPA - Histogram}
            helpkey *
          }

         parameter xleft {
            type _REAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter xlog {
            type _LOGICAL
            prompt {Is the abscissa to be plotted logarithmically?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter xright {
            type _REAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ybot {
            type _REAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ylog {
            type _LOGICAL
            prompt {Is the ordinate to be plotted logarithmically?}
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter ytop {
            type _REAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

      }

iraf! {

      icl {defstring kaph(elp) !$KAPPA_DIR/kaphelp}
      icl {defstring kap_kaph(elp) !$KAPPA_DIR/kaphelp}
      action kaphelp {
         alias {kaph(elp)}

         helplib {$KAPPA_HELP}

         parameter topic {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help topic}
            default {         }
            helpkey *
          }

         parameter subtopic {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subtopic}
            default {         }
            helpkey *
          }

         parameter subsubtopic {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subsubtopic}
            default {         }
            helpkey *
          }

         parameter subsubsubtopic {
            position 4
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subsubsubtopic}
            default {         }
            helpkey *
          }

      }
}

      action laplace {
         alias {lapl(ace)}

         parameter inpic {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be convolved}
            help "Name of the IMAGE structure containing the 2-d data array on which the Laplacian convolution is performed"
          }

         parameter number {
            position 2
            type _INTEGER
            vpath DEFAULT
            default 1
            prompt {Number of Laplacians removed}
            help "Give the integer number of Laplacians to be removed from the input data array"
          }

         parameter outpic {
            position 3
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Image after convolution}
            help "Name given to the IMAGE structure to hold the convolved data array"
          }

         parameter otitle {
            position 4
            type _CHAR
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Laplace}
            help "Character string to be used as a title for the output IMAGE data structure"
          }

      }

      action kstest {
         alias {kste(st)}

         helplib {$KAPPA_HELP}
 
         parameter comp {
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
          }

         parameter dist {
            size *
				 # distributions.
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0
            helpkey *
          }

         parameter errmean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter files {
            size *
            type _CHAR
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
          }

         parameter in {
            position 1
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Name of the input files containing data to be compared}
            helpkey *
          }

         parameter limit {
            position 3
            type _REAL
            vpath DEFAULT
            ppath CURRENT
            prompt {Confidence level at which subsamples are rejected}
            default 0.05
            helpkey *
          }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter nkept {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter nsample {
            type _INTEGER
            vpath DYNAMIC
            ppath CURRENT
            prompt {Number of subsamples}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            default !
            association ->GLOBAL.DATA_ARRAY
            prompt {Name of file to contain consistent output data}
            helpkey *
          }

         parameter prob {
            size *
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0
            helpkey *
          }

         parameter sigma {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }
 
      }

      action logar {
         alias {loga(r)}

         helplib {$KAPPA_HELP}

         parameter base {
            position 3
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Base}
            default Natural
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action look {

         parameter inpic {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image to be inspected}
            help "Give name of the IMAGE structure holding the 2-d data array to be inspected."
          }

         parameter choice {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            default Peep
            prompt {Peep, Examine or List}
            help "Peep lists a 7x7 neighbourhood to screen, Examine reports an NxM box to screen, List gives a listing to a file."
          }

         parameter xcen {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {x centre pixel index of 7x7 box}
            help "Give the x centre pixel index of the sub-array to be peeped."
          }

         parameter ycen {
            type _INTEGER
            vpath PROMPT
            access READ
            ppath CURRENT DYNAMIC
            prompt {y centre pixel index of 7x7 box}
            help "Give the y centre pixel index of the sub-array to be peeped."
          }

         parameter xlow {
            type _INTEGER
            vpath PROMPT
            access READ
            ppath CURRENT DYNAMIC
            prompt {x start pixel index of sub-array}
            help "Give the x start pixel index of the sub-array to be inspected."
          }

         parameter ylow {
            type _INTEGER
            vpath PROMPT
            access READ
            ppath CURRENT DYNAMIC
            prompt {y start pixel index of sub-array}
            help "Give the y start pixel index of the sub-array to be inspected."
          }

         parameter xsize {
            type _INTEGER
            vpath PROMPT
            access READ
            ppath DYNAMIC
            prompt {x size of sub-array}
            help "Give the x size of the sub-array to be inspected."
          }

         parameter ysize {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {y size of sub-array}
            help "Give the y size of the sub-array to be inspected."
          }

         parameter filename {
            type FILENAME
            access READ
            vpath PROMPT
            ppath DEFAULT
            default lookout.lis
            prompt {Name of listing file}
            help "Give name of the text file to contain the sub-array listing."
          }

         parameter another {
            type _LOGICAL
            access READ
            vpath PROMPT
            ppath DEFAULT
            default TRUE
            prompt {Another inspection ?}
            help "Answer YES if another sub-array is to be peeped or listed."
          }

      }

      action lucy {

         helplib {$KAPPA_HELP}

         parameter aim {
            position 4
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            prompt {Target normalised chi-squared}
            helpkey *
          }

         parameter back {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding the background data}
            helpkey *
          }

         parameter backval {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0
            prompt {Constant-background data value}
            helpkey *
          }

         parameter chifac {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            prompt {Target normalised chi-squared}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
          }

         parameter niter {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 50
            prompt {Maximum number of iterations to perform}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
          }

         parameter psf {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {An NDF holding the PSF}
            helpkey *
          }

         parameter sigma {
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Standard deviation of the noise}
            helpkey *
          }

         parameter snyder {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use the Snyder modification?}
            helpkey *
          }

         parameter start {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding a guess at the restored image}
            helpkey *
          }

         parameter thresh {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0625
            prompt {Truncation fractional threshold of PSF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Use variances stored in the input NDF?}
            helpkey *
          }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.001
            prompt {Weight limit for good output pixels}
            helpkey *
          }

         parameter xcentre {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
          }

         parameter ycentre {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
          }

      }

      action manic {
         alias {mani(c)}

         parameter input {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input image}
            help "Name of the IMAGE structure containing the input data array."
          }

         parameter output {
            position 2
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            help "Name of the IMAGE structure to store output data array."
          }

         parameter otitle {
            position 3
            type _CHAR
            vpath DEFAULT
            prompt {Output image title}
            default {KAPPA - Manic}
            help "Character string used as a title for the output IMAGE structure."
          }

         parameter ondim {
            position 4
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Dimensionality of output image}
            help "Number of dimensions for the output image.  It must be 1, 2 or 3."
          }

         parameter xlimits {
            position 5
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Window limits for the X-axis of the input data array}
            help "Give a contiguous range of X-axis pixels that form the output data array."
          }

         parameter ylimits {
            position 6
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Window limits for the Y-axis of the input data array}
            help "Give a contiguous range of Y-axis pixels that form the output data array."
          }

         parameter zlimits {
            position 7
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Window limits for the Z-axis of the input data array}
            help "Give a contiguous range of Z-axis pixels that form the output data array."
          }

         parameter xrange {
            position 8
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Range for summation over the X-axis of the input data array}
            help "Give a contiguous range of X-axis pixels that are going to be summed in forming the output data array."
          }

         parameter yrange {
            position 9
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Range for summation over the Y-axis of the input data array}
            help "Give a contiguous range of Y-axis pixels that are going to be summed in forming the output data array."
          }

         parameter zrange {
            position 10
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC
            prompt {Range for summation over the Z-axis of the input data array}
            help "Give a contiguous range of Z-axis pixels that are going to be summed in forming the output data array."
          }

         parameter eplane {
            position 11
            type _CHAR
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Plane of the input data array from which the output array is to be extracted}
            help "Options are: XY, YZ, or XZ."
          }

         parameter gplane {
            position 12
            type _CHAR
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Plane of the output data array which the input data array will form}
            help "Options are: XY, YZ, or XZ."
          }

         parameter eline1 {
            position 13
            type _CHAR
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Axis of the input data array that will be used to form the output data array?}
            help "Alternatives are X or Y."
          }

         parameter eline2 {
            position 14
            type _CHAR
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Axis of the input data array that will be used to form the output data array}
            help "Options are X, Y or Z."
          }

         parameter gline1 {
            position 15
            type _CHAR
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Axis of the output data array that the input data array will form}
            help "Alternatives are X or Y."
          }

         parameter gline2 {
            position 16
            type _CHAR
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Axis of the output data array that the input data array will form}
            help "Options are X, Y or Z."
          }

         parameter xdim {
            position 17
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {X-dimension for the output data array}
          }

         parameter ydim {
            position 18
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Y-dimension for the output data array}
          }

         parameter zdim {
            position 19
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Z-dimension for the output data array}
          }

         parameter loop {
            position 20
            type _LOGICAL
            vpath PROMPT
            ppath DEFAULT
            default FALSE
            prompt {Produce another output IMAGE structure and data array?}
          }

      }

      action makesurface {
         alias {makes(urface)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF containing coefficients}
            helpkey *
          }

         parameter lbound {
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Lower bounds of the output NDF}
            helpkey *
            default 1 1
            size *
          }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath GLOBAL DEFAULT
            association <-GLOBAL.DATA_ARRAY
            prompt {Template NDF (null for none)}
            helpkey *
            default !
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to contain surface}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Title for the new NDF}
            helpkey *
            default !
          }

         parameter type {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Data type of output NDF}
            helpkey *
            default _DOUBLE
          }

         parameter ubound {
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Upper bounds of the output NDF}
            helpkey *
            default 512 512
            size *
          }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Create a variance error?}
            helpkey *
            default FALSE
          }

         parameter xlimit {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {X co-ordinate limits (lower then upper)}
            helpkey *
          }

         parameter ylimit {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {Y co-ordinate limits (lower then upper)}
            helpkey *
          }

      }

      action maths {
         alias {math(s)}

         helplib {$KAPPA_HELP}

         parameter exp {
            position 1
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Expression}
            helpkey *
          }

         parameter fa {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fb {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fc {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fd {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fe {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter ff {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fg {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fh {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fi {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fj {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fk {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fl {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fm {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fn {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fo {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fp {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fq {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fr {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fs {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter ft {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fu {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fv {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fw {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fx {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fy {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }

         parameter fz {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey MATHS Parameters FA-FZ
          }
         parameter ia {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ib {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ic {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter id {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ie {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter if {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ig {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ih {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ii {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ij {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ik {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter il {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter im {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter in {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter io {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ip {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter iq {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ir {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter is {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter it {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter iu {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter iv {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter iw {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter ix {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter iy {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter iz {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure}
            helpkey MATHS Parameters IA-IZ
          }

         parameter lbound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Lower bounds of the output NDF}
            helpkey *
          }

         parameter like {
            type NDF
            access READ
            vpath DEFAULT
            ppath GLOBAL DEFAULT
            association <-GLOBAL.DATA_ARRAY
            prompt {Template NDF (null for none)}
            helpkey *
            default !
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey MATHS Parameters OUT
          }

         parameter pa {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pb {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pc {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pd {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pe {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pf {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pg {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter ph {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pi {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pj {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pk {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pl {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pm {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pn {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter po {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pp {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pq {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pr {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter ps {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pt {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pu {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pv {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pw {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter px {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter py {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter pz {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Parametric constant}
            helpkey MATHS Parameters PA-PZ
          }

         parameter quick {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Calculate output variance by quick method?}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter type {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Data type of output NDF}
            helpkey *
            default _REAL
          }

         parameter ubound {
            size *
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Upper bounds of the output NDF}
            helpkey *
          }

         parameter units {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Propagate NDF units to output?}
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Calculate output variance?}
            helpkey *
          }

         parameter va {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vb {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vc {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vd {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter ve {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vf {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vg {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vh {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vi {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vj {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vk {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vl {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vm {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vn {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vo {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vp {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vq {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vr {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vs {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vt {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vu {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vv {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vw {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vx {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vy {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

         parameter vz {
            type NDF
            access READ
            vpath PROMPT
            prompt {Input NDF structure for variance}
            helpkey MATHS Parameters VA-VZ
          }

      }

      action median {
         alias {medi(an)}

         helplib {$KAPPA_HELP}

         parameter bound {
            position 5
            type LITERAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Reflect or Replicate at image edge}
            helpkey *
            default Replicate
          }

         parameter centre {
            position 8
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Centre value for weighting function}
            helpkey *
            default 3
          }

         parameter corner {
            position 7
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Corner value for weighting function}
            helpkey *
            default 1
          }

         parameter diff {
            position 4
            type _DOUBLE
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Threshold for replacement by median.}
            default 0.0
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image for filtering with weighted median filter}
            helpkey *
          }

         parameter iterate {
            type LITERAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Specified or Continuous iteration}
            helpkey *
            default Specified
          }

         parameter maxit {
            type _INTEGER
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Number of iterations before damping}
            helpkey *
            default 10
          }

         parameter medthr {
            type _REAL
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Fractional threshold for sorted actual median position}
            default 0.8
            helpkey *
          }

         parameter mode {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Type of WMF to use, reply -1 -> 7}
            helpkey *
            default 0
          }

         parameter numit {
            position 6
            type _INTEGER
            vpath DYNAMIC
            ppath CURRENT DYNAMIC
            prompt {Number of iterations of filter}
            helpkey *
            default 1
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold filtered data}
            helpkey *
          }

         parameter side {
            position 9
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Side value for weighting function}
            helpkey *
            default 1
          }

         parameter step {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC
            prompt {Stepsize(s) for weighting function}
            helpkey *
            default 1
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {Output title}
            helpkey *
          }

      }

      action mosaic {
         alias {mosa(ic)}

         parameter number {
            position 1
            type _INTEGER
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Number of images to be put in a mosaic}
            help "Give the total number of data arrays be to made into a mosaic data array (max. 20)"
          }

         parameter inpic1 {
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic2 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic3 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic4 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic5 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic6 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic7 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic8 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic9 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic10 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic11 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic12 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic13 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic14 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic15 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic16 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic17 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic18 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic19 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter inpic20 {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Image to be added}
            help "Name of the IMAGE structure containing the next 2-d data array to be added"
          }

         parameter xoffset {
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {x offset of the array from the first}
            help "Give the x offset in pixels of the current data array from the first data array input"
          }

         parameter yoffset {
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {y offset of the array from the first}
            help "Give the y offset in pixels of the current data array from the first data array input"
          }

         parameter outpic {
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Mosaic image}
            help "Name given to the IMAGE structure to hold the mosaic data array"
          }

         parameter otitle {
            type _CHAR
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Mosaic}
            help "Character string used as a title for the output IMAGE structure."
          }

         parameter average {
            type _LOGICAL
            access READ
            vpath DEFAULT
            prompt {Are overlapped input pixels to be averaged in the output array?}
            help "Input pixels may be occupy the same position in the output array. So output pixels can be averaged or summed"
            default TRUE
          }

      }

      action mstats {
         alias {msta(ts)}

         parameter inmode {
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {File input mode}
            default Sequential
            help "Sequential works out a sequence from the first IMAGE name, Random asks for each name."
          }

         parameter pixmode {
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            prompt {Pixel mode}
            default Box
            help "Single is for just one pixel, Box is for a defined sub-array."
          }

         parameter inpic {
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Image to be processed}
            help "Give name of the IMAGE structure holding the 2-d data array to be processed."
          }

         parameter firstfile {
            type LITERAL
            access READ
            vpath PROMPT
            prompt {Name of first file}
            help "Give name of first IMAGE file in sequence to be processed. Format for sequential is namennnn, e.g. SKY0010."
          }

         parameter numseq {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {Number of frames in sequence}
            help "Give the number of frames in sequence (including first and last), e.g. there are 10 frames in F0011 to F0020."
          }

         parameter numran {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {Number of random frames}
            help "Give the number of frames to be typed in by hand, one by one."
          }

         parameter xpix {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {x pixel index of pixel}
            help "Give the x pixel index of the single pixel to be examined."
          }

         parameter ypix {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {y pixel index of pixel}
            help "Give the y pixel index of the single pixel to be examined."
          }

         parameter ordrst {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Are ordered statistics required ?}
            default FALSE
            help "If no arrays containing means and standard deviations will be created, else an array of medians is produced."
          }

         parameter xstart {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {x start pixel index of sub-array}
            help "Give the x start pixel index of the sub-array to be analysed."
          }

         parameter ystart {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {y start pixel index of sub-array}
            help "Give the y start pixel index of the sub-array to be analysed."
          }

         parameter xsize {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {x size of sub-array}
            help "Give the x size of the sub-array to be analysed."
          }

         parameter ysize {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {y size of sub-array}
            help "Give the y size of the sub-array to be analysed."
          }

         parameter median {
            type IMAGE
            access WRITE
            vpath PROMPT
            prompt {Output array for medians}
            help "Give the name of the IMAGE structure to hold the array of medians."
          }

         parameter omtitle {
            type LITERAL
            access READ
            vpath DEFAULT
            default {KAPPA - Mstats - Medians}
            prompt {Title for medians array}
            help "Character string used as title for the IMAGE structure holding medians array."
          }

         parameter mean {
            type IMAGE
            access WRITE
            vpath PROMPT
            prompt {Output array for means}
            help "Give the name of the IMAGE structure to hold the array of means."
          }

         parameter mtitle {
            type LITERAL
            access READ
            vpath DEFAULT
            default {KAPPA - Mstats - Means}
            prompt {Title for means array}
            help "Character string used as title for the IMAGE structure holding means array."
          }

         parameter stddev {
            type IMAGE
            access WRITE
            vpath PROMPT
            prompt {Output array for standard deviations}
            help "Give the name of the IMAGE structure to hold the array of standard deviations."
          }

         parameter stitle {
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Title for standard deviation array}
            default {KAPPA - Mstats - Stddevs}
            help "Character string used as title for the IMAGE structure holding standard-deviation array."
          }

      }

      action mult {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action noglobals {
         alias {nogl(obals)}

         helplib {$KAPPA_HELP}

      }

      action nomagic {
         alias {noma(gic)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component(s) to process}
            helpkey *
            default Data
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF from which magic values are to be removed}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF without magic values}
            helpkey *
          }

         parameter repval {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {The value to replace the magic value}
            helpkey *
          }

         parameter sigma {
            position 4
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {The standard deviation of the replacement values}
            default !
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action normalize {
         alias {norm(alize)}

         helplib {$KAPPA_HELP}

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should graphics workstation be cleared?}
            default TRUE
            helpkey *
          }

         parameter datarange {
            size *
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Data range}
            helpkey *
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {The NDF to be normalised}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {The NDF to define the normalization}
            helpkey *
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
          }

         parameter minpix {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Minimum number of good pixels in a bin}
            helpkey *
          }

         parameter nbin {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of bins in the fit}
            default 50
            helpkey *
          }

         parameter niter {
            type _INTEGER
            vpath DYNAMIC
            prompt {Number of rejection iterations}
            helpkey *
          }

         parameter nsigma {
            type _REAL
            vpath DYNAMIC
            prompt {Number of standard deviations to reject data at}
            helpkey *
          }

         parameter offset {
            type _REAL
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
          }

         parameter pcrange {
            size *
            type _REAL
            vpath DYNAMIC
            prompt {Percentage range for auto-scaling}
            helpkey *
          }

         parameter slope {
            type _REAL
            access WRITE
            vpath DEFAULT
            helpkey *
            default 0.0
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {A title for the output NDF}
            helpkey *
          }

         parameter xleft {
            type _REAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter xright {
            type _REAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ybot {
            type _REAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ytop {
            type _REAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

      }

      action numb {

         helplib {$KAPPA_HELP}

         parameter abs {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Test absolute array values?}
            helpkey *
            default FALSE
          }

         parameter above {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Count above threshold?}
            helpkey *
            default TRUE
          }

         parameter comp {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to process}
            helpkey *
            default Data
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {Input image}
            helpkey *
          }

         parameter number {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter value {
            position 2
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Test value}
            helpkey *
          }

      }

      action outset {
         alias {outs(et)}

         parameter inpic {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be modified}
            help "Name of IMAGE structure containing the 2-d data array to be modified"
          }

         parameter outpic {
            position 2
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Image after being modified}
            help "Name given to the IMAGE structure to hold the data array after being modified"
          }

         parameter otitle {
            position 3
            type _CHAR
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Outset}
            help "Character string used as a title for the output IMAGE structure."
          }

         parameter xcentre {
            position 4
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {x co-ordinate of circle centre}
            help "Give the x co-ordinate of the centre of the circle to be used"
          }

         parameter ycentre {
            position 5
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {y co-ordinate of circle centre}
            help "Give the y co-ordinate of the centre of the circle to be used"
          }

         parameter diameter {
            position 6
            type _REAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {Diameter of circle}
            help "Give the diameter in pixels of the circle to be used"
          }

         parameter newval {
            position 7
            type LITERAL
            vpath PROMPT
            ppath DEFAULT
            prompt {New value for pixels outside circle}
            default 0.0
            help "This will become the new value for all pixels outside the circle. BAD gives the bad-pixel value."
          }

      }

      action parget {
         alias {parg(et)}

         helplib {$KAPPA_HELP}

         parameter applic {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Task name}
            helpkey *
          }

         parameter parname {
            position 1
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Parameter name}
            helpkey *
          }

      }

      action paste {
         alias {past(e)}

         helplib {$KAPPA_HELP}

         parameter confine {
				 # principal input NDF?
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Bounds of output NDF confined to principal input NDF?}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Base NDF structure}
            helpkey *
          }

         parameter p1 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
          }

         parameter p2 {
            position 3
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p3 {
            position 4
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p4 {
            position 5
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p5 {
            position 6
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p6 {
            position 7
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p7 {
            position 8
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p8 {
            position 9
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p9 {
            position 10
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p10 {
            position 11
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p11 {
            position 12
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p12 {
            position 13
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p13 {
            position 14
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p14 {
            position 15
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p15 {
            position 16
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p16 {
            position 17
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p17 {
            position 18
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p18 {
            position 19
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p19 {
            position 20
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p20 {
            position 21
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p21 {
            position 22
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p22 {
            position 23
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p23 {
            position 24
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p24 {
            position 25
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter p25 {
            position 26
            type NDF
            access READ
            vpath DEFAULT
            prompt {NDF structure to paste}
            helpkey PASTE Parameters P1-P25
            default !
          }

         parameter out {
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF structure}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter transp {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Are pasted bad values transparent?}
            helpkey *
          }

      }

      action pixdupe {
         alias {pixd(upe)}

         helplib {$KAPPA_HELP}

         parameter expand {
            size *
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Expansion factors}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be expanded}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being expanded}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action pow {

         parameter inpic {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input image}
            help "Name of the IMAGE structure containing the input data array"
          }

         parameter power {
            position 2
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Power}
            help "Power to be taken of each input data-array pixel"
          }

         parameter outpic {
            position 3
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            help "Name given to the IMAGE structure holding the data array resulting from taking power"
          }

         parameter otitle {
            position 4
            type LITERAL
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Pow}
            help "Character string used as a title for the output IMAGE structure."
          }

      }

      action psf {

         helplib {$KAPPA_HELP}

         parameter amp1 {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the amplitude of the first star}
            default 0.0
            helpkey *
          }

         parameter axes {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Produce annotated axes?}
            helpkey *
          }

         parameter axisr {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the axis ratio of the star images}
            default 0.0
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            vpath DEFAULT
            prompt {Is the current picture to be cleared before plotting?}
            helpkey *
            default TRUE
          }

         parameter cofile {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File of x-y positions}
            helpkey *
          }

         parameter cut {
            position 5
            type _REAL
            ppath DYNAMIC
            vpath DEFAULT DYNAMIC
            prompt {Output PSF threshold}
            default !
            helpkey *
          }

         parameter device {
            ptype DEVICE
            position 3
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            default !
            prompt {Name of graphics device}
            helpkey *
          }

         parameter fwhm {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the FWHM of the star images}
            default 0.0
            helpkey *
          }

         parameter gamma {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the fall-off parameter of the star images}
            default 0.0
            helpkey *
          }

         parameter gauss {
            type _LOGICAL
            vpath DEFAULT
            prompt {Fit a two-dimensional Gaussian?}
            helpkey *
            default FALSE
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.DATA_ARRAY
            prompt {NDF containing star images}
            helpkey *
          }

         parameter incat {
            position 2
            type FILENAME
            ppath GLOBAL CURRENT
            association <->GLOBAL.CATALOGUE
            prompt {Positions list containing star positions}
            helpkey *
          }

         parameter isize {
            position 7
            type _INTEGER
            ppath DYNAMIC
            vpath DYNAMIC
            prompt {Side length of square for forming marginal profiles}
            helpkey *
          }

         parameter logfile {
            type FILENAME
            vpath DEFAULT
            ppath DEFAULT
            prompt {Log file for results}
            default !
            helpkey *
          }

         parameter margin {
            size *
            type _REAL
            prompt {Widths of margins around DATA picture}
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            prompt {PGPLOT marker type}
            vpath CURRENT { DEFAULT}
            ppath CURRENT DEFAULT
            default 11
            helpkey *
          }

         parameter minor {
            type _LOGICAL
            prompt {Plot profile along minor axis?}
            vpath DEFAULT
            default TRUE
            helpkey *
          }

         parameter norm {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Should the PSF be normalized to a peak value of unity?}
            helpkey *
            default TRUE
          }

         parameter orient {
            access WRITE
            type _REAL
            vpath DEFAULT
            prompt {Object to contain the orientation of the star images}
            default 0.0
            helpkey *
          }

         parameter out {
            position 4
            type NDF
            access WRITE
            vpath DEFAULT
            ppath DEFAULT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to contain the PSF}
            default !
            helpkey *
          }

         parameter poscols {
            position 8
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Star co-ordinate columns}
            helpkey *
            default !
          }

         parameter range {
            position 6
            type _REAL
            ppath DYNAMIC
            vpath DYNAMIC
            prompt {Number of star-profile widths for profile fitting}
            helpkey *
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Plotting style}
            helpkey *
            default !
          }

         parameter title {
            type LITERAL
            access READ
            vpath DEFAULT
            default {KAPPA - PSF}
            prompt {Title for output NDF}
            helpkey *
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {The current Frame axes to be used}
            helpkey *
          }

         parameter xleft {
            type _REAL
            prompt {Axis value at left end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter xright {
            type _REAL
            prompt {Axis value at right end of horizontal axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ybot {
            type _REAL
            prompt {Axis value at bottom of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

         parameter ytop {
            type _REAL
            prompt {Axis value at top of vertical axis}
            vpath DEFAULT
            ppath DYNAMIC
            default !
            helpkey *
          }

      }

      action quilt {
         alias {quil(t)}

         parameter where {
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Input source}
            default File
            help "Choose File (ASCII file) or Interface as the source of frames and offsets."
          }

         parameter fname {
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Source file name}
            help "Name of ASCII file holding mosaic information (header, number of arrays, max-min offsets, names and offsets)."
          }

         parameter number {
            type _INTEGER
            access READ
            vpath PROMPT
            prompt {Number of data arrays}
            help "Give total number of 2-d data arrays to form a mosaic, including the central one."
          }

         parameter inpici {
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Central image}
            help "Name of IMAGE structure containing the central 2-d data array to be added."
          }

         parameter maxx {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {Maximum x offset}
            help "Give the maximum x offset of any data array (including the central one)."
          }

         parameter maxy {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {Maximum y offset}
            help "Give the maximum y offset of any data array (including the central one)."
          }

         parameter minx {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {Minimum x offset}
            help "Give the minimum x offset of any data array (including the central one)."
          }

         parameter miny {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DYNAMIC
            prompt {Minimum y offset}
            help "Give the minimum y offset of any data array (including the central one)."
          }

         parameter average {
            type _LOGICAL
            access READ
            vpath PROMPT
            prompt {Are overlapped input pixels to be averaged in the output array?}
            help "Input pixels may be occupy the same position in the output array. So output pixels can be averaged or summed."
            default TRUE
          }

         parameter outpic {
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output mosaic image}
            help "Name given to the IMAGE structure to hold the mosaic data array."
          }

         parameter otitle {
            type _CHAR
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Quilt}
            help "Character string used as a title for the output IMAGE structure."
          }

         parameter curpic {
            type IMAGE
            access READ
            vpath PROMPT
            prompt {Next Image}
            help "Give the name of the current IMAGE structure containing the 2-d data array to be part of the mosaic."
          }

         parameter offsetx {
            type _INTEGER
            access READ
            vpath PROMPT
            prompt {x offset of the array from the first}
            help "Give x offset in pixels of the current data array from the central one."
          }

         parameter offsety {
            type _INTEGER
            access READ
            vpath PROMPT
            prompt {y offset of the array from the first}
            help "Give y offset in pixels of the current data array from the central one."
          }

      }

      action rift {

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter scalar {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Value to be added}
            helpkey *
          }

         parameter section {
            position 4
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Section to which to add a constant}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action rotate {
         alias {rota(te)}

         helplib {$KAPPA_HELP}

         parameter angle {
            position 3
            type _REAL
            vpath PROMPT
            ppath CURRENT
            prompt {Number of degrees clockwise rotation}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be rotated}
            helpkey *
          }

         parameter nnmeth {
            type _LOGICAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Do you want to use the nearest-neighbour method?}
            default FALSE
            helpkey *
          }

         parameter out {
            position 2
            access UPDATE
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Rotated NDF}
            helpkey *
          }

         parameter quality {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Propagate QUALITY (using nearest-neighbour method)?}
            default FALSE
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Use variance in the weighting?}
            default FALSE
            helpkey *
          }

      }

      action segment {
         alias {segm(ent)}

         helplib {$KAPPA_HELP}

         parameter coords {
            type LITERAL
            access READ
            prompt {Co-ordinates of next polygon vertex}
            helpkey *
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF holding data to be put inside the polygon}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath DEFAULT
            prompt {NDF holding data to be put outside the polygon}
            default !
            helpkey *
          }

         parameter incat1 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 1}
            ppath GLOBAL CURRENT
            association <->GLOBAL.CATALOGUE
            helpkey *
          }

         parameter incat2 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 2}
            ppath CURRENT
            helpkey *
          }

         parameter incat3 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 3}
            ppath CURRENT
            helpkey *
          }

         parameter incat4 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 4}
            ppath CURRENT
            helpkey *
          }

         parameter incat5 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 5}
            ppath CURRENT
            helpkey *
          }

         parameter incat6 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 6}
            ppath CURRENT
            helpkey *
          }

         parameter incat7 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 7}
            ppath CURRENT
            helpkey *
          }

         parameter incat8 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 8}
            ppath CURRENT
            helpkey *
          }

         parameter incat9 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 9}
            ppath CURRENT
            helpkey *
          }

         parameter incat10 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 10}
            ppath CURRENT
            helpkey *
          }

         parameter incat11 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 11}
            ppath CURRENT
            helpkey *
          }

         parameter incat12 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 12}
            ppath CURRENT
            helpkey *
          }

         parameter incat13 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 13}
            ppath CURRENT
            helpkey *
          }

         parameter incat14 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 14}
            ppath CURRENT
            helpkey *
          }

         parameter incat15 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 15}
            ppath CURRENT
            helpkey *
          }

         parameter incat16 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 16}
            ppath CURRENT
            helpkey *
          }

         parameter incat17 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 17}
            ppath CURRENT
            helpkey *
          }

         parameter incat18 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 18}
            ppath CURRENT
            helpkey *
          }

         parameter incat19 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 19}
            ppath CURRENT
            helpkey *
          }

         parameter incat20 {
            type FILENAME
            vpath PROMPT
            prompt {Catalogue holding co-ordinates defining polygon 20}
            ppath CURRENT
            helpkey *
          }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath DEFAULT
            prompt {File to store co-ordinates of polygon vertices}
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            prompt {The PGPLOT type for vertex markers}
            ppath CURRENT DEFAULT
            default 2
            helpkey *
          }

         parameter maxpoly {
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            prompt {Maximum number of polygons}
            default !
            helpkey *
          }

         parameter minpoly {
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            prompt {Minimum number of polygons}
            default 1
            helpkey *
          }

         parameter mode {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Mode used to obtain polygon vertices}
            ppath CURRENT DEFAULT
            default Interface
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter plot {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default POLY
            prompt {What sort of graphics should be used?}
            helpkey *
          }

         parameter poly1 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 1}
            helpkey *
          }
              
         parameter poly2 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 2}
            helpkey *
          }
              
         parameter poly3 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 3}
            helpkey *
          }
              
         parameter poly4 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 4}
            helpkey *
          }
              
         parameter poly5 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 5}
            helpkey *
          }
              
         parameter poly6 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 6}
            helpkey *
          }
              
         parameter poly7 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 7}
            helpkey *
          }
              
         parameter poly8 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 8}
            helpkey *
          }
              
         parameter poly9 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 9}
            helpkey *
          }
              
         parameter poly10 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 10}
            helpkey *
          }
              
         parameter poly11 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 11}
            helpkey *
          }
              
         parameter poly12 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 12}
            helpkey *
          }
              
         parameter poly13 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 13}
            helpkey *
          }
              
         parameter poly14 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 14}
            helpkey *
          }
              
         parameter poly15 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 15}
            helpkey *
          }
              
         parameter poly16 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 16}
            helpkey *
          }
              
         parameter poly17 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 17}
            helpkey *
          }
              
         parameter poly18 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 18}
            helpkey *
          }
              
         parameter poly19 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 19}
            helpkey *
          }
              
         parameter poly20 {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {File holding co-ordinates defining polygon 20}
            helpkey *
          }
              
         parameter quality {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Should quality values be copied to the output NDF?}
            helpkey *
          }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Style for graphics}
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter variance {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Should variance values be copied to the output NDF?}
            helpkey *
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {Two axes to span the plane of the supplied polygons}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

      }

      action setmagic {
         alias {setma(gic)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component(s) to process}
            helpkey *
            default Data
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF in which values are to be flagged bad}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF containing flagged values}
            helpkey *
          }

         parameter repval {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {The value to be replaced by the bad flag}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action shadow {
         alias {shad(ow)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to be enhanced}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF after being enhanced}
            helpkey *
          }

         parameter shift {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath DEFAULT
            prompt {Shift in x-y indices}
            helpkey *
            default 1 1
            size *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action slide {
         alias {slid(e) shif(t)}

         parameter inpic {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be shifted}
            help "Name of the IMAGE structure containing the 2-d data array to be shifted."
          }

         parameter outpic {
            position 2
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Image after being shifted}
            help "Name given to the IMAGE structure to hold the data array after being shifted."
          }

         parameter otitle {
            position 3
            type _CHAR
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Slide}
            help "Character string used as a title for the output IMAGE structure."
          }

         parameter stype {
            position 4
            type _CHAR
            vpath PROMPT
            ppath DYNAMIC
            prompt {Shift type: Relative or Absolute}
            help "Shift relative a to known fiducial point or an absolute shift to be applied to the data array."
          }

         parameter absx {
            position 5
            type _REAL
            vpath PROMPT
            prompt {Absolute shift in x}
            help "Give the absolute shift of the data array in pixels in the x direction."
          }

         parameter absy {
            position 6
            type _REAL
            vpath PROMPT
            prompt {Absolute shift in y}
            help "Give the absolute shift of the data array in pixels in the y direction."
          }

         parameter fidx {
            position 7
            type _REAL
            vpath PROMPT
            prompt {x position of fiducial point}
            help "The x position of where you would like the standard object to be."
          }

         parameter fidy {
            position 8
            type _REAL
            vpath PROMPT
            prompt {y position of fiducial point}
            help "The y position of where you would like the standard object to be."
          }

         parameter objx {
            position 9
            type _REAL
            vpath PROMPT
            prompt {x position of standard object}
            help "The x position of where the standard object is."
          }

         parameter objy {
            position 10
            type _REAL
            vpath PROMPT
            prompt {y position of standard object}
            help "The y position of where the standard object is."
          }

      }

      action sqorst {
         alias {sqor(st)}

         parameter inpic {
            position 1
            type IMAGE
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input image}
            help "Name of the IMAGE structure containing the 2-d data array to be modified"
          }

         parameter xdim {
            position 2
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {First dimension of output image}
            help "First scaling factor is this value divided by the first dimension of the input data array"
          }

         parameter ydim {
            position 3
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Second dimension of output image}
            help "Second scaling factor is this value divided by the second dimension of the input data array"
          }

         parameter outpic {
            position 4
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output image}
            help "Name of the IMAGE structure to contain the data array after modification"
          }

         parameter otitle {
            position 5
            type _CHAR
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Sqorst}
            help "Character string to be used as a title for the output IMAGE structure"
          }

      }

      action stats {

         helplib {$KAPPA_HELP}

         parameter clip {
            size *
            position 3
            type _REAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Clipping levels}
            helpkey *
          }

         parameter comp {
            position 2
            type LITERAL
            access UPDATE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default DATA
            prompt {NDF array component to analyse}
            helpkey *
          }

         parameter logfile {
            position 4
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {File for logging results}
            helpkey *
          }

         parameter maxcoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter maximum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter maxpos {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter mean {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter mincoord {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter minimum {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter minpos {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {Data structure to analyse}
            helpkey *
          }

         parameter numbad {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter numgood {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter numpix {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter sigma {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter total {
            type _DOUBLE
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

      }

      action sub {

         helplib {$KAPPA_HELP}

         parameter in1 {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {First input NDF}
            helpkey *
          }

         parameter in2 {
            position 2
            type NDF
            access READ
            vpath PROMPT
            prompt {Second input NDF}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action substitute {
         alias {subs(titute)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Component(s) to process}
            helpkey *
            default Data
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF in which values are to be flagged bad}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF containing flagged values}
            helpkey *
          }

         parameter newval {
            position 4
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {New value to substitute}
            helpkey *
          }

         parameter oldval {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {The value to be replaced}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action surfit {
         alias {surf(it)}

         helplib {$KAPPA_HELP}

         parameter auto {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Automatic evaluation?}
            default TRUE
            helpkey *
          }

         parameter bindim {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Dimensions of the bins used to estimate the local background}
            helpkey *
          }

         parameter clip {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clipping standard deviations during binning}
            helpkey *
            default 2 3
            size *
          }

         parameter estimator {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Estimator for the binning}
            helpkey *
            default MODE
          }

         parameter evaluate {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Method of evaluation of the fitted output array}
            helpkey *
            default INTERPOLATE
          }

         parameter fitclip {
            size *
            type _REAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Clipping rms errors for the fitted bins}
            helpkey *
            default !
          }

         parameter fittype {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Fitting method}
            helpkey *
            default SPLINE
          }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store fitting results}
            default !
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be fitted}
            helpkey *
          }

         parameter knots {
            size *
            type _INTEGER
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Number of interior knots (1-11)}
            helpkey *
            default 4
          }

         parameter order {
            size *
            type _INTEGER
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Orders of the polynomials along each direction}
            helpkey *
            default 3
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Fitted image}
            helpkey *
          }

         parameter rms {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

         parameter thrhi {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Upper threshold cutoff before binning}
            helpkey *
            default !
          }

         parameter thrlo {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Lower threshold cutoff before binning}
            helpkey *
            default !
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            default !
            prompt {Title for surface fit}
            helpkey *
          }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Fraction of good pixels for bin to be included}
            helpkey *
          }

      }

      action thresh {
         alias {thre(sh)}

         helplib {$KAPPA_HELP}

         parameter comp {
            position 7
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Array component to process}
            helpkey *
            default Data
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {NDF to have thresholds applied}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {NDF to hold data after application of thresholds}
            helpkey *
          }

         parameter newhi {
            position 6
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {New value for pixels above upper threshold}
            helpkey *
          }

         parameter newlo {
            position 5
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC
            prompt {New value for pixels below lower threshold}
            helpkey *
          }

         parameter thrhi {
            position 4
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Higher threshold cutoff}
            helpkey *
          }

         parameter thrlo {
            position 3
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Lower threshold cutoff}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

      }

      action trandat {
         alias {trand(at)}

         helplib {$KAPPA_HELP}

         parameter auto {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Automatic calculation of co-ordinates?}
            helpkey *
            default FALSE
          }

         parameter bad {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Initialise array with bad pixels?}
            helpkey *
            default TRUE
          }

         parameter dtype {
            position 6
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Type of the data values}
            helpkey *
            default _REAL
          }

         parameter freename {
            position 1
            type FILENAME
            access READ
            vpath PROMPT
            prompt {Free-format data file}
            helpkey *
          }

         parameter lbound {
            size *
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Pixel lower bounds of the output NDF}
            helpkey *
          }

         parameter ndf {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter poscols {
            position 3
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Co-ordinate columns}
            helpkey *
            default 1 2
            size *
          }

         parameter pscale {
            position 5
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Pixel-to-pixel distances}
            helpkey *
            default 1.0 1.0
            size *
          }

         parameter quantum {
            type _INTEGER
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Work array increment}
            helpkey *
            default 2048
          }

         parameter shape {
            size *
            type _INTEGER
            vpath PROMPT
            ppath CURRENT
            prompt {Shape of the output NDF}
            helpkey *
          }

         parameter title {
            position 7
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Title for output NDF}
            helpkey *
            default {KAPPA - Trandat}
          }

         parameter valcol {
            position 4
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Data value column}
            helpkey *
            default 3
          }

      }

      action traninvert {
         alias {trani(nvert)}

         helplib {$KAPPA_HELP}

         parameter transform {
				 # file
            position 1
            type TRN
            access UPDATE
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.TRANSFORM
            prompt {Transformation structure to invert}
            helpkey *
          }

      }

      action tranjoin {
         alias {tranj(oin)}

         helplib {$KAPPA_HELP}

         parameter in1 {
				 # file (first input)
            position 1
            type TRN
            access UPDATE
            vpath PROMPT
            ppath CURRENT
            association ->GLOBAL.TRANSFORM
            prompt {First transformation}
            helpkey *
          }

         parameter in2 {
				 # file (second input)
            position 2
            type TRN
            access UPDATE
            vpath PROMPT
            ppath CURRENT
            association ->GLOBAL.TRANSFORM
            prompt {Second transformation}
            helpkey *
          }

         parameter out {
				 # file
            position 3
            type TRN
            access WRITE
            vpath PROMPT
            association ->GLOBAL.TRANSFORM
            prompt {New structure to hold concatenated transformation}
            helpkey *
          }

         parameter dest {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default NEW
            prompt {Destination of concatenated transformation}
            helpkey *
          }

      }

      action tranmake {
         alias {tranm(ake)}

         helplib {$KAPPA_HELP}

         parameter class {
            size *
            type LITERAL
            prompt {Classifications of the transformation}
            vpath PROMPT
            ppath CURRENT
            helpkey *
            default !
          }

         parameter comment {
            position 3
            type LITERAL
            prompt {Comment to be stored with the transformation}
            vpath PROMPT
            ppath DEFAULT
            helpkey *
            default !
          }

         parameter fa {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fb {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fc {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fd {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fe {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter ff {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fg {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fh {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fi {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fj {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fk {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fl {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fm {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fn {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fo {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fp {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fq {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fr {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fs {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter ft {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fu {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fv {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fw {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fx {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fy {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fz {
            type LITERAL
            vpath PROMPT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANMAKE PARAMETERS FA-FZ
          }

         parameter fittype {
            type _INTEGER
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 5
            prompt {Type of bilinear transform (1-5)}
            helpkey *
          }

         parameter for1 {
            type LITERAL
            prompt {First forward mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter for2 {
            type LITERAL
            prompt {Second forward mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter for3 {
            type LITERAL
            prompt {Third forward mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter for4 {
            type LITERAL
            prompt {Fourth forward mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter for5 {
            type LITERAL
            prompt {Fifth forward mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter for6 {
            type LITERAL
            prompt {Sixth forward mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter for7 {
            type LITERAL
            prompt {Seventh forward mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter inv1 {
            type LITERAL
            prompt {First inverse mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter inv2 {
            type LITERAL
            prompt {Second inverse mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter inv3 {
            type LITERAL
            prompt {Third inverse mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter inv4 {
            type LITERAL
            prompt {Fourth inverse mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter inv5 {
            type LITERAL
            prompt {Fifth inverse mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter inv6 {
            type LITERAL
            prompt {Sixth inverse mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter inv7 {
            type LITERAL
            prompt {Seventh inverse mapping}
            vpath PROMPT
            ppath CURRENT
            helpkey *
          }

         parameter nvin {
            type _INTEGER
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Number of input variables in the transformation}
            helpkey *
            default 2
          }

         parameter nvout {
            type _INTEGER
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Number of output variables in the transformation}
            helpkey *
            default 2
          }

         parameter pa {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pb {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pc {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pd {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pe {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pf {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pg {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter ph {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pi {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 3.14159265359D0
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pj {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pk {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pl {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pm {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pn {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter po {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pp {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pq {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pr {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter ps {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pt {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pu {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pv {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pw {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter px {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter py {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter pz {
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANMAKE PARAMETERS PA-PZ
          }

         parameter prec {
            type LITERAL
            prompt {Precision of the transformation}
            vpath DEFAULT
            ppath CURRENT
            helpkey *
            default _REAL
          }

         parameter tr {
            position 4
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT DYNAMIC
            default 0 1 0 0 0 1
            prompt {Transformation coefficients}
            helpkey *
            size *
          }

         parameter transform {
            position 1
            type TRN
            access WRITE
            vpath PROMPT
            association ->GLOBAL.TRANSFORM
            prompt {File to hold the transformation}
            helpkey *
          }

         parameter trtype {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DEFAULT
            default Expres
            prompt {Transformation type}
            helpkey *
          }

      }

      action transformer {
         alias {trans(former)}

         helplib {$KAPPA_HELP}

         parameter conserve {
            type _LOGICAL
            vpath DEFAULT
            prompt {Conserve flux?}
            helpkey *
            default FALSE
          }

         parameter cosys {
            type LITERAL
            vpath GLOBAL DEFAULT
            ppath GLOBAL DYNAMIC
            prompt {Co-ordinate system}
            association <->GLOBAL.COORD_SYSTEM
            helpkey *
            default World
          }

         parameter full {
				 # dimensions
            type _LOGICAL
            vpath DEFAULT
            prompt {Apply the transformation to higher dimensions?}
            helpkey *
            default FALSE
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
          }

         parameter lbound {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {Lower bounds of the output NDF}
            helpkey *
          }

         parameter lcoord {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {Lower co-ordinate limits of the output NDF}
            helpkey *
          }

         parameter method {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DYNAMIC
            prompt {Re-sampling method}
            helpkey *
            default Nearest
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter shape {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Method to define the shape of the output NDF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default {KAPPA - Transformer}
            prompt {Output NDF title}
            helpkey *
          }

         parameter transform {
            position 2
            type TRN
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.TRANSFORM
            prompt {Transformation structure}
            helpkey *
          }

         parameter ubound {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {Upper bounds of the output NDF}
            helpkey *
          }

         parameter ucoord {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath DYNAMIC
            prompt {Upper co-ordinate limits of the output NDF}
            helpkey *
          }

      }

      action trantrace {
         alias {trant(race)}

         helplib {$KAPPA_HELP}

         parameter classfor {
            type LITERAL
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter classinv {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default =
            helpkey *
          }

         parameter comment {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default {No comment}
            helpkey *
          }

         parameter forward {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default =
            helpkey *
          }

         parameter inverse {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default =
            helpkey *
          }

         parameter logfile {
            position 2
            type FILENAME
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store trace of TRANSFORM structure}
            default !
            helpkey *
          }

         parameter nvin {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter nvout {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter prec {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default _REAL
            helpkey *
          }

         parameter transform {
            position 1
            type TRN
            vpath PROMPT
            ppath GLOBAL
            association <->GLOBAL.TRANSFORM
            prompt {Transformation structure to list}
            helpkey *
          }

         parameter version {
            type _REAL
            access WRITE
            vpath DEFAULT
            default 0.0D0
            helpkey *
          }

      }

      action trig {

         parameter inpic {
            position 1
            type UNIV
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input to be operated on}
            help "Give the IMAGE structure containing the data array, or the scalar on which the trig function is to operate."
          }

         parameter trigfunc {
            position 2
            type LITERAL
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Trig function to be used}
            help "One of SIN,COS,TAN,SIND,COSD,TAND,ASIN,ACOS,ATAN,ASIND,ACOSD,ATAND."
          }

         parameter outpic {
            position 3
            type IMAGE
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Image for output data}
            help "Name given to the IMAGE structure to hold the generated data array."
          }

         parameter otitle {
            position 4
            type _CHAR
            vpath DEFAULT
            prompt {Title for output image}
            default {KAPPA - Trig}
            help "Character string used as a title for the output IMAGE structure."
          }

      }

      action kapversion {

         helplib {$KAPPA_HELP}

         parameter compare {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT 
            ppath CURRENT 
            default !
            prompt {The version string for comparison}
            helpkey *
         }

         parameter result {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
         }

      }

      action wiener {
         alias {wien(er)}

         helplib {$KAPPA_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
          }

         parameter model {
            type NDF
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {An NDF holding the model image}
            helpkey *
          }

         parameter out {
            position 3
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {The output NDF}
            helpkey *
          }

         parameter pmodel {
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Constant power per pixel in model image}
            helpkey *
          }

         parameter pnoise {
            type _REAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Constant noise power per pixel}
            helpkey *
          }

         parameter psf {
            position 2
            type NDF
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {An NDF holding the PSF}
            helpkey *
          }

         parameter quiet {
            type _LOGICAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Is the model devoid of noise?}
            helpkey *
          }

         parameter thresh {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.0625
            prompt {Truncation fractional threshold of PSF}
            helpkey *
          }

         parameter title {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Title for output NDF}
            default !
            helpkey *
          }

         parameter wlim {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.001
            prompt {Weight limit for good output pixels}
            helpkey *
          }

         parameter xcentre {
            position 4
            type _INTEGER
            ppath DYNAMIC
            prompt {X pixel index of the PSF centre within the PSF image}
            helpkey *
          }

         parameter ycentre {
            position 5
            type _INTEGER
            ppath DYNAMIC
            prompt {Y pixel index of the PSF centre within the PSF image}
            helpkey *
          }

      }

      action zaplin {
         alias {zapl(in)}

         helplib {$KAPPA_HELP}

         parameter colin {
            type FILENAME
            vpath PROMPT
            ppath CURRENT
            prompt {Filename containing the line/column limits}
            helpkey *
          }

         parameter colout {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Filename to store the line/column limits}
            default !
            helpkey *
          }

         parameter columns {
            type LITERAL
            prompt {Bounds on axis 1 of the area to be replaced}
            ppath CURRENT
            helpkey *
          }

         parameter device {
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Image to be modified}
            helpkey *
          }

         parameter lincol {
            type LITERAL
            vpath PROMPT
            ppath DYNAMIC DEFAULT
            prompt {Lines, Columns or Region?}
            default Lines
            helpkey *
          }

         parameter lines {
            type LITERAL
            prompt {Bounds on axis 2 of the area to be replaced}
            ppath CURRENT
            helpkey *
          }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            prompt {The PGPLOT type for markers}
            ppath CURRENT DEFAULT
            default 2
            helpkey *
          }

         parameter mode {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode to obtain area limits}
            default Interface
            helpkey *
          }

         parameter noise {
            type _LOGICAL
            vpath DEFAULT
            default FALSE
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Image after being modified}
            helpkey *
          }

         parameter plot {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {What sort of graphics should be used?}
            ppath CURRENT DEFAULT
            default Adapt
            helpkey *
          }

         parameter style {
            type LITERAL
            vpath CURRENT DEFAULT
            prompt {Style for graphics}
            ppath CURRENT DEFAULT
            default !
            helpkey *
          }

         parameter title {
            position 3
            type LITERAL
            vpath DEFAULT
            prompt {Title for output image}
            default !
            helpkey *
          }

         parameter useaxis {
            type LITERAL
            vpath DEFAULT
            prompt {The two current Frame axes to be used}
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter zaptype {
            type LITERAL
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            prompt {Type of zapping}
            default Linear
            helpkey *
          }

      }

      action listmake {

         helplib {$KAPPA_HELP}

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter dim {
            type _INTEGER
            access READ
            ppath CURRENT DEFAULT
            prompt {Number of axes for each position}
            default 2
            helpkey *
          }

         parameter epoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
          }

         parameter file {
            position 4
            type FILENAME
            ppath CURRENT
            prompt {Text file containing positions}
            helpkey *
          }

         parameter frame {
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Co-ordinate Frame in which positions are defined}
            helpkey *
            default PIXEL
          }

         parameter incat {
            type FILENAME
            vpath DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-GLOBAL.CATALOGUE
            prompt {Input positions list}
            default !
            helpkey *
          }

         parameter mode {
            position 3
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Mode to obtain positions}
            default Interface
            helpkey *
          }

         parameter ndf {
            position 2
            type NDF
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Reference NDF}
            helpkey *
          }

         parameter outcat {
            position 1
            type LITERAL
            access WRITE
            association ->GLOBAL.CATALOGUE
            prompt {Output positions list}
            helpkey *
          }

         parameter position {
            type LITERAL
            ppath default
            prompt {A position for the output list}
            default !
            helpkey *
          }

         parameter title {
            type LITERAL
            prompt {A title for the output list}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

      }

      action listshow {

         helplib {$KAPPA_HELP}

         parameter close {
            type _LOGICAL
            prompt {Are polygons to be closed?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            helpkey *
          }

         parameter describe {
            type _LOGICAL
            prompt {Is the co-ordinate Frame to be described?}
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter dim {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter device {
            position 6
            ptype DEVICE
            vpath GLOBAL PROMPT
            ppath GLOBAL CURRENT
            association <-GLOBAL.GRAPHICS_DEVICE
            prompt {Name of graphics device}
            helpkey *
          }

         parameter epoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of observation}
            helpkey *
          }

         parameter first {
            position 3
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Lowest position identifier to display}
            helpkey *
          }

         parameter frame {
            position 2
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Required coordinate Frame}
            helpkey *
            default !
          }

         parameter geodesic {
            type _LOGICAL
            prompt {Should polygon edges be geodesic curves?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter incat {
            position 1
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list}
            helpkey *
          }

         parameter just {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Justification for displayed text strings}
            helpkey *
            default CC
          }

         parameter label {
            type _LOGICAL
            prompt {Are plotted positions to be labelled?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter last {
            position 4
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            prompt {Highest position identifier to display}
            helpkey *
          }

         parameter logfile {
            type FILENAME
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {File to store selected co-ordinates}
            default !
            helpkey *
          }

         parameter marker {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {The PGPLOT type for position markers}
            default 2
            helpkey *
          }

         parameter name {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath DEFAULT
            prompt {Name of picture with which to align positions}
            helpkey *
            default DATA
          }

         parameter number {
            type _INTEGER
            access WRITE
            vpath DEFAULT
            default 0
            helpkey *
          }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            association ->GLOBAL.CATALOGUE
            prompt {Output positions list}
            default !
            helpkey *
          }

         parameter plot {
            position 5
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default NONE
            prompt {What sort of graphics should be used?}
            helpkey *
          }

         parameter posns {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter quiet {
            type _LOGICAL
            prompt {Is screen output to be suppressed?}
            vpath DEFAULT
            ppath DYNAMIC DEFAULT
            default !
            helpkey *
          }

         parameter strings {
            type LITERAL
            ppath DEFAULT
            prompt {Strings to mark positions}
            helpkey *
            default !
          }

         parameter style {
            type LITERAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Style for graphics and formatted axis values}
            helpkey *
            default !
          }

      }

      action profile {

         helplib {$KAPPA_HELP}

         parameter finish {
            position 4
            type LITERAL
            prompt {Position at the end of the profile}
            ppath DYNAMIC
            helpkey *
          }

         parameter geodesic {
            type _LOGICAL
            prompt {Use geodesic curves for the profile?}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            vpath PROMPT
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF}
            helpkey *
          }

         parameter incat {
            type FILENAME
            ppath GLOBAL CURRENT
            association <-GLOBAL.CATALOGUE
            prompt {Positions list holding co-ordinates defining the profile}
            helpkey *
          }

         parameter mode {
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Method to use to determine the sample positions}
            default Curve
            helpkey *
          }

         parameter nsamp {
            position 5
            type _INTEGER
            prompt {Number of samples required along the profile}
            vpath DEFAULT
            ppath CURRENT DEFAULT
            helpkey *
            default !
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF}
            helpkey *
          }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Output positions list to hold sample positions}
            association ->GLOBAL.CATALOGUE
            default !
            helpkey *
          }

         parameter start {
            position 3
            type LITERAL
            prompt {Position at the start of the profile}
            ppath DYNAMIC
            helpkey *
          }

      }

      action wcsalign {

         helplib {$KAPPA_HELP}

         parameter acc {
            type _REAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 0.5
            prompt {Positional accuracy in pixels}
            helpkey *
          }

         parameter in {
            position 1
            type NDF
            access READ
            ppath GLOBAL
            association <-GLOBAL.DATA_ARRAY
            prompt {The input images}
            helpkey *
          }

         parameter lbnd {
            size *
            position 3
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Lower pixel index bounds for output images}
            helpkey *
          }

         parameter maxpix {
            type _INTEGER
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default 1000
            prompt {Scale size for mappings (in pixels)}
            helpkey *
          }

         parameter method {
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default SincSinc
            prompt {Interpolation method}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output images}
            helpkey *
          }

         parameter params {
            type _DOUBLE
            access READ
            vpath DYNAMIC
            ppath DYNAMIC
            prompt {Interpolation parameters}
            helpkey *
          }

         parameter ref {
            position 5
            type NDF
            access READ
            ppath DEFAULT
            default !
            prompt {The reference image}
            helpkey *
          }

         parameter ubnd {
            size *
            position 4
            type _INTEGER
            access READ
            ppath DYNAMIC
            prompt {Upper pixel index bounds for output images}
            helpkey *
          }

      }

      action wcstran {

         helplib {$KAPPA_HELP}

         parameter epochin {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of input position}
            helpkey *
          }

         parameter epochout {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Epoch of output position}
            helpkey *
          }

         parameter framein {
            position 3
            type LITERAL
            ppath CURRENT DEFAULT
            prompt {Input co-ordinate Frame}
            helpkey *
            default PIXEL
          }

         parameter frameout {
            position 4
            type LITERAL
            vpath DEFAULT
            ppath CURRENT DEFAULT
            prompt {Output co-ordinate Frame}
            helpkey *
            default !
          }

         parameter ndf {
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            association <->GLOBAL.DATA_ARRAY
            prompt {The input NDF}
            helpkey *
          }

         parameter posin {
            position 2
            type LITERAL
            prompt {Position to be transformed}
            ppath CURRENT
            helpkey *
          }

         parameter posout {
            type LITERAL
            access WRITE
            vpath DEFAULT
            default { }
            helpkey *
          }

         parameter quiet {
            type _LOGICAL
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Suppress screen output?}
            helpkey *
          }

      }

   }

   command exp10 {
      task expon {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=10D0
      }
   }

   command expe {
      task expon {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=natural
      }
   }

   command fitsexist {
      task fitsmod {
         taskinherit ndf
         taskinherit keyword
         taskparam edit=exist
         taskparam mode=interface
      }
   }

   command fitsval {
      task fitsmod {
         taskinherit ndf
         taskinherit keyword
         taskparam edit=print
         taskparam mode=interface
      }
   }

   command fitswrite {
      task fitsmod {
         taskinherit ndf
         taskinherit keyword
         taskinherit comment
         taskinherit string
         taskinherit value
         taskparam edit=write
         taskparam mode=interface
         taskparam position=\!
      }
   }

   command kapdemo {
      obey {$KAPPA_DIR/stardemo.tcl}
   }

   command log10 {
      task logar {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=10D0
      }
   }

   command loge {
      task logar {
         taskinherit in
         taskinherit out
         taskinherit title
         taskparam base=natural
      }
   }

   command lutbgyrw {
      alias {lutb(gyrw)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/bgyrw_lut}
      }
   }

   command lutcol {
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=colour
      }
   }

   command lutcont {
      alias {lutcon(t)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/cont_lut}
      }
   }

   command lutfc {
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/fc_lut}
      }
   }

   command lutgrey {
      alias {lutg(rey)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=grey
      }
   }

   command lutheat {
      alias {luthe(at)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/heat_lut}
      }
   }

   command lutikon {
      alias {luti(kon)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/ikon_lut}
      }
   }

   command lutneg {
      alias {lutn(eg)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=negative
      }
   }

   command lutramps {
      alias {lutra(mps)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/ramps_lut}
      }
   }

   command lutread {
      alias {lutre(ad)}
      task lutable {
         taskinherit device
         taskinherit lut
         taskparam mapping=linear
         taskparam coltab=external
      }
   }

   command lutspec {
      alias {lutsp(ec)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/spectrum_lut}
      }
   }

   command lutzebra {
      alias {lutz(ebra)}
      task lutable {
         taskinherit device
         taskparam mapping=linear
         taskparam coltab=external
         taskparam {lut=$KAPPA_DIR/zebra_lut}
      }
   }

   command fitsedit {
      obey {$KAPPA_DIR/fitsedit.csh}      
   }

   command fitshead {
      obey {$KAPPA_DIR/fitshead.csh}      
   }

   command picbase {
      alias {picb(ase)}
      task piclist {
         taskinherit device
         taskparam picnum=1
      }
   }

   command picdata {
      alias {picd(ata)}
      task piclist {
         taskinherit device
         taskparam name=data
         taskparam picnum=last
      }
   }

   command picframe {
      alias {picf(rame)}
      task piclist {
         taskinherit device
         taskparam name=frame
         taskparam picnum=last
      }
   }

   command picgrid {
      alias {picg(rid)}
      task picdef {
         taskinherit current
         taskinherit device
         taskinherit fill
         taskinherit labelno
         taskinherit outline
         taskinherit xpic
         taskinherit ypic
         taskparam mode=array
         taskparam fraction=1.0
         taskparam prefix=""
      }
   }

   command piclast {
      alias {piclas(t)}
      task piclist {
         taskinherit device
         taskparam picnum=last
      }
   }

   command picxy {
      alias {picx(y)}
      task picdef {
         taskinherit current
         taskinherit device
         taskinherit lbound
         taskinherit outline
         taskinherit ubound
         taskparam mode=xy
         taskparam fraction=1.0
      }
   }

   icl {defhelp kappa $KAPPA_HELP 0}

   display {

     KAPPA commands are now available -- (Version PKG_VERS)

     Type kaphelp for help on KAPPA commands.
     Type "showme sun95" to browse the hypertext documentation.

     NOTE, several applications have had major changes made to their
     parameter lists. See the "Release Notes" section of SUN/95 for
     details.

   }

}
