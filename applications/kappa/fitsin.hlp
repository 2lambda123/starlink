.help fitsin Starlink kappa
.nf
Reads a FITS tape composed of simple, group or table files.

Usage:

   fitsin mt files out [auto] fmtcnv [logfile] more=? dscftable=?
      table=?

Description:

   This application reads selected files from a FITS tape.  The
   files may be Basic (simple) FITS, and/or have TABLE extensions
   (Harten et al. 1988).

   The programme reads a simple or a random-groups-format FITS file
   (Wells et al. 1981; Greisen & Harten 1981), and writes the data
   into an NDF, and the headers into the NDF's FITS extension.
   Table-format files (Grosbol et al. 1988) are read, and the
   application creates two files: a text formatted table/catalogue
   and a FACTS description file (as used by SCAR) based upon the FITS
   header cards.  Composite FITS files can be processed.  You may
   specify a list of files, including wildcards.  A record of the
   FITS headers, and group parameters (for a group-format file) can
   be stored in a text file.

   There is an option to run in automatic mode, where the names of
   output NDF data structures are generated automatically, and you
   can decide whether or not format conversion is to be applied to
   all files (rather than being prompted for each).  This is very
   useful if there is a large number of files to be processed.  Even
   if you want unique file names, format-conversion prompting may be
   switched off globally.

Parameters

For information on individual parameters, select from the list below:

AUTO

AUTO = _LOGICAL (Read)
   It is TRUE if automatic mode is required, where the name of
   each output NDF structure or table file is to be generated by
   the application, and therefore not prompted; and a global
   format-conversion switch may be set.  In manual mode the FITS
   header is reported, but not in automatic.

   For simple or group format FITS objects in automatic mode the
   application generates a filename beginning with a defined
   prefix followed by the number of the file on tape.  For
   example, if the prefix was "XRAY" and the 25th file of the
   tape was being processed, the filename of the NDF would be
   XRAY25.

   For table-format FITS objects in the automatic mode the
   application generates a filename beginning with a defined
   prefix followed by the number of the file on tape.  For
   example, if the prefix was "cat" and the 9th file of the tape
   was being processed, the filename of the table and its
   associated FACTS description file would be cat9.dat and
   dscfcat9.dat respectively.
   [FALSE]

DSCFTABLE

DSCFTABLE = FILENAME (Read)
   Name of the text file to contain the FACTS descriptors, which
   defines the table's format for SCAR.  Since SCAR is now
   deprecated, this parameter has little use, except perhaps to
   give a summary of the format of the file specified by parameter
   TABLE.  A null value (!) means that no description file will
   be created, so this is now the recommended usage.  If your
   FITS file comprises just tables, you should consider other
   tools such as the CURSA package, which has facilities for
   examining and processing ASCII and binary FITS tables.

   A suggested filename for the description file is reported
   immediately prior to prompting in manual mode.  It is the name
   of the catalogue, as written in the FITS header, with a "dscf"
   prefix.

ENCODINGS

ENCODINGS = LITERAL (Read)
   Determines which FITS keywords should be used to define the
   world co-ordinate information stored in NDF's WCS component.
   The allowed values (case-insensitive) are:

   "FITS-WCS" --- This uses keywords CRVALi, CDELTi, CRPIXi,
      PCiiijjj, etc., as described in the (draft) FITS world
      co-ordinate system paper by E.W.Greisen and M.Calabretta
      (A & A, in preparation).

   "DSS" --- This is the system used by the Digital Sky Survey,
      and uses keywords AMDXn, AMDYn, PLTRAH, etc.

   "Native" --- This is the native system used by the AST library
      (see SUN/210), and is the most general.  The others are
      limited in the co-ordinate systems they can describe, and
      may thus not fully describe the NDF's WCS component.

   A comma-separated list of up to three values may be supplied,
   in which case the value actually used is in the first in the
   list for which corresponding keywords can be found in the FITS
   header. If a null parameter value (!) is supplied, the encoding
   is chosen automatically on the basis of the available headers. [!]

FILES

FILES()  = _CHAR (Read)
   The list of the file numbers to be processed.  Files are
   numbered consecutively from 1 from the start of the tape.
   Single files or a set of adjacent files may be specified, e.g.
   typing [4,6-9,12,14-16] will read files 4,6,7,8,9,12,14,15,16.
   (Note that the brackets are required to distinguish this array
   of characters from a single string including commas.  The
   brackets are unnecessary when there only one item.) For
   efficiency reasons it is sensible to give the file numbers in
   ascending order.

   If you wish to extract all the files enter the wildcard *.
   5-* will read from 5 to the last file.  The processing will
   continue until the end of the tape is reached; no error
   will result from this.

FMTCNV

FMTCNV = _LOGICAL (Read)
   This specifies whether or not format conversion will occur.
   If FALSE, the HDS type of the data array in the NDF will be
   the equivalent of the FITS data format on tape (e.g. BITPIX =
   16 creates a _WORD array).  If TRUE, the data array in the
   current file, or all files in automatic mode, will be
   converted from the FITS data type on tape to _REAL in the NDF.
   The conversion applies the values of the FITS keywords BSCALE
   and BZERO to the tape data to generate the `true' data values.
   If BSCALE and BZERO are not given in the FITS header, they are
   taken to be 1.0 and 0.0 respectively.  The suggested default
   is TRUE.

GLOCON

GLOCON  = _LOGICAL (Read)
   If FALSE, a format-conversion query occurs for each FITS file.
   If TRUE, the value of FMTCNV is obtained before any file
   numbers and will apply to all data arrays.  It is ignored
   in automatic mode---in effect it becomes true. [FALSE]

LABEL

LABEL  = _LOGICAL (Read)
   It should be TRUE if the tape has labelled files.  Labelled
   files are non-standard.  If TRUE, the application skips three
   file marks per file, rather that one. [FALSE]

LOGFILE

LOGFILE = FILENAME (Read)
   The file name of the text log of the FITS header cards.
   For group-format data the group parameters are evaluated
   and appended to the full header.  The log includes the names of
   the output files used to store the data array or table. A null
   value (!) means that no log file is produced. [!]

MORE

MORE   = _LOGICAL (Read)
   A prompt asking if any more files are to be processed once the
   current list has been exhausted.

MT

MT = DEVICE (Read)
   Tape deck containing the data, usually an explicit device,
   though it can be a pre-assigned environment variable.

OUT

OUT = NDF (Write)
   Output NDF structure holding the full contents of the FITS
   file.  If the null value (!) is given no NDF will be created.
   This offers an opportunity to review the descriptors before
   deciding whether or not the data are to be extracted.

PREFIX

PREFIX = LITERAL (Read)
   The prefix of the NDF's or table's file name.  It is only used
   in the automatic mode.

REWIND

REWIND = _LOGICAL (Read)
   If it is TRUE, the tape drive is rewound before the reading of
   the FITS files commences.  If it is FALSE, the tape is not
   rewound, and the current tape position is read from file
   USRDEVDATASET.sdf.  Note that file numbers are absolute and
   not relative.  REWIND = FALSE is useful if you need to read a
   series of files, process them, then read some more, without
   having to remember the tape's position or apply unnecessary
   wear to the tape.  [TRUE]

TABLE

TABLE = FILENAME (Read)
   Name of the text file to contain the table itself, read from
   the tape.  In manual mode the suggested default filename is
   the name of description file less the "dscf" prefix, or if
   there is no description file or if the description file does
   not have the dscf prefix, the suggested name reverts to the
   catalogue name in the FITS header.

Examples

fitsin mt=/dev/rmt/1n files=[2-4,9] auto prefix=ccd nofmtcnv
   This reads files 2, 3, 4, and 9 from the FITS tape on
   device /dev/rmt/1n.  The output NDF names will be ccd2, ccd3,
   ccd4, and ccd9 (assuming there are no groups).  The data will
   not have format conversion.

fitsin mt=$TAPE files=* auto prefix=ccd fmtcnv logfile=jkt.log
   This reads all the files from the FITS tape on the device
   assigned to the environment variable TAPE.  The output files
   begin with a prefix "ccd".  Integer data arrays are converted
   to real using the scale and zero found in the FITS header.  A
   record of the headers and the names of the output files are
   written to the text file jkt.log.

References

   Wells, D.C., Greisen, E.W. & Harten, R.H. 1981,
      Astron. Astrophys. Suppl. Ser. 44, 363.
   Greisen, E.W. & Harten, R.H. 1981,
      Astron. Astrophys. Suppl. Ser. 44, 371.
   Grosbol, P., Harten, R.H., Greisen, E.W & Wells, D.C.
      1988 Astron. Astrophys. Suppl. Ser. 73, 359.
   Harten, R.H., Grosbol, P., Greisen, E.W & Wells, D.C.
      1988 Astron. Astrophys. Suppl. Ser. 73, 365.

Related_Applications

   KAPPA: FITSDIN, FITSHEAD, FITSIMP, FITSLIST; CONVERT: FITS2NDF;
   CURSA; Figaro: RDFITS.

Authors

MJC: Malcolm J. Currie (STARLINK)

PMA: Peter Allan (University of Manchester)

DSB: David S. Berry (STARLINK)

History

 1987 Jul  8 (PMA):
    Uses HDS but not the NDF format as it was not then defined.

 1988 Mar 25 (PMA):
    Second version. Modified to use FITS extension to standard NDF
    format.

 1988 Apr 19 (PMA):
    Allow a null parameter for the output dataset, which skips the
    processing of that file. This allows the user to read the fits
    header and to then decide not to create an output file.

 1988 May (MJC):
    Converted to KAPPA style, added further error checks and
    aborts, removed references to the Interim environment.

 1988 Sept  (MJC):
    Greatly expanded and rewritten to process group-format files
    and blocked records.

 1988 Nov  2 (MJC):
    Corrected some of the tidying, particularly cancelling OUTPUT,
    annulling FLOC and fixing an editing typo' unmapping and
    annulling of the work array.

 1988 Nov  3 (MJC):
    Added automatic mode, no data-conversion option and more
    commentary as each file is processed.

 1988 Nov  4 (MJC):
    Close HDS files created by HDS_NEW to prevent lots of files
    being open .

 1988 Nov  5 (MJC):
    Version that uses MORE.FITS instead of MORE.FITS.IN in case we
    change our minds! .

 1989 Feb 15 (MJC):
    Corrected tidying of all workspace .

 1989 Jul 19 (MJC):
    Removed LOGHDR parameter and tested for a null log-file name;
    reported all groups' completed via the same method, so that
    logical prefixes appears for the first group.

 1989 Aug  1 (MJC):
    Converted to read tables format.

 1989 Sep 18 (MJC):
    NOCON is now a global-format-conversion PROMPTING switch,
    formerly it could only set no format conversion globally (when
    not in automatic mode), the name of the output file is written
    to the logfile.

 1989 Nov 22 (MJC):
    Loops for multiple FITS files/extensions within a tape file,
    and sub file numbers written to the log file.

 1989 Nov 24 (MJC):
    Change to use OFFSET=ACTSIZ meaning block is exhausted rather
    than the counter-intuitive 0; skip over data for null output
    files.

 1989 Dec 21 (MJC):
    Workspace managed by AIF_TEMP.

 1990 Jan 11 (MJC):
    Fixed bug in the test for multiple files so that it tests for
    blank data in the current block.

 1990 Feb 20 (MJC):
    Auto mode is available for table files, replaced SUBPAR calls
    by AIF_FLNAM call, AIF_OPFIO call renamed AIF_ASFIO, and
    logging of table and description file names.

 1990 Nov 15 (MJC):
    NDF version featuring axes, title and units; expanded and
    restructured prologue; parameter NOCON renamed GLOCON so that
    a NO prefix may be used to indicate false.

 1990 November 30 (MJC):
    Altered logic to process FITS records rather than blocks and
    modified subroutine calls to reflect this (record-processing is
    needed to handle disk files and tape consistently by the same
    subroutines). IEEE floating-point supported.

 1991 February 28 (MJC):
    Added the NCARD argument for various revised FTS1_x calls.

 1991 October 10 (MJC):
    Fixed bug when GLOCON and FMTCNV set to true and dealing with
    IEEE-format data.

 1991 October 11 (MJC):
    Increased the maximum buffer size to 22 FITS records in order
    to accommodate IRAF's non-standard blocking factors.

 1992 February 24 (MJC):
    Ensured that HDS file mapping will occur after tuning option
    is added.

 1992 March 3 (MJC):
    Replaced AIF parameter-system calls by the extended PAR
    library.

 1993 April 15 (MJC):
    Made to work on UNIX.

 1993 December 3 (MJC):
    Made to work for Alphas.

 1995 October 5 (MJC):
    Documentation overhaul.  Changed dynamic default of FMTCNV.

 1995 November 18 (MJC):
    The tape drive is no longer rewound.

 1996 June 11 (MJC):
    Added REWIND parameter to control initial rewinding.  Linux
    usage enabled.

 18-FEB-1998 (DSB):
    Call to FTS1_GKEYL had arguments THERE and NOCCUR swapped, causing
    a segmentation violation.

 9-JUN-1998 (DSB):
    Added support for WCS component.

Implementation_Status

   -  The application processes tapes blocked at other than an
   integer multiple of 2880 bytes up to a maximum of 63360, provided
   it is a multiple of the number of bytes per data value.

   -  For simple or group format FITS:

      -  IEEE floating point is supported.

      -  If BUNIT is present its value will appear as the NDF's units
      component.

      -  If OBJECT is present its value will appear as the NDF's
      title component.

      -  If the BLANK item is present in the header, undefined pixels
      are converted from the BLANK value to Starlink-standard bad
      value during data conversion.

      -  An AXIS component will be stored in the NDF if the CRVALn
      keyword is present.  (n is the number of the dimension.)  If
      the CRPIXn keyword is absent it defaults to 1, and likewise
      for the CDELTn keyword.  The value of CRTYPEn is made the label
      of the axis structure.

   -  For groups format, a new NDF is created for each data array.
   The name of the NDF of the second and subsequent data arrays is
   generated by the application as the <filename>G<number>, where
   filename is the name of the first NDF, supplied by you or
   generated automatically, and <number> is the number of the group.

   Each group NDF contains the full header in the FITS extension,
   appended by the set of group parameters.  The group parameters
   are evaluated using their scales and offsets, and made to look
   like FITS cards, whose keywords are derived from the values of
   PTYPEm in the main header.  (m is the number of the group
   parameter.) The same format is used in the log file.

   -  If there is no data array on tape, i.e. the FITS file comprises
   header cards only, then a dummy vector data array of dimension
   two is created to make the output a valid NDF.  This data array
   is undefined.
.endhelp
