.help tranjoin Starlink kappa
.nf
Joins two transformations.
 Usage:
    tranjoin in1 in2 out dest=?
 Description:
    This joins two transformations stored in the TRANSFORM (SUN/61)
   format.  The concatenated transformation can be stored with either
   original transformation or be placed in a new file.

Parameters

For information on individual parameters, select from the list below:

DEST

DEST = LITERAL (Read)
   The destination for the concatenated transformations.  This can
   be one of the following:
      "First"  -  Appends the second transformation in the first.
                  The second transformation is unchanged.
      "Second" -  Prefixes the first transformation in the second.
                  The first transformation is unchanged.
      "New"    -  Creates a new transformation structure using
                  parameter OUT.  The input transformations are
                  unchanged.
   ["New"]

IN1

IN1 = TRN (Read and Write)
   The first transformation structure to be concatenated.  It
   prefixes the second supplied transformation.  This may be an
   HDS container file, in which case the transformation structure
   is assumed to be called TRANSFORM at the top level of the
   file; or a path to the HDS object.  The suggested default is
   the current value.

IN2

IN2 = TRN (Read and Write)
   The second transformation structure to be concatenated.  It
   appends to the first supplied transformation.  This may be an
   HDS container file, in which case the transformation structure
   is assumed to be called TRANSFORM at the top level of the
   file; or a path to the HDS object.  The suggested default is
   the current value.

OUT

OUT = TRN (Write)
   The path to the new transformation structure created when
   DEST="NEW" to hold the concatenated transformations.  If only
   an HDS container filename is supplied, the transformation is
   placed within a structure called TRANSFORM at the top-level of
   the file.  So for instance, if OUT=warp9, the transformation
   will be placed in the top-level structure TRANSFORM within
   the file warp9.sdf.  In this case the container file may
   already exist.  If, on the other hand, an explicit structure
   is named, the transformation information will be placed there.
   For example, to place the transformation in the extension
   GALPHOT of the NDF called NGC253, OUT would be
   NGC253.MORE.GALPHOT.  The structure name is limited to 15
   printing characters.  Note that the structure must not already
   exist.  If it does, an error condition results.

Examples

tranjoin tr1 tr2 tr3
   This prefixes the transformation in the HDS file called
   tr1.sdf to that in file tr2.sdf, and stores the result in HDS
   file tr3.sdf.  All three transformations are located within
   objects called TRANSFORM at the top-level.
 tranjoin offset shear.tr1 shape.rotate
   This prefixes the transformation in the structure TRANSFORM at
   the top level of the HDS container file called offset.sdf
   (i.e.  OFFSET.TRANSFORM) to the transformation in the
   structure TR1 in the HDS file shear.sdf.  The resulting
   transformation is in the file called shape.sdf and is named
   ROTATE.
 tranjoin norm.scale1 polar dest=S
   This prefixes the transformation structure NORM.SCALE1 to
   POLAR.TRANSFORM, the concatenation being stored in
   POLAR.TRANSFORM.
 tranjoin norm.scale1 polar dest=f
   This appends the transformation structure POLAR.TRANSFORM to
   NORM.SCALE1, the concatenation being stored in NORM.SCALE1.

Notes

-  The number of output variables of the first transformation must
equal the number of input variables of the second.  Also it is not
permitted to concatenate a transformation in which only the
forward mapping is defined with another in which only the inverse
mapping is specified.
 -  On completion, the destination structure for the
transformation information equates to the current transformation
global parameter.

Related_Applications

   KAPPA: TRANSFORMER, TRANINVERT, TRANMAKE, TRANTRACE;
   CCDPACK: CCDEDIT, TRANLIST, TRANNDF.

Authors

MJC: Malcolm J. Currie (STARLINK)

History

 1995 March 9 (MJC):
    Original version.
.endhelp
