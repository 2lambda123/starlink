#!/bin/tcsh
#+
#  Name:
#     make_unix_release

#  Purpose:
#     Do unix specific bits required to make a release of kappa.

#  Language:
#      TCSH script

#  Type of Module:
#     Shell script

#  Invocation:
#     make_unix_release

#  Description:
#     This command creates a compressed tar file containing a release of the 
#     kappa package. It is called from within the make_release script. 

#  Copyright:
#     Copyright (C) 1997 Central Laboratory of the Research Councils.
#     All Rights Reserved.

#  Licence:
#     This program is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied
#     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#     PURPOSE. See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software
#     Foundation, Inc., 51 Franklin Street,Fifth Floor, Boston, MA
#     02110-1301, USA

#  Authors:
#     DSB: David S. Berry (STARLINK)
#     {enter_new_authors_here}

#  History:
#     4-DEC-1997 (DSB):
#       Original version, based on POLPACK equivalent.
#     {enter_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

#  Ensure the sdt grp command is available.
      source $SDT_DIR/startup.csh

#  Ensure the sst prohlp command is available.
      source /dsbwork/bin/sst/start

#  Store the name of the release directory, and go there.
      set REL_DIR = ${TEMPDIR}/kappa_${SYSTEM}
      cd ${REL_DIR}
      echo "Moved to $PWD"

#  Expand any generic source files.
      foreach file (`grp generic_sources`)
         echo "Expanding generic source file $file"
         $STARLINK/bin/generic -t n -s ${file}
      end

#  Rename unsigned data type files.
      foreach n (*W.f)
         echo "Renaming expanded file file $n"
         mv $n `basename $n W.f`uw.f
      end
      foreach n (*B.f)
         echo "Renaming expanded file file $n"
         mv $n `basename $n B.f`ub.f
      end

#  Check for direct calls to NDF parameter routines. These should usually
#  be replaced by equivalent LPG routines (to allow multiple invocations to 
#  process groups of NDFs).
      set n = `grep -il "PAR_STATE\|NDF_ASSOC\|NDF_PROP\|NDF_CREAT\|NDF_CREP" *.f`
      if( "$n" != "" ) then
         set ans = `confirm "The following files contain references to NDF\nparameter routines or to PAR_STATE. May be these should be\nreplaced by equivalent LPG routines... Continue?\n\n$n"`
         if( "$ans" == "n" || "$ans" == "N" ) then
            exit
         endif
      endif

#  Copy the hypertext docs to the release directory.
      echo "Copying the hypertext docs to the release directory."
      cp ${KAPPA_DEV}/../sun95.htx_tar ${REL_DIR}
      cp ${KAPPA_DEV}/../sun221.htx_tar ${REL_DIR}

#  Ensure all files are accessable.
      echo "Setting protection for all files"
      chmod 777 *

#  Edit in the current package version number into any required source files.
      echo "Editing the current package version number into source files"
      set vers = `grep "PKG_VERS = " makefile`
      if ( "$vers" == "" ) then
         echo "Can't get package version number from makefile."
         exit
      endif

      foreach file (kappa.demo)
         sed -e "s#PKG_VERS#$vers[3]#g" $file > temp
         mv -f temp $file
      end

#  Generate the ifl files, and the icl and csh start-up scripts. 
      echo "Generating ifl files, etc form the ifd file"
      ifd2star kappa

#  Do any necessary post processing of the generated files to overcome 
#  deficiencies in ifd2star
      sed -e "s#picgrid 'picdef mode=array fraction=1.0#picgrid 'picdef array 1.0#g" kappa.csh > temp
      mv temp kappa.csh
      sed -e "s#picxy 'picdef mode=xy fraction=1.0#picxy 'picdef xy 1.0#g" kappa.csh > temp
      mv temp kappa.csh

      sed -e "s#picg(rid) picdef mode=array fraction=1.0#picg(rid) picdef array 1.0#g" kappa.icl > temp
      mv temp kappa.icl
      sed -e "s#picx(y) picdef mode=xy fraction=1.0#picx(y) picdef xy 1.0#g" kappa.icl > temp
      mv temp kappa.icl
            
      sed -e 's#prefix=""#prefix=\\"\\"#g' kappa.csh > temp
      mv temp kappa.csh

#  Generate the IRAF files.
      echo "Generating iraf files"
      ifd2iraf kappa

#  Create the on-line help file.
      mv lutedit.help lutedit.gui-help
      foreach file (`grp kappa_ifls`)
         set ffile = `basename $file .ifl`.f
         set hfile = `basename $file .ifl`.help
         prohlp in=$ffile out=$hfile
      end
      /bin/rm *_mon.help
      cat kappa.star-hlp *.help > new.hlp
      mv new.hlp kappa.hlp
      /bin/rm *.help
      mv lutedit.gui-help lutedit.help 

#  Generate the IRAF documentation.
      ifd_irafhlpgen kappa

#  Remove entries from kappa.men and kappa.hd which do not relate to actions.
      $KAPPA_DEV/bin/mencheck.tcl
      $KAPPA_DEV/bin/hdcheck.tcl

#  Copy files to iraf directory.
      set kiraf = "$HOME/iraf/kappa"
      /bin/rm -rf $kiraf
      mkdir $kiraf
      cp root.hd $kiraf
      cp _kappa.hd $kiraf
      cp kappa.hd $kiraf
      cd $kiraf/..

#  Create a CL script which will create the help database on sa1.
      cat > temp.cl << FOO
set kappa = /home/dsb/iraf/kappa/
so
mkhelpdb $kiraf/root.hd helpdb.mip
lo
FOO

# Execute the cl script, and copy the helpdb.mip file back.
      cl < temp.cl
      cp helpdb.mip $REL_DIR
      cd $REL_DIR

#  Create each of the tar files. First do the system-independant ones
#  listed in group TAR_FILES_A...
      foreach file (`grp tar_files_a`)
         echo "Creating ${file}.tar"
         chmod 644 `grp ${file}`
         chmod 755 `find . -type d`
         tar -cvh -f ${TEMPDIR}/${file}.tar `grp ${file}`
         /bin/rm -f `grp ${file}`
         mv ${TEMPDIR}/${file}.tar ${REL_DIR}
      end

#  Make the ctg and lpg source tar files.
#      ${CTG_SYS}/dev/bin/make_source.csh
#      ${LPG_SYS}/dev/bin/make_source.csh

#  Tar up all the release files and then remove them.
      echo "Creating kappa.tar"
      chmod 644 `grp unix_total`
      chmod 755 `find . -type d`
      chmod 755 mk
      tar -cvh -f ${TEMPDIR}/kappa.tar `grp unix_total` 
      /bin/rm `grp unix_total` 
      mv ${TEMPDIR}/kappa.tar ${REL_DIR}
      /bin/rm -rf doc kappa.ifd

#  Compress it.
      echo "Compressing kappa.tar"
      compress kappa.tar

# Remove any spare .f files created by the expansion of generic source
# files but not included in the release. Also remove grp.make.
      /bin/rm -f *.f grp.make

      exit
