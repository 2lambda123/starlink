.help compave Starlink kappa
.nf
Reduces the size of an NDF by averaging values in rectangular
boxes.

Usage:

   compave in out compress [wlim]

Description:

   This application takes an NDF data structure and reduces it in
   size by integer factors along each dimension.  The compression
   is achieved by averaging the input NDF within non-overlapping
   `rectangular' boxes whose dimensions are the compression factors.
   The averages may be weighted when there is a variance array
   present.

Parameters

For information on individual parameters, select from the list below:

AXWEIGHT

AXWEIGHT = _LOGICAL (Read)
   When there is an AXIS variance array present in the NDF and
   AXWEIGHT=TRUE the application forms weighted averages of the
   axis centres using the variance.  For all other conditions
   the non-bad axis centres are given equal weight during the
   averaging to form the output axis centres. [FALSE]

COMPRESS

COMPRESS( ) = _INTEGER (Read)
   Linear compression factors to be used to create the output
   NDF.  There should be one for each dimension of the NDF.  If
   fewer are supplied the last value in the list of compression
   factors is given to the remaining dimensions.  Thus if a
   uniform compression is required in all dimensions, just one
   value need be entered.  All values are constrained to be in
   the range one to the size of its corresponding dimension.  The
   suggested default is the current value.

IN

IN  = NDF (Read)
   The NDF structure to be reduced in size.

OUT

OUT = NDF (Write)
   NDF structure to contain compressed version of the input NDF.

PRESERVE

PRESERVE = _LOGICAL (Read)
   If the input data type is to be preserved on output then this
   parameter should be set true.   However, this will probably
   result in a loss of precision.  If this parameter is set false
   then the output data type will be one of _REAL or _DOUBLE,
   depending on the input type. [FALSE]

TITLE

TITLE = LITERAL (Read)
   Title for the output NDF structure.  A null value (!)
   propagates the title from the input NDF to the output NDF. [!]

WEIGHT

WEIGHT = _LOGICAL (Read)
   When there is a variance array present in the NDF and
   WEIGHT=TRUE the application forms weighted averages of the
   data array using the variance.  For all other conditions
   the non-bad pixels are given equal weight during averaging.
   [FALSE]

WLIM

WLIM = _REAL (Read)
   If the input NDF contains bad pixels, then this parameter
   may be used to determine the number of good pixels which must
   be present within the averaging box before a valid output
   pixel is generated.  It can be used, for example, to prevent
   output pixels from being generated in regions where there are
   relatively few good pixels to contribute to the smoothed
   result.

   WLIM specifies the minimum fraction of good pixels which must
   be present in the averaging box in order to generate a good
   output pixel.  If this specified minimum fraction of good
   input pixels is not present, then a bad output pixel will
   result, otherwise an averaged output value will be calculated.
   The value of this parameter should lie between 0.0 and 1.0
   (the actual number used will be rounded up if necessary to
   correspond to at least 1 pixel). [0.3]

Examples

compave cosmos galaxy 4
   This compresses the NDF called cosmos averaging four times in
   each dimension, and stores the reduced data in the NDF called
   galaxy.  Thus if cosmos is two-dimensional, this command
   would result in a sixteen-fold reduction in the array
   components.

compave cosmos galaxy 4 wlim=1.0
   This compresses the NDF called cosmos averaging four times in
   each dimension, and stores the reduced data in the NDF called
   galaxy.  Thus if cosmos is two-dimensional, this command
   would result in a sixteen-fold reduction in the array
   components.  If an averaging box contains any bad pixels, the
   output pixel is set to bad.

compave cosmos galaxy 4 0.0 preserve
   As above except that an averaging box need only contains a
   single non-bad pixels for the output pixel to be good, and
   galaxy's array components will have the same as those in
   cosmos.

compave cosmos galaxy [4,3] weight title="COSMOS compressed"
   This compresses the NDF called cosmos averaging four times in
   the first dimension and three times in higher dimensions, and
   stores the reduced data in the NDF called galaxy.  Thus if
   cosmos is two-dimensional, this command would result in a
   twelve-fold reduction in the array components.  Also, if there
   is a variance array present it is used to form weighted means
   of the data array.   The title of the output NDF is "COSMOS
   compressed".

compave in=arp244 compress=[1,1,3] out=arp244cs
   Suppose arp244 is a huge NDF storing a spectral-line data
   cube, with the third dimension being the spectral axis.
   This command compresses arp244 in the spectral dimension,
   averaging every three pixels to form the NDF called arp244cs.

Notes

-  The axis centres and variances are averaged, whilst the widths
are summed and always normalised for bad values.

Related_Applications

   KAPPA: BLOCK, COMPADD, COMPICK, PIXDUPE, SQORST, TRANSFORMER;
   Figaro: ISTRETCH.

Authors

MJC: Malcolm J. Currie (STARLINK)

History

 1991 November 27 (MJC):
    Original version.

 1995 January 11 (MJC):
    Made TITLE propagate from the input NDF.  Used PSX for
    workspace.


Implementation_Status

   -  This routine correctly processes the AXIS, DATA, VARIANCE,
   LABEL, TITLE, UNITS, and HISTORY components of the input NDF and
   propagates all extensions.  QUALITY is not processed since it is
   a series of flags, not numerical values.

   -  Processing of bad pixels and automatic quality masking are
   supported.

   -  All non-complex numeric data types can be handled.

   -  Any number of NDF dimensions is supported.
.endhelp
