.help thresh Starlink kappa
.nf
Edits an NDF such that array values below and above two thresholds
take constant values.

Usage:

   thresh in out thrlo thrhi newlo newhi [comp]

Description:

   This application creates from an input NDF structure an NDF with
   an array component whose values are edited as follows.  Array
   values between and including the upper and lower thresholds are
   copied from the input to output array.  Any values in the input
   array greater than the upper threshold will be set to one
   specified value, and anything less than the lower threshold will
   be set to another specified value, in the output data array.
   Thus if the replacement values equal their respective thresholds
   this application creates an NDF constrained to lie between two
   bounds.  Each replacement value may be the bad-pixel value for
   masking.

Parameters

For information on individual parameters, select from the list below:

COMP

COMP = LITERAL (Read)
   The components whose values are to be constrained between
   thresholds.  The options are limited to the arrays within the
   supplied NDF.  In general the value may be "Data", "Quality",
   "Error", or "Variance".  If "Quality" is specified, then the
   quality values are treated as numerical values in the range 0
   to 255.  ["Data"]

IN

IN = NDF  (Read)
   Input NDF structure containing the array to have thresholds
   applied.

NEWLO

NEWLO = LITERAL (Read)
   This defines the value to which all input array-element values
   less than the lower threshold are set.  If this is set to
   "Bad", the bad value is substituted.  Numerical values of
   NEWLO must lie in within the minimum and maximum values of the
   data type of the array being processed.  The suggested default
   is the lower threshold.

NEWHI

NEWHI = LITERAL (Read)
   This defines the value to which all input array-element values
   greater than the upper threshold are set.  If this is set to
   "Bad", the bad value is substituted.  Numerical values of
   NEWHI must lie in within the minimum and maximum values of the
   data type of the array being processed.  The suggested default
   is the upper threshold.

OUT

OUT = NDF (Write)
   Output NDF structure containing the thresholded version of
   the array.

THRHI

THRHI = _DOUBLE (Read)
   The upper threshold value within the input array.  It must lie
   in within the minimum and maximum values of the data type of
   the array being processed.  The suggested default is the
   current value.

THRLO

THRLO = _DOUBLE (Read)
   The lower threshold value within the input array.  It must lie
   in within the minimum and maximum values of the data type of
   the array being processed.  The suggested default is the
   current value.

TITLE

TITLE = LITERAL (Read)
   Title for the output NDF structure.  A null value (!)
   propagates the title from the input NDF to the output NDF. [!]

Examples

thresh zzcam zzcam2 100 500 0 0
   This copies the data array in the NDF called zzcam to the NDF
   called zzcam2.  Any data value less than 100 and greater than
   500 in zzcam is set to 0 in zzcam2.

thresh zzcam zzcam2 100 500 0 0 comp=Variance
   As above except that the data array is copied unchanged and the
   thresholds apply to the variance array.

thresh n253 n253cl thrlo=-0.5 thrhi=10.1 \
   This copies the data array in the NDF called n253 to the NDF
   called n253cl.  Any data value less than -0.5 in n253 is set
   to -0.5 in n253cl, and any value greater than 10.1 in n253
   becomes 10.1 in n253cl.

thresh pavo pavosky -0.02 0.02 bad bad
   All data values outside the range -0.02 to 0.02 in the NDF
   called pavo become bad in the NDF called pavosky.  All values
   within this range are copied from pavo to pavosky.

Related_Applications

   KAPPA: HISTEQ, MATHS; Figaro: CLIP, IDIFF, RESCALE.

Authors

MJC: Malcolm J. Currie  (STARLINK)

DSB: David S. Berry (STARLINK)

History

 1991 November 6 (MJC):
    Original NDF_ version.

 1994 September 26 (MJC):
    TITLE propagated from input NDF by default.  Lowercase examples
    and usage.

 1996 April 11 (MJC):
    Use the bad-pixel flag.

 5-JUN-1998 (DSB):
    Added propagation of the WCS component.

Implementation_Status

   -  This routine correctly processes the AXIS, DATA, QUALITY,
   VARIANCE, LABEL, TITLE, UNITS, WCS and HISTORY components of an NDF
   data structure and propagates all extensions.

   -  Processing of bad pixels and automatic quality masking are
   supported.

   -  All non-complex numeric data types can be handled.

   -  Any number of NDF dimensions is supported.
.endhelp
