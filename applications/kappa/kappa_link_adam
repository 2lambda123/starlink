
#  N.B. the previous line should be blank.
#+
#  Name:
#      kappa_link_adam

#  Purpose:
#     Generate linker (ld) arguments for linking against KAPPA.

#  Type of Module:
#     Bourne-shell script.

#  Description:
#     This script lists the linking qualifiers for the non-KAPPA
#     libraries used by KAPPA.  It should be invoked by those building
#     KAPPA or other applications which use KAPPA libraries in order to
#     generate the correct arguments for the compiler (or ld) command.
#     The arguments generated are written to the standard output.

#     The script contains an awk script to remove duplicate references
#     that result from other linker `options' files.  The file is
#     needed because there would be too many references before the awk
#     script could reduce them.

#  Invocation:
#     The script is normally invoked as part of a makefile command to
#     create a monolith in Starlink standard makefiles, thus:
#
#         $(ALINK) $(MONO_OBJECT) -o $(MONOLITH) `./kappa_libs` \
#             -L$(STAR_LIB) `./kappa_link_adam`

#  Copyright:
#     Copyright (C) 1995 Rutherford Appleton Laboratory

#  Authors:
#     MJC:  Malcolm J. Currie (STARLINK)
#     RFWS: R.F. Warren-Smith (STARLINK, RAL)
#     BLY:  M.J. Bly (Starlink, RAL)
#     {enter_new_authors_here}

#  History:
#     1992 June 3 (MJC):
#        Original version.
#     1995 August 19 (MJC)
#        Merged with the RFWS-BLY template app_link_adam.  Incorporated
#        the libraries listed in kappa_graphics and kappa_rest scripts.
#     1995 October 26 (MJC)
#        Added PDA and ARD.
#     1997 May 31 (MJC)
#        Removed NAG.
#     15-OCT-1998 (DSB):
#        Added AST (following NDF because ndf_link_adam includes AST with 
#        no graphics), and CAT.
#     11-JUL-2001 (DSB):
#        Replace most of the library list with `kaplibs_link_adam`.
#     {enter_further_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

      echo `ard_link_adam` `kaplibs_link_adam` \
           | awk 'BEGIN{RS=" ";FS="\n"}
                  {f[i++]=$1}
                  END{for(;i--;)if(!w[f[i]]++)l=f[i]" "l;print l}'

#  End of script.
