.help exp10 Starlink kappa
.nf
    Takes the base-10 exponential of each pixel of a data array
 
   This routine takes the exponential to base 10 of each pixel of
   a data array. The result goes into a new output data array.
   Both data arrays are stored in the IMAGE format.
 
   The magic-value method is used for processing bad data.

AUTHORS

   Mark McCaughrean UoE ( REVA::MJM )
   Malcolm Currie  STARLINK (RAL::CUR)

BUGS

   None known.

HISTORY

   02-07-1986 : First implementation (REVA::MJM)
   1986 Aug 6 : Renamed algorithm subroutine (EXPARR), changed new
                2nd argument to total number of pixels (RAL::CUR).
   1986 Aug 28: Added argument section, generalised to vectors and
                tidied (RAL::CUR).
   1987 Oct 15: Reordered tidying and used CMP_SHAPE (RAL::CUR)
   1988 Mar 17: Referred to `array' rather than `image'
                (RAL::CUR)
   1988 May 30: More reporting of error context (RAL::CUR)
   1989 Jun 13: Allow for processing primitive NDFs (RAL::CUR)
   1991 Oct 25: Propagates AXIS, LABEL, and HISTORY (RAL::CUR).
   1992 Feb 25: Limited processing of simple NDFs (RAL::CUR).
   1992 Mar  3: Replaced AIF parameter-system calls by the extended
                PAR library (RAL::CUR).

PARAMETERS

   INPIC  =  IMAGE( READ )
       Input IMAGE structure containing the data array
   BASE  =  REAL( READ )
       Base of exponential to be taken of each input data array pixel
   OUTPIC  =  IMAGE( WRITE )
       Output IMAGE structure holding result of exponentiated array
   OTITLE  =  CHAR( READ )
       Title string for the output IMAGE structure

INPIC

  position    1
  keyword     'INPIC'
  type        'IMAGE'
  access      'READ'
  vpath       'PROMPT'
  ppath       'GLOBAL'
  association '<-GLOBAL.DATA_ARRAY'
  prompt      'Input image'
  help        'Name of the IMAGE structure containing the input data 
              array'

BASE

  position    2
  keyword     'BASE'
  type        '_REAL'
  access      'READ'
  vpath       'DEFAULT'
  prompt      'Base'
  default     10.0
  help        'Base of exponential to be taken of each input 
              data-array pixel'

OUTPIC

  position    3
  keyword     'OUTPIC'
  type        'IMAGE'
  access      'WRITE'
  vpath       'PROMPT'
  association '->GLOBAL.DATA_ARRAY'
  prompt      'Output image'
  help        'Name given to the IMAGE structure holding the data 
              array resulting from exponentiation'

OTITLE

  position    4
  keyword     'OTITLE'
  type        'LITERAL'
  vpath       'DEFAULT'
  prompt      'Title for output image'
  default     'KAPPA - Exp10'
  help        'Character string used as a title for the output IMAGE 
              structure.'
 1 EXPE
    Takes the exponential of each pixel of a data array (base e)
 
   This routine takes the exponential to base e of each pixel of
   a data array. The result goes into a new output data array.
   Both data arrays are stored in the IMAGE format.
 
   The magic-value method is used for processing bad data.

AUTHORS

   Mark McCaughrean UoE ( REVA::MJM )
   Malcolm Currie  STARLINK (RAL::CUR)

BUGS

   None known.

HISTORY

   02-07-1986 : First implementation (REVA::MJM)
   1986 Aug 6 : Renamed algorithm subroutine (EXPARR), changed new
                2nd argument to total number of pixels (RAL::CUR).
   1986 Aug 28: Added argument section, generalised to vectors and
                tidied (RAL::CUR).
   1987 Oct 15: Reordered tidying and used CMP_SHAPE (RAL::CUR)
   1988 Mar 17: Referred to `array' rather than `image'
                (RAL::CUR)
   1988 May 30: More reporting of error context (RAL::CUR)
   1989 Jun 13: Allow for processing primitive NDFs (RAL::CUR)
   1991 Oct 25: Propagates AXIS, LABEL, and HISTORY (RAL::CUR).
   1992 Feb 25: Limited processing of simple NDFs (RAL::CUR).
   1992 Mar  3: Replaced AIF parameter-system calls by the extended
                PAR library (RAL::CUR).

PARAMETERS

   INPIC  =  IMAGE( READ )
       Input IMAGE structure containing the data array
   BASE  =  REAL( READ )
       Base of exponential to be taken of each input data array pixel
   OUTPIC  =  IMAGE( WRITE )
       Output IMAGE structure holding result of exponentiated array
   OTITLE  =  CHAR( READ )
       Title string for the output IMAGE structure

INPIC

  position    1
  keyword     'INPIC'
  type        'IMAGE'
  access      'READ'
  vpath       'PROMPT'
  ppath       'GLOBAL'
  association '<-GLOBAL.DATA_ARRAY'
  prompt      'Input image'
  help        'Name of the IMAGE structure containing the input data 
              array'

BASE

  position    2
  keyword     'BASE'
  type        '_REAL'
  access      'READ'
  vpath       'DEFAULT'
  prompt      'Base'
  default     2.718282
  help        'Base of exponential to be taken of each input 
              data-array pixel'

OUTPIC

  position    3
  keyword     'OUTPIC'
  type        'IMAGE'
  access      'WRITE'
  vpath       'PROMPT'
  association '->GLOBAL.DATA_ARRAY'
  prompt      'Output image'
  help        'Name given to the IMAGE structure holding the data 
              array resulting from exponentiation'

OTITLE

  position    4
  keyword     'OTITLE'
  type        'LITERAL'
  vpath       'DEFAULT'
  prompt      'Title for output image'
  default     'KAPPA - Expe'
  help        'Character string used as a title for the output IMAGE 
              structure.'
 1 EXPON
    Takes the exponential of each pixel of a data array
 
   This routine takes the exponential to an input base of each pixel
   of a data array. The result goes into a new output data array.
   Both data arrays are stored in the IMAGE format.
 
   The magic-value method is used for processing bad data.

AUTHORS

   Mark McCaughrean UoE ( REVA::MJM )
   Malcolm Currie  STARLINK (RAL::CUR)

BUGS

   None known.

HISTORY

   02-07-1986 : First implementation (REVA::MJM)
   1986 Aug 6 : Renamed algorithm subroutine (EXPARR), changed new
                2nd argument to total number of pixels (RAL::CUR).
   1986 Aug 28: Added argument section, generalised to vectors and
                tidied (RAL::CUR).
   1987 Oct 15: Reordered tidying and used CMP_SHAPE (RAL::CUR)
   1988 Mar 17: Referred to `array' rather than `image'
                (RAL::CUR)
   1988 May 30: More reporting of error context (RAL::CUR)
   1989 Jun 13: Allow for processing primitive NDFs (RAL::CUR)
   1991 Oct 25: Propagates AXIS, LABEL, and HISTORY (RAL::CUR).
   1992 Feb 25: Limited processing of simple NDFs (RAL::CUR).
   1992 Mar  3: Replaced AIF parameter-system calls by the extended
                PAR library (RAL::CUR).

PARAMETERS

   INPIC  =  IMAGE( READ )
       Input IMAGE structure containing the data array
   BASE  =  REAL( READ )
       Base of exponential to be taken of each input data array pixel
   OUTPIC  =  IMAGE( WRITE )
       Output IMAGE structure holding result of exponentiated array
   OTITLE  =  CHAR( READ )
       Title string for the output IMAGE structure

INPIC

  position    1
  keyword     'INPIC'
  type        'IMAGE'
  access      'READ'
  vpath       'PROMPT'
  ppath       'GLOBAL'
  association '<-GLOBAL.DATA_ARRAY'
  prompt      'Input image'
  help        'Name of the IMAGE structure containing the input data 
              array'

BASE

  position    2
  keyword     'BASE'
  type        '_REAL'
  access      'READ'
  vpath       'PROMPT'
  ppath       'DYNAMIC,DEFAULT'
  prompt      'Base'
  default     2.718282
  help        'Base of exponential to be taken of each input 
              data-array pixel'

OUTPIC

  position    3
  keyword     'OUTPIC'
  type        'IMAGE'
  access      'WRITE'
  vpath       'PROMPT'
  association '->GLOBAL.DATA_ARRAY'
  prompt      'Output image'
  help        'Name given to the IMAGE structure holding the data 
              array resulting from exponentiation'

OTITLE

  position    4
  keyword     'OTITLE'
  type        'LITERAL'
  vpath       'DEFAULT'
  prompt      'Title for output image'
  default     'KAPPA - Expon'
  help        'Character string used as a title for the output IMAGE 
              structure.'
 1 Feedback
Bug reports should be mailed to ussc@star.rl.ac.uk in the normal
way.  A copy to the author (mjc@star.rl.ac.uk) may accelerate a fix.
Normally, fix will be made the same day, and often immediately; you
will be told from where you can copy a revised application until
KAPPA is re-released.
 Constructive comments are always welcome.  If you wish to suggest
new tasks or enhancements to existing ones please contact the
author.  Small jobs may be undertaken quite quickly.  Requests
involving substantial pieces of work need to gain the support of
others to be included in Starlink's, and so the best way to
influence the priority given to KAPPA is to contact the chairman of
the Image Processing Software Strategy Group.  The Starlink
World-Wide-Web pages will periodically contain news of plans and
work in progress.
.endhelp
