#! @PERL@
# @edited_input@
#+
#  Name:
#     latex2html

#  Purpose:
#     Wrapper script to run up a version of LaTeX2HTML.

#  Type of Module:
#     Perl script

#  Description:
#     This script runs the version of LaTeX2HTML distributed with the
#     Starlink environment and sets any necessary environment variables
#     etc. that are required.

#  Parameters:
#     All current parameters are passed to LaTeX2HTML.

#  Authors:
#     PDRAPER: P.W.Draper (Starlink - Durham University)
#     {enter_new_authors_here}

#  History:
#     20-AUG-1998 (PDRAPER):
#        Original version.
#     31-OCT-2000 (PDRAPER):
#        Changed so that this script and the real latex2html are run
#        using the Starlink version of Perl.
#     17-MAR-2008 (PDRAPER):
#        Stripped out -vers argument support. Going to a single version
#        of latex2html.
#     {enter_further_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

$DEBUG = 0;

#  Look for the real latex2html script.
$LATEX2HTML_DIR = "$ENV{'STARLINK_DIR'}/share/latex2html/bin";
if ( ! -d $LATEX2HTML_DIR ) {
   $LATEX2HTML_DIR = "@l2hdir@";
}

#  Installation check.
if ( $LATEX2HTML_DIR =~ /@/) {
   die "Fatal: latex2html script not installed correctly";
}

#  Library search PATH.
$GS_LIB = '';

#  Location of landscape script.
$GSLANDSCAPE='';

#  Name of ghostscript command.
$GS = $ENV{'GS'} || 'gs';

#  Get name of gs executable.
if ( ! ( -x $GS && ! -d $GS ) ) {

#  Search PATH for binary.
   $found = 0;
   foreach ( split(/:/, $ENV{'PATH'} ) ) {
      $executable = join( '', $_, '/', $GS );
      if ( -x $executable && ! -d $executable ) {

#  Trackdown the real name of the executable if this is a symbolic link.
	 if ( -l $executable ) {
	    $tmpfile='NULL';
	    while ( $tmpfile ne '' ) {
	       $tmpfile = readlink($executable);
	       if ( $tmpfile ne '' ) {
                  $executable = join( '', $_, '/', $tmpfile )
               }
	    }
	 }
         $GS = $executable;
         $found = 1;
         last;
      }
   }
   if ( ! $found ) {
       die "Fatal: failed to locate ghostscript on path\n";
   }
}

#  Locate the libraries and postscript files needed for pstoimg.
#  Do this by parsing the output from "gs -h" command.
#|| die "Fatal: execution of \"$gs -h\" failed\n";

open( GS, "$GS -h |" );
$flag = 0;
while ( <GS> ) {
    if( /^\s*Search path/i ) {

# Now look for the gs lib path
	$flag = 1;
    } elsif ( $flag == 1 ) {

# If line starts with whitespace, then we're in the search path list
	if ( /^\s+/ ) {
	    chop;
	    push( @gs_lib_path, split( ":", $_ ) );
	} else {

# No more path entries
	    $flag = 0;
	}
    }
}
close( GS );

#  Look for the ghostscript library. If not available then add guesses.
if(!@gs_lib_path) {
    @gs_lib_path = ('/usr/share/ghostscript','/usr/lib/ghostscript/',
		    '/usr/local/ghostscript','/usr/local/share/ghostscript',
		    '/usr/local/lib/ghostscript');
}
$GS_LIB = join(":", @gs_lib_path);

#  Look for landscape postscript file.
foreach $path (@gs_lib_path) {
    $path =~ s/^\s*(\S*)\s*$/$1/; # strip whitespace
    if(-d "$path" && -f "$path/landscap.ps") {
	$GSLANDSCAPE = "$path/landscap.ps";
    }
}

#  Set the environment variables.
$ENV{'L2HMODULE'} = $LATEX2HTML_DIR;
$ENV{'GS_LIB'} = $GS_LIB;
$ENV{'GSLANDSCAPE'} = $GSLANDSCAPE;

#  Execute real LaTeX2HTML using the same version of Perl as this script.
print "Running: \n" if $DEBUG;
print "$^X $LATEX2HTML_DIR/latex2html @ARGV\n" if $DEBUG;
system( $^X, "$LATEX2HTML_DIR/latex2html", @ARGV );
if ( $? ) {
    exit( 1 );
}
exit( 0 );
