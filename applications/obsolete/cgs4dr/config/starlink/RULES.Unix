# $Id$

INSTALL_PROD=$(PROD:%=$(INSTALL_BIN)/%)
INSTALL_LIBS=$(LIBNAME:%=$(INSTALL_LIB)/%)
INSTALL_INC=$(INC:%=$(INSTALL_INCLUDE)/%)
INSTALL_PROCS=$(PROCS:%=$(INSTALL_PROC)/%)
INSTALL_MANS+=$(MAN1:%=$(INSTALL_MAN)/man1/%)
INSTALL_MANS+=$(MAN2:%=$(INSTALL_MAN)/man2/%)
INSTALL_MANS+=$(MAN3:%=$(INSTALL_MAN)/man3/%)
INSTALL_MANS+=$(MAN4:%=$(INSTALL_MAN)/man4/%)
INSTALL_MANS+=$(MAN5:%=$(INSTALL_MAN)/man5/%)
INSTALL_MANS+=$(MAN6:%=$(INSTALL_MAN)/man6/%)
INSTALL_MANS+=$(MAN7:%=$(INSTALL_MAN)/man7/%)
INSTALL_MANS+=$(MAN8:%=$(INSTALL_MAN)/man8/%)
INSTALL_MANS+=$(MAN9:%=$(INSTALL_MAN)/man9/%)
INSTALL_DOCS=$(DOCS:%=$(INSTALL_DOC)/%)
INSTALL_SCRIPTS=$(SCRIPTS:%=$(INSTALL_BIN)/%)

INSTALL_NDFS =$(NDFS:%=$(INSTALL_NDF)/%)
INSTALL_DSTS =$(DSTS:%=$(INSTALL_DST)/%)
INSTALL_DEMOS=$(DEMOS:%=$(INSTALL_DEMO)/%)
INSTALL_TCLS =$(TCLS:%=$(INSTALL_TCL)/%)

all: install

pre_build:

build:: pre_build DEPENDS $(LIBNAME) $(TARGETS) $(PROD)

install:: build $(INSTALL_INC) $(INSTALL_LIBS) $(TARGETS) \
	  $(INSTALL_PROD) $(INSTALL_MANS) $(INSTALL_DOCS) \
          $(INSTALL_SCRIPTS) $(INSTALL_PROCS)

DEPENDS:: $(SRCS.c) $(SRCS.f)
	rm -f DEPENDS
	touch DEPENDS
ifdef SRCS
	echo you have a SRCS in your Makefile
	exit 2
endif
ifdef SRCS.c
	$(DEPENDS.c) >> DEPENDS
endif
ifdef SRCS.f
	$(DEPENDS.f) >> DEPENDS
endif

clean::
	@echo "Cleaning"
	@$(RM) *.i *.o *.a *.ifl $(TARGETS) $(PROD) $(LIBNAME) $(INC)


$(TARGETS) $(PROD): $(DEPLIBS)

#  The order of the following dependencies is
#  VERY IMPORTANT !!!!

%: %.o
	$(RM) $@
	$(LINK.c) -o $@ $< $(LDLIBS)

#$(PROD): $(OBJS) $(DEPLIBS)
#	$(RM) $@
#	$(LINK.c) -o $@ ${OBJS} $(LDLIBS)

%.o: %.f
	$(RM) $@
	$(COMPILE.f) $<

%.o: ../%.f
	$(RM) $@
	$(COMPILE.f) $<

%.o: %.c
	$(RM) $@
	$(COMPILE.c) $<

%.o: ../%.c
	$(RM) $@
	$(COMPILE.c) $<

%.o: %.cc
	$(RM) $@
	$(COMPILE.cc) $<

%.o: ../%.cc
	$(RM) $@
	$(COMPILE.cc) $<

%.ifc: %.ifl
	$(RM) $@
	$(COMPIFL) $<

%.ifc: ../%.ifl
	@$(RM)  $*.ifl
	@$(LINK) $< .
	@$(RM) $@
	$(COMPIFL) $*.ifl

$(LIBNAME): $(LIBOBJS)
	@echo Building library $@
	$(RM) $@
	$(AR) $(ARFLAGS) $@ $(LIBOBJS)
	@if [ ! -z "$(RANLIB)" ] ; then\
		echo $(RANLIB) $@; \
		$(RANLIB) $@; \
	fi

%.a: $(LIBOBJS)
	@echo Building library $@
	$(RM) $@
	$(AR) $(ARFLAGS) $@ $(LIBOBJS)
	@if [ ! -z "$(RANLIB)" ] ; then\
		echo $(RANLIB) $@; \
		$(RANLIB) $@; \
	fi

$(INSTALL_BIN)/%: %
	@echo "Installing $@"
	@test -d $(INSTALL_LOCATION_BIN) || mkdir $(INSTALL_LOCATION_BIN)
	@test -d $(INSTALL_BIN) || mkdir $(INSTALL_BIN)
	@$(INSTALL) -m 555 $< $(INSTALL_BIN)

$(INSTALL_BIN)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_LOCATION_BIN) || mkdir $(INSTALL_LOCATION_BIN)
	@test -d $(INSTALL_BIN) || mkdir $(INSTALL_BIN)
	@$(INSTALL) -m 555 $< $(INSTALL_BIN)

$(INSTALL_LIB)/%: %
	@echo "Installing library $@"
	@test -d $(INSTALL_LOCATION_LIB) || mkdir $(INSTALL_LOCATION_LIB)
	@test -d $(INSTALL_LIB) || mkdir $(INSTALL_LIB)
	@$(INSTALL) -m 644 $< $(INSTALL_LIB)
	@if [ ! -z "$(RANLIB)" ] ; then\
		$(RANLIB) $(RANLIBFLAGS) $@; \
	fi


$(INSTALL_MAN)/man9/% \
$(INSTALL_MAN)/man8/% \
$(INSTALL_MAN)/man7/% \
$(INSTALL_MAN)/man6/% \
$(INSTALL_MAN)/man5/% \
$(INSTALL_MAN)/man4/% \
$(INSTALL_MAN)/man3/% \
$(INSTALL_MAN)/man2/% \
$(INSTALL_MAN)/man1/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_MAN) || mkdir $(INSTALL_MAN)
	@test -d $(@D) || mkdir $(@D)
	@$(INSTALL) -m 644 $< $(@D)

$(INSTALL_INCLUDE)/%: %
	@echo "Installing $@"
	@test -d $(INSTALL_INCLUDE) || mkdir $(INSTALL_INCLUDE)
	@$(INSTALL) -m 644 $< $(INSTALL_INCLUDE)

$(INSTALL_INCLUDE)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_INCLUDE) || mkdir $(INSTALL_INCLUDE)
	@$(INSTALL) -m 644 $< $(INSTALL_INCLUDE)

$(INSTALL_DOC)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_DOC) || mkdir $(INSTALL_DOC)
	@$(INSTALL) -m 644 $< $(INSTALL_DOC)

$(INSTALL_PROC)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_PROC) || mkdir $(INSTALL_PROC)
	@$(INSTALL) -m 644 $< $(INSTALL_PROC)

$(INSTALL_NDF)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_NDF) || mkdir $(INSTALL_NDF)
	@$(INSTALL) -m 644 $< $(INSTALL_NDF)

$(INSTALL_DST)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_DST) || mkdir $(INSTALL_DST)
	@$(INSTALL) -m 644 $< $(INSTALL_DST)

$(INSTALL_DEMO)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_DEMO) || mkdir $(INSTALL_DEMO)
	@$(INSTALL) -m 644 $< $(INSTALL_DEMO)

$(INSTALL_TCL)/%: ../%
	@echo "Installing $@"
	@test -d $(INSTALL_TCL) || mkdir $(INSTALL_TCL)
	@$(INSTALL) -m 644 $< $(INSTALL_TCL)


ACT_ERR:        $(STAR_INC)/act_err;           $(LINK) $? $@
ADAMDEFNS:      $(STAR_INC)/adam_defns;        $(LINK) $? $@
ADAMERRS:       $(STAR_INC)/adam_err;          $(LINK) $? $@
MESSYS_LEN:     $(STAR_INC)/messys_len;        $(LINK) $? $@
DTASK_ERR:      $(STAR_INC)/dtask_err;         $(LINK) $? $@
DTDEFNS:        $(STAR_INC)/act_err;           $(LINK) $? $@
DTERRS:         $(STAR_INC)/dtask_err;         $(LINK) $? $@
FIO_ERR:        $(STAR_INC)/fio_err;           $(LINK) $? $@
NBS_ERR:        $(STAR_INC)/nbs_err;           $(LINK) $? $@
PAR_PAR:        $(STAR_INC)/par_par;           $(LINK) $? $@
PRM_PAR:        $(STAR_INC)/prm_par;           $(LINK) $? $@
SAI_ERR:        $(STAR_INC)/sae_par;           $(LINK) $? $@
SAE_PAR:        $(STAR_INC)/sae_par;           $(LINK) $? $@
DYNAMIC_MEMORY: $(FIG_INC)/dynamic_memory;     $(LINK) $? $@
DSA_ERRORS:     $(FIG_INC)/dsa/DSA_ERRORS;     $(LINK) $? $@
%.INC :         ../%.INC;                      $(LINK) $? $@
%.INC :         $(INSTALL_INCLUDE)/%.INC;      $(LINK) $? $@

include DEPENDS

.PRECIOUS: %.o %.c %.f
