package starman {
    version @PACKAGE_VERSION@
    prefix stm

    #
    #   STARMAN1_MON.IFL
    #
    executable starman1_mon {
	#
	#      ADDSTARS.IFL
	#
	action addstars {
	    helplib {$STARMAN_HELP_A ADDSTARS PARAMETERS}
	    parameter in {
		vpath global
		association <-global.addstars.in
		type NDF
		access READ
		ppath dynamic default
		default !
		vpath global prompt
		association <->global.addstars.IN
		position 1
		helpkey IN
		prompt {Input image to add stars to? (return for none)}
	    }
	    parameter instars {
		vpath global
		association <-global.addstars.instars
		type NDF
		access READ
		ppath dynamic default
		default !
		vpath global prompt
		association <->global.addstars.INSTARS
		position 2
		helpkey INSTARS
		prompt {Table of input star positions}
	    }
	    parameter profile {
		vpath global
		association <-global.addstars.profile
		type NDF
		access READ
		ppath dynamic default
		default !
		vpath global prompt
		association <->global.addstars.PROFILE
		position 3
		helpkey PROFILE
		prompt {Profile of stars to add (image)}
	    }
	    parameter add {
		vpath global
		association <-global.addstars.add
		type LITERAL
		ppath dynamic
		position 4
		vpath global prompt
		association <->global.addstars.ADD
		helpkey ADD
		prompt {Put stars as +ve or -ve? (add:subtract)}
	    }
	    parameter out {
		vpath global
		association <-global.addstars.out
		type NDF
		access UPDATE
		ppath dynamic default
		default !
		vpath global prompt
		association <->global.addstars.OUT
		position 5
		helpkey OUT
		prompt {Output image}
	    }
	    parameter title {
		vpath global
		association <-global.addstars.title
		type LITERAL
		ppath dynamic
		position 6
		vpath global prompt
		association <->global.addstars.TITLE
		helpkey TITLE
		prompt {Title to add to output image}
	    }
	    parameter outtype {
		vpath global
		association <-global.addstars.outtype
		type LITERAL
		ppath dynamic
		position 7
		vpath global prompt
		association <->global.addstars.OUTTYPE
		helpkey OUTTYPE
		prompt {32-bit real/16-bit integer output? (real:short)}
	    }
	    parameter size {
		vpath global
		association <-global.addstars.size
		type _INTEGER
		ppath dynamic
		position 8
		vpath global prompt
		association <->global.addstars.SIZE
		helpkey SIZE
		prompt {X,Y size of output image}
	    }
	    parameter domap {
		vpath global
		association <-global.addstars.domap
		type _LOGICAL
		ppath dynamic
		position 9
		vpath global prompt
		association <->global.addstars.DOMAP
		helpkey DOMAP
		prompt {Use empirical map of the profile? (yes:no)}
	    }
	    parameter pyes {
		vpath global
		association <-global.addstars.pyes
		type _LOGICAL
		ppath dynamic
		helpkey PYES
		vpath global prompt
		association <->global.addstars.PYES
		prompt {Input profile overrides any table profile? (yes:no)}
	    }
	    parameter starpois {
		vpath global
		association <-global.addstars.starpois
		type _LOGICAL
		ppath dynamic
		helpkey STARPOIS
		vpath global prompt
		association <->global.addstars.STARPOIS
		prompt {Add extra Poisson noise for stars? (yes:no)}
	    }
	    parameter stargain {
		vpath global
		association <-global.addstars.stargain
		type _REAL
		ppath dynamic
		helpkey STARGAIN
		vpath global prompt
		association <->global.addstars.STARGAIN
		prompt {((Poisson equivalent)/(star input)) multiplier}
	    }
	    parameter seed {
		vpath global
		association <-global.addstars.seed
		type _INTEGER
		ppath dynamic
		helpkey SEED
		vpath global prompt
		association <->global.addstars.SEED
		prompt {Seed for random number generator}
	    }
	    parameter sky {
		vpath global
		association <-global.addstars.sky
		type _REAL
		ppath dynamic
		helpkey SKY
		vpath global prompt
		association <->global.addstars.SKY
		prompt {Sky level to add to image}
	    }
	    parameter skypois {
		vpath global
		association <-global.addstars.skypois
		type _LOGICAL
		ppath dynamic
		helpkey SKYPOIS
		vpath global prompt
		association <->global.addstars.SKYPOIS
		prompt {Add extra Poisson noise for sky? (yes:no)}
	    }
	    parameter skygain {
		vpath global
		association <-global.addstars.skygain
		type _REAL
		ppath dynamic
		helpkey SKYGAIN
		vpath global prompt
		association <->global.addstars.SKYGAIN
		prompt {((Poisson equivalent)/(sky input)) multiplier}
	    }
	    parameter pixnoise {
		vpath global
		association <-global.addstars.pixnoise
		type _REAL
		ppath dynamic
		helpkey PIXNOISE
		vpath global prompt
		association <->global.addstars.PIXNOISE
		prompt {Extra Poisson noise to add (factored by SKYGAIN)}
	    }
	}
	#
	# AUTOMAG.IFL
	#
	action automag {
	    helplib {$STARMAN_HELP_A AUTOMAG PARAMETERS}
	    parameter in {
		vpath global
		association <-global.automag.in
		type NDF
		access READ
		helpkey IN
		position 1
		ppath dynamic default
		default !
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.automag.out
		type LITERAL
		ppath dynamic
		position 2
		helpkey OUT
		prompt {Output ASCII file for listing of results}
	    }
	    parameter dofile {
		vpath global
		association <-global.automag.dofile
		type _LOGICAL
		ppath dynamic
		position 3
		helpkey DOFILE
		prompt {Copy results to output ASCII file? (yes:no)}
	    }
	    parameter domult {
		vpath global
		association <-global.automag.domult
		type _LOGICAL
		ppath dynamic
		position 4
		helpkey DOMULT
		prompt {Process multiple input images? (yes:no)}
	    }
	    parameter docentre {
		vpath global
		association <-global.automag.docentre
		type _LOGICAL
		ppath dynamic
		position 5
		helpkey DOCENTRE
		prompt {Centre on stars from rough positions? (yes:no)}
	    }
	    parameter dosecz {
		vpath global
		association <-global.automag.dosecz
		type _LOGICAL
		ppath dynamic
		position 6
		helpkey DOSECZ
		prompt {Correct for atmospheric extinctions? (yes:no)}
	    }
	    parameter dofilt {
		vpath global
		association <-global.automag.dofilt
		type _LOGICAL
		ppath dynamic
		position 7
		helpkey DOFILT
		prompt {Look for image filter used? (yes:no)}
	    }
	    parameter dostds {
		vpath global
		association <-global.automag.dostds
		type _LOGICAL
		ppath dynamic
		position 8
		helpkey DOSTDS
		prompt {Use input table of star RAs/Decs/magns? (yes:no)}
	    }
	    parameter stds {
		vpath global
		association <-global.automag.stds
		type NDF
		access READ
		helpkey STDS
		ppath dynamic default
		default !
		prompt {Table with star RAs/Decs/magns}
	    }
	    parameter stdmast {
		vpath global
		association <-global.automag.stdmast
		type _LOGICAL
		ppath dynamic
		helpkey STDMAST
		prompt {Table RAs/Decs/magns override image values? (yes:no)}
	    }
	    parameter header {
		vpath global
		association <-global.automag.header
		type LITERAL
		ppath dynamic
		helpkey HEADER
		prompt {Text to write at top of output ASCII file}
	    }
	    parameter latitude {
		vpath global
		association <-global.automag.latitude
		type LITERAL
		ppath dynamic
		helpkey LATITUDE
		prompt {Latitude of observatory}
	    }
	    parameter expoff {
		vpath global
		association <-global.automag.expoff
		type _REAL
		ppath dynamic
		helpkey EXPOFF
		prompt {Amount to add to all exposure times}
	    }
	    parameter stardia {
		vpath global
		association <-global.automag.stardia
		type _REAL
		ppath dynamic
		helpkey STARDIA
		prompt {Diamater of star aperture}
	    }
	    parameter skydia {
		vpath global
		association <-global.automag.skydia
		type _REAL
		ppath dynamic
		helpkey SKYDIA
		prompt {Diamater of sky apertures}
	    }
	    parameter nsky {
		vpath global
		association <-global.automag.nsky
		type _INTEGER
		ppath dynamic
		helpkey NSKY
		prompt {Number of sky apertures to use}
	    }
	    parameter thresh {
		vpath global
		association <-global.automag.thresh
		type _REAL
		ppath dynamic
		helpkey THRESH
		prompt {Star detection threshold above sky }
	    }
	    parameter avlim {
		vpath global
		association <-global.automag.avlim
		type _REAL
		ppath dynamic
		helpkey AVLIM
		prompt {Sky rejection difference limit}
	    }
	    parameter box {
		vpath global
		association <-global.automag.box
		type _INTEGER
		ppath dynamic
		helpkey BOX
		prompt {Max size of star images}
	    }
	    parameter offset1 {
		vpath global
		association <-global.automag.offset1
		type _INTEGER
		ppath dynamic
		helpkey OFFSET
		prompt {X,Y offset of sky aperture 1 from star}
	    }
	    parameter offset2 {
		vpath global
		association <-global.automag.offset2
		type _INTEGER
		ppath dynamic
		helpkey OFFSET
		prompt {X,Y offset of sky aperture 2 from star}
	    }
	    parameter offset3 {
		vpath global
		association <-global.automag.offset3
		type _INTEGER
		ppath dynamic
		helpkey OFFSET
		prompt {X,Y offset of sky aperture 3 from star}
	    }
	    parameter offset4 {
		vpath global
		association <-global.automag.offset4
		type _INTEGER
		ppath dynamic
		helpkey OFFSET
		prompt {X,Y offset of sky aperture 4 from star}
	    }
	    parameter date {
		vpath global
		association <-global.automag.date
		type LITERAL
		ppath dynamic
		helpkey DATE
		prompt {Date of observations}
	    }
	    parameter time {
		vpath global
		association <-global.automag.time
		type _REAL
		ppath dynamic
		helpkey TIME
		prompt {Exposure Time}
	    }
	    parameter gain {
		vpath global
		association <-global.automag.gain
		type _REAL
		ppath dynamic
		helpkey GAIN
		prompt {((Poisson equivalent)/(Pixel values)) factor}
	    }
	    parameter noise {
		vpath global
		association <-global.automag.noise
		type _REAL
		ppath dynamic
		helpkey NOISE
		prompt {Extra Poisson noise per pixel}
	    }
	    parameter posntype {
		vpath global
		association <-global.automag.posntype
		type LITERAL
		ppath dynamic
		helpkey POSNTYPE
		prompt {RA/Dec input as? (degrees:radians:string)}
	    }
	    parameter raname {
		vpath global
		association <-global.automag.raname
		type LITERAL
		ppath dynamic
		helpkey RANAME
		prompt {Name of descriptor with RA}
	    }
	    parameter decname {
		vpath global
		association <-global.automag.decname
		type LITERAL
		ppath dynamic
		helpkey DECNAME
		prompt {Name of descriptor with Dec}
	    }
	    parameter sidtname {
		vpath global
		association <-global.automag.sidtname
		type LITERAL
		ppath dynamic
		helpkey SIDTNAME
		prompt {Name of descriptor with Sid T}
	    }
	    parameter sidtloc {
		vpath global
		association <-global.automag.sidtloc
		type _INTEGER
		ppath dynamic
		helpkey SIDTLOC
		prompt {Start/end of Sidt cols in SidT decsriptor}
	    }
	    parameter expname {
		vpath global
		association <-global.automag.expname
		type LITERAL
		ppath dynamic
		helpkey EXPNAME
		prompt {Name of descriptor with exposure time}
	    }
	    parameter exploc {
		vpath global
		association <-global.automag.exploc
		type _INTEGER
		ppath dynamic
		helpkey EXPLOC
		prompt {Start/end of exp cols in Exp decsriptor}
	    }
	    parameter objname {
		vpath global
		association <-global.automag.objname
		type LITERAL
		ppath dynamic
		helpkey OBJNAME
		prompt {Name of descriptor with object name}
	    }
	    parameter objloc {
		vpath global
		association <-global.automag.objloc
		type _INTEGER
		ppath dynamic
		helpkey OBJLOC
		prompt {Start/end of object cols in object decsriptor}
	    }
	    parameter filtname {
		vpath global
		association <-global.automag.filtname
		type LITERAL
		ppath dynamic
		helpkey FILTNAME
		prompt {Name of descriptor with filter}
	    }
	    parameter filtloc {
		vpath global
		association <-global.automag.filtloc
		type _INTEGER
		ppath dynamic
		helpkey FILTLOC
		prompt {Start/end of filter cols in filter decsriptor}
	    }
	    parameter fname1 {
		vpath global
		association <-global.automag.fname1
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 1 name}
	    }
	    parameter fname2 {
		vpath global
		association <-global.automag.fname2
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 2 name}
	    }
	    parameter fname3 {
		vpath global
		association <-global.automag.fname3
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 3 name}
	    }
	    parameter fname4 {
		vpath global
		association <-global.automag.fname4
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 4 name}
	    }
	    parameter fname5 {
		vpath global
		association <-global.automag.fname5
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 5 name}
	    }
	    parameter fname6 {
		vpath global
		association <-global.automag.fname6
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 6 name}
	    }
	    parameter fname7 {
		vpath global
		association <-global.automag.fname7
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 7 name}
	    }
	    parameter fname8 {
		vpath global
		association <-global.automag.fname8
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 8 name}
	    }
	    parameter fname9 {
		vpath global
		association <-global.automag.fname9
		type LITERAL
		ppath dynamic
		helpkey FNAME
		prompt {Filter 9 name}
	    }
	    parameter fsname1 {
		vpath global
		association <-global.automag.fsname1
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 1}
	    }
	    parameter fsname2 {
		vpath global
		association <-global.automag.fsname2
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 2}
	    }
	    parameter fsname3 {
		vpath global
		association <-global.automag.fsname3
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 3}
	    }
	    parameter fsname4 {
		vpath global
		association <-global.automag.fsname4
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 4}
	    }
	    parameter fsname5 {
		vpath global
		association <-global.automag.fsname5
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 5}
	    }
	    parameter fsname6 {
		vpath global
		association <-global.automag.fsname6
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 6}
	    }
	    parameter fsname7 {
		vpath global
		association <-global.automag.fsname7
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 7}
	    }
	    parameter fsname8 {
		vpath global
		association <-global.automag.fsname8
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 8}
	    }
	    parameter fsname9 {
		vpath global
		association <-global.automag.fsname9
		type LITERAL
		ppath dynamic
		helpkey FSNAME
		prompt {Magn column header in table for filter 9}
	    }
	    parameter extinc1 {
		vpath global
		association <-global.automag.extinc1
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 1}
	    }
	    parameter extinc2 {
		vpath global
		association <-global.automag.extinc2
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 2}
	    }
	    parameter extinc3 {
		vpath global
		association <-global.automag.extinc3
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 3}
	    }
	    parameter extinc4 {
		vpath global
		association <-global.automag.extinc4
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 4}
	    }
	    parameter extinc5 {
		vpath global
		association <-global.automag.extinc5
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 5}
	    }
	    parameter extinc6 {
		vpath global
		association <-global.automag.extinc6
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 6}
	    }
	    parameter extinc7 {
		vpath global
		association <-global.automag.extinc7
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 7}
	    }
	    parameter extinc8 {
		vpath global
		association <-global.automag.extinc8
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 8}
	    }
	    parameter extinc9 {
		vpath global
		association <-global.automag.extinc9
		type _REAL
		ppath dynamic
		helpkey EXTINC
		prompt {Extinction at secz=1 for filter 9}
	    }
	    #
	}
	#
	# AVERAGE.IFL
	#
	action average {
	    helplib {$STARMAN_HELP_A AVERAGE PARAMETERS}
	    parameter in1 {
		vpath global
		association <-global.average.in1
		type NDF
		access READ
		ppath dynamic default
		default !
		position 1
		helpkey IN
		prompt {Input magnitudes table 1}
	    }
	    parameter in2 {
		vpath global
		association <-global.average.in2
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 2 (null to end)}
	    }
	    parameter in3 {
		vpath global
		association <-global.average.in3
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 3 (null to end)}
	    }
	    parameter in4 {
		vpath global
		association <-global.average.in4
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 4 (null to end)}
	    }
	    parameter in5 {
		vpath global
		association <-global.average.in5
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 5 (null to end)}
	    }
	    parameter in6 {
		vpath global
		association <-global.average.in6
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 6 (null to end)}
	    }
	    parameter in7 {
		vpath global
		association <-global.average.in7
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 7 (null to end)}
	    }
	    parameter in8 {
		vpath global
		association <-global.average.in8
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 8 (null to end)}
	    }
	    parameter in9 {
		vpath global
		association <-global.average.in9
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 9 (null to end)}
	    }
	    parameter in11 {
		vpath global
		association <-global.average.in11
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 10 (null to end)}
	    }
	    parameter in10 {
		vpath global
		association <-global.average.in10
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 11 (null to end)}
	    }
	    parameter in12 {
		vpath global
		association <-global.average.in12
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 12 (null to end)}
	    }
	    parameter in13 {
		vpath global
		association <-global.average.in13
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 13 (null to end)}
	    }
	    parameter in14 {
		vpath global
		association <-global.average.in14
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 14 (null to end)}
	    }
	    parameter in15 {
		vpath global
		association <-global.average.in15
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 15 (null to end)}
	    }
	    parameter in16 {
		vpath global
		association <-global.average.in16
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 16 (null to end)}
	    }
	    parameter in17 {
		vpath global
		association <-global.average.in17
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 17 (null to end)}
	    }
	    parameter in18 {
		vpath global
		association <-global.average.in18
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 18 (null to end)}
	    }
	    parameter in19 {
		vpath global
		association <-global.average.in19
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 19 (null to end)}
	    }
	    parameter in20 {
		vpath global
		association <-global.average.in20
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 20 (null to end)}
	    }
	    parameter in21 {
		vpath global
		association <-global.average.in21
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 21 (null to end)}
	    }
	    parameter in22 {
		vpath global
		association <-global.average.in22
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 22 (null to end)}
	    }
	    parameter in23 {
		vpath global
		association <-global.average.in23
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 23 (null to end)}
	    }
	    parameter in24 {
		vpath global
		association <-global.average.in24
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 24 (null to end)}
	    }
	    parameter in25 {
		vpath global
		association <-global.average.in25
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 25 (null to end)}
	    }
	    parameter in26 {
		vpath global
		association <-global.average.in26
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 26 (null to end)}
	    }
	    parameter in27 {
		vpath global
		association <-global.average.in27
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 27 (null to end)}
	    }
	    parameter in28 {
		vpath global
		association <-global.average.in28
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 28 (null to end)}
	    }
	    parameter in29 {
		vpath global
		association <-global.average.in29
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 29 (null to end)}
	    }
	    parameter in30 {
		vpath global
		association <-global.average.in30
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 30 (null to end)}
	    }
	    parameter in31 {
		vpath global
		association <-global.average.in31
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 31 (null to end)}
	    }
	    parameter in32 {
		vpath global
		association <-global.average.in32
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 32 (null to end)}
	    }
	    parameter in33 {
		vpath global
		association <-global.average.in33
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 33 (null to end)}
	    }
	    parameter in34 {
		vpath global
		association <-global.average.in34
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 34 (null to end)}
	    }
	    parameter in35 {
		vpath global
		association <-global.average.in35
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 35 (null to end)}
	    }
	    parameter in36 {
		vpath global
		association <-global.average.in36
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 36 (null to end)}
	    }
	    parameter in37 {
		vpath global
		association <-global.average.in37
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 37 (null to end)}
	    }
	    parameter in38 {
		vpath global
		association <-global.average.in38
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 38 (null to end)}
	    }
	    parameter in39 {
		vpath global
		association <-global.average.in39
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 39 (null to end)}
	    }
	    parameter in40 {
		vpath global
		association <-global.average.in40
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 40 (null to end)}
	    }
	    parameter in41 {
		vpath global
		association <-global.average.in41
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 41 (null to end)}
	    }
	    parameter in42 {
		vpath global
		association <-global.average.in42
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 42 (null to end)}
	    }
	    parameter in43 {
		vpath global
		association <-global.average.in43
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 43 (null to end)}
	    }
	    parameter in44 {
		vpath global
		association <-global.average.in44
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 44 (null to end)}
	    }
	    parameter in45 {
		vpath global
		association <-global.average.in45
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 45 (null to end)}
	    }
	    parameter in46 {
		vpath global
		association <-global.average.in46
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 46 (null to end)}
	    }
	    parameter in47 {
		vpath global
		association <-global.average.in47
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 47 (null to end)}
	    }
	    parameter in48 {
		vpath global
		association <-global.average.in48
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 48 (null to end)}
	    }
	    parameter in49 {
		vpath global
		association <-global.average.in49
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 49 (null to end)}
	    }
	    parameter in50 {
		vpath global
		association <-global.average.in50
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey IN
		prompt {Input magnitudes table 50 (null to end)}
	    }
	    parameter out {
		vpath global
		association <-global.average.out
		type NDF
		access WRITE
		ppath dynamic default
		default !
		position 2
		helpkey OUT
		prompt {Output table}
	    }
	    parameter inchi1 {
		vpath global
		association <-global.average.inchi1
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 1}
	    }
	    parameter inchi2 {
		vpath global
		association <-global.average.inchi2
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 2}
	    }
	    parameter inchi3 {
		vpath global
		association <-global.average.inchi3
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 3}
	    }
	    parameter inchi4 {
		vpath global
		association <-global.average.inchi4
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 4}
	    }
	    parameter inchi5 {
		vpath global
		association <-global.average.inchi5
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 5}
	    }
	    parameter inchi6 {
		vpath global
		association <-global.average.inchi6
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 6}
	    }
	    parameter inchi7 {
		vpath global
		association <-global.average.inchi7
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 7}
	    }
	    parameter inchi8 {
		vpath global
		association <-global.average.inchi8
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 8}
	    }
	    parameter inchi9 {
		vpath global
		association <-global.average.inchi9
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 9}
	    }
	    parameter inchi10 {
		vpath global
		association <-global.average.inchi10
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 10}
	    }
	    parameter inchi11 {
		vpath global
		association <-global.average.inchi11
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 11}
	    }
	    parameter inchi12 {
		vpath global
		association <-global.average.inchi12
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 12}
	    }
	    parameter inchi13 {
		vpath global
		association <-global.average.inchi13
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 13}
	    }
	    parameter inchi14 {
		vpath global
		association <-global.average.inchi14
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 14}
	    }
	    parameter inchi15 {
		vpath global
		association <-global.average.inchi15
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 15}
	    }
	    parameter inchi16 {
		vpath global
		association <-global.average.inchi16
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 16}
	    }
	    parameter inchi17 {
		vpath global
		association <-global.average.inchi17
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 17}
	    }
	    parameter inchi18 {
		vpath global
		association <-global.average.inchi18
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 18}
	    }
	    parameter inchi19 {
		vpath global
		association <-global.average.inchi19
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 19}
	    }
	    parameter inchi20 {
		vpath global
		association <-global.average.inchi20
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 20}
	    }
	    parameter inchi21 {
		vpath global
		association <-global.average.inchi21
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 21}
	    }
	    parameter inchi22 {
		vpath global
		association <-global.average.inchi22
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 22}
	    }
	    parameter inchi23 {
		vpath global
		association <-global.average.inchi23
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 23}
	    }
	    parameter inchi24 {
		vpath global
		association <-global.average.inchi24
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 24}
	    }
	    parameter inchi25 {
		vpath global
		association <-global.average.inchi25
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 25}
	    }
	    parameter inchi26 {
		vpath global
		association <-global.average.inchi26
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 26}
	    }
	    parameter inchi27 {
		vpath global
		association <-global.average.inchi27
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 27}
	    }
	    parameter inchi28 {
		vpath global
		association <-global.average.inchi28
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 28}
	    }
	    parameter inchi29 {
		vpath global
		association <-global.average.inchi29
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 29}
	    }
	    parameter inchi30 {
		vpath global
		association <-global.average.inchi30
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 30}
	    }
	    parameter inchi31 {
		vpath global
		association <-global.average.inchi31
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 31}
	    }
	    parameter inchi32 {
		vpath global
		association <-global.average.inchi32
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 32}
	    }
	    parameter inchi33 {
		vpath global
		association <-global.average.inchi33
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 33}
	    }
	    parameter inchi34 {
		vpath global
		association <-global.average.inchi34
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 34}
	    }
	    parameter inchi35 {
		vpath global
		association <-global.average.inchi35
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 35}
	    }
	    parameter inchi36 {
		vpath global
		association <-global.average.inchi36
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 36}
	    }
	    parameter inchi37 {
		vpath global
		association <-global.average.inchi37
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 37}
	    }
	    parameter inchi38 {
		vpath global
		association <-global.average.inchi38
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 38}
	    }
	    parameter inchi39 {
		vpath global
		association <-global.average.inchi39
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 39}
	    }
	    parameter inchi40 {
		vpath global
		association <-global.average.inchi40
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 40}
	    }
	    parameter inchi41 {
		vpath global
		association <-global.average.inchi41
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 41}
	    }
	    parameter inchi42 {
		vpath global
		association <-global.average.inchi42
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 42}
	    }
	    parameter inchi43 {
		vpath global
		association <-global.average.inchi43
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 43}
	    }
	    parameter inchi44 {
		vpath global
		association <-global.average.inchi44
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 44}
	    }
	    parameter inchi45 {
		vpath global
		association <-global.average.inchi45
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 45}
	    }
	    parameter inchi46 {
		vpath global
		association <-global.average.inchi46
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 46}
	    }
	    parameter inchi47 {
		vpath global
		association <-global.average.inchi47
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 47}
	    }
	    parameter inchi48 {
		vpath global
		association <-global.average.inchi48
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 48}
	    }
	    parameter inchi49 {
		vpath global
		association <-global.average.inchi49
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 49}
	    }
	    parameter inchi50 {
		vpath global
		association <-global.average.inchi50
		type NDF
		access READ
		ppath dynamic default
		default !
		helpkey INCHI
		prompt {Input Chi values table for magn table 50}
	    }
	    parameter use {
		vpath global
		association <-global.average.use
		type LITERAL
		ppath dynamic
		position 3
		prompt {Automatic or interactive use (auto:inter)?}
		helpkey USE
	    }
	    parameter offcen {
		vpath global
		association <-global.average.offcen
		type _REAL
		ppath dynamic
		helpkey OFFCEN
		prompt {Number of radii away from input posns allowed?}
	    }
	    parameter cenacc {
		vpath global
		association <-global.average.cenacc
		type _LOGICAL
		ppath dynamic
		helpkey CENACC
		prompt {Accept a star even if too far off centre? (yes:no)}
	    }
	    parameter usechi {
		vpath global
		association <-global.average.usechi
		type _LOGICAL
		ppath dynamic
		helpkey USECHI
		prompt {Use the CHI table(s)? (yes:no)}
	    }
	    parameter usesigma {
		vpath global
		association <-global.average.usesigma
		type _LOGICAL
		ppath dynamic
		helpkey USESIGMA
		prompt {Use the MEASURE errors for - weights/rejects? (yes:no)}
	    }
	    parameter sigmalim {
		vpath global
		association <-global.average.sigmalim
		type _REAL
		ppath dynamic
		helpkey SIGMALIM
		prompt {MEASURE errors acceptable limit}
	    }
	    parameter sigmamin {
		vpath global
		association <-global.average.sigmamin
		type _REAL
		ppath dynamic
		helpkey SIGMAMIN
		prompt {MEASURE errors minimum true value}
	    }
	    parameter names {
		vpath global
		association <-global.average.names
		type _LOGICAL
		ppath dynamic
		helpkey NAMES
		prompt {Need to match input tables star names? (yes:no)}
	    }
	    parameter fprint {
		vpath global
		association <-global.average.fprint
		type LITERAL
		ppath dynamic
		helpkey FRPRINT
		prompt {Name of output summary file (ASCII text)? (null=none)}
	    }
	    parameter chiprin {
		vpath global
		association <-global.average.chiprin
		type _REAL
		ppath dynamic
		helpkey CHIPRIN
		prompt {Factor to multiply Chi values by for summary file}
	    }
	    parameter numinv {
		vpath global
		association <-global.average.numinv
		type _INTEGER
		ppath dynamic
		helpkey NUMINV
		prompt {Number of invalid pixels per star permitted}
	    }
	    parameter numits {
		vpath global
		association <-global.average.numits
		type _INTEGER
		ppath dynamic
		helpkey NUMITS
		prompt {Number of fit iterations permitted}
	    }
	    parameter newmean {
		vpath global
		association <-global.average.newmean
		type _REAL
		ppath dynamic
		helpkey NEWMEAN
		prompt {Refined mean offset level}
	    }
	    parameter scatter {
		vpath global
		association <-global.average.scatter
		type LITERAL
		ppath dynamic
		helpkey SCATTER
		prompt {Rejection method for mag scatter? (mag:error:default:ok)}
	    }
	    parameter ascatter {
		vpath global
		association <-global.average.ascatter
		type LITERAL
		ppath dynamic
		helpkey SCATTER
		prompt {Rejection method for mag scatter? (mag:error:default)}
	    }
	    parameter filenum {
		vpath global
		association <-global.average.filenum
		type _INTEGER
		ppath dynamic
		helpkey FILENUM
		prompt {Number of input magn table number to examine}
	    }
	    parameter title {
		vpath global
		association <-global.average.title
		type LITERAL
		ppath dynamic
		helpkey TITLE
		prompt {Title to add to output table}
	    }
	    parameter gtype {
		vpath global
		association <-global.average.gtype
		type LITERAL
		ppath dynamic
		helpkey GTYPE
		prompt {GKS name of plot device ?}
	    }
	    parameter linecol {
		vpath global
		association <-global.linecol
		type LITERAL
		ppath dynamic
		helpkey LINECOL
		prompt {Colour of plot lines? (black:white)}
	    }
	    parameter plhistx {
		vpath global
		association <-global.average.plhistx
		type _REAL
		ppath dynamic
		helpkey PLHISTX
		prompt {X plot range of histogram}
	    }
	    parameter plhisty {
		vpath global
		association <-global.average.plhisty
		type _REAL
		ppath dynamic
		helpkey PLHISTY
		prompt {Y plot range of histogram}
	    }
	    parameter plotxlim {
		vpath global
		association <-global.average.plotxlim
		type _REAL
		ppath dynamic
		helpkey PLOTXLIM
		prompt {X plot range of differences}
	    }
	    parameter plotylim {
		vpath global
		association <-global.average.plotylim
		type _REAL
		ppath dynamic
		helpkey PLOTYLIM
		prompt {Y plot range of differences}
	    }
	    parameter again {
		vpath global
		association <-global.average.again
		type _LOGICAL
		ppath dynamic
		helpkey AGAIN
		prompt {Re-input cursor position? (yes:no)}
	    }
	    parameter errfac {
		vpath global
		association <-global.average.errfac
		type _REAL
		ppath dynamic
		helpkey ERRFAC
		prompt {Multiply factor for MEASURE errors}
	    }
	    parameter errmul {
		vpath global
		association <-global.average.errmul
		type _REAL
		ppath dynamic
		helpkey ERRMUL
		prompt {Number of scaled MEASURE errors std. devs. for reject}
	    }
	    parameter errlim {
		vpath global
		association <-global.average.errlim
		type _REAL
		ppath dynamic
		helpkey ERRLIM
		prompt {Max allowed value of scaled MEASURE errors}
	    }
	    parameter difmul {
		vpath global
		association <-global.average.difmul
		type _REAL
		ppath dynamic
		helpkey DIFMUL
		prompt {Std devs of magn scatter away a magn can be}
	    }
	}
	#
	#  CHI.IFL
	#
	action chi {
	    helplib {$STARMAN_HELP_A CHI PARAMETERS}
	    parameter in {
		vpath global
		association <-global.chi.in
		type NDF
		access READ
		ppath dynamic default
		default !
		position 1
		prompt {Input table of measures}
		helpkey IN
	    }
	    parameter out {
		vpath global
		association <-global.chi.out
		type NDF
		access WRITE
		ppath dynamic default
		default !
		position 2
		prompt {Output table of chi limits}
		helpkey OUT
	    }
	    parameter use {
		vpath global
		association <-global.chi.use
		type LITERAL
		ppath dynamic
		position 3
		prompt {Automatic or interactive use (auto:inter)?}
		helpkey USE
	    }
	    parameter offcen {
		vpath global
		association <-global.chi.offcen
		type _REAL
		ppath dynamic
		position 4
		prompt {Number of radii away from input posns allowed?}
		helpkey OFFCEN
	    }
	    parameter numits {
		vpath global
		association <-global.chi.numits
		type _INTEGER
		ppath dynamic
		position 5
		prompt {Number of fit iterations allowed?}
		helpkey NUMITS
	    }
	    parameter numinv {
		vpath global
		association <-global.chi.numinv
		type _INTEGER
		ppath dynamic
		position 6
		prompt {Number of invalid pixels in a fit allowed?}
		helpkey NUMINV
	    }
	    parameter chilim {
		vpath global
		association <-global.chi.chilim
		type _REAL
		ppath dynamic
		position 7
		prompt {No of std devs of Chi above mean allowed?}
		helpkey CHILIM
	    }
	    parameter title {
		vpath global
		association <-global.chi.title
		type LITERAL
		ppath dynamic
		position 8
		prompt {Title to add to output table?}
		helpkey TITLE
	    }
	    parameter graph {
		vpath global
		association <-global.chi.graph
		type LITERAL
		ppath dynamic
		prompt {Put out graph of automatic fits (yes:no)?}
		helpkey GRAPH
	    }
	    parameter gtype {
		vpath global
		association <-global.chi.gtype
		type LITERAL
		ppath dynamic
		helpkey GTYPE
		prompt {GKS name of plot device ?}
	    }
	    parameter linecol {
		vpath global
		association <-global.linecol
		type LITERAL
		ppath dynamic
		helpkey LINECOL
		prompt {Colour of plot lines? (black:white)}
	    }
	    parameter devlimy {
		vpath global
		association <-global.chi.devlimy
		type _INTEGER
		ppath dynamic
		prompt {Chi values range to use?}
		helpkey DEVLIMY
	    }
	    parameter devlimx {
		vpath global
		association <-global.chi.devlimx
		type _INTEGER
		ppath dynamic
		prompt {Magnitude range to use?}
		helpkey DEVLIMX
	    }
	    parameter again {
		vpath global
		association <-global.chi.again
		type LITERAL
		ppath dynamic
		prompt {Make another estimate? (yes:no)}
		helpkey AGAIN
	    }
	}
	#
	# DIAGRAM.IFL
	#
	action diagram {
	    helplib {$STARMAN_HELP_A DIAGRAM PARAMETERS}
	    parameter in1 {
		vpath global
		association <-global.diagram.in1
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 1 (Set 1 File 1)}
		position 1
	    }
	    parameter in2 {
		vpath global
		association <-global.diagram.in2
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 2 (Set 1 File 2)}
		position 2
	    }
	    parameter in3 {
		vpath global
		association <-global.diagram.in3
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 3 (Set 1 File 3)}
		default !
		position 3
	    }
	    parameter in4 {
		vpath global
		association <-global.diagram.in4
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 4 (Set 1 File 4)}
		position 4
	    }
	    parameter in5 {
		vpath global
		association <-global.diagram.in5
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 5 (Set 2 File 1)}
		position 5
	    }
	    parameter in6 {
		vpath global
		association <-global.diagram.in6
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 6 (Set 2 File 2)}
		position 6
	    }
	    parameter in7 {
		vpath global
		association <-global.diagram.in7
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 7 (Set 2 File 3)}
		position 7
	    }
	    parameter in8 {
		vpath global
		association <-global.diagram.in8
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 8 (Set 2 File 4)}
		position 8
	    }
	    parameter in9 {
		vpath global
		association <-global.diagram.in9
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 9 (Set 3 File 1)}
		position 9
	    }
	    parameter in10 {
		vpath global
		association <-global.diagram.in10
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 10 (Set 3 File 2)}
		position 10
	    }
	    parameter in11 {
		vpath global
		association <-global.diagram.in11
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 11 (Set 3 File 3)}
		default !
	    }
	    parameter in12 {
		vpath global
		association <-global.diagram.in12
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 12 (Set 3 File 4)}
		default !
	    }
	    parameter in13 {
		vpath global
		association <-global.diagram.in13
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 13 (Set 4 File 1)}
		default !
	    }
	    parameter in14 {
		vpath global
		association <-global.diagram.in14
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 14 (Set 4 File 2)}
		default !
	    }
	    parameter in15 {
		vpath global
		association <-global.diagram.in15
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 15 (Set 4 File 3)}
		default !
	    }
	    parameter in16 {
		vpath global
		association <-global.diagram.in16
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 16 (Set 4 File 4)}
		default !
	    }
	    parameter in17 {
		vpath global
		association <-global.diagram.in17
		type NDF
		access READ
		helpkey IN
		prompt {Input table 17 (Set 5 File 1)}
		ppath dynamic default
		default !
	    }
	    parameter in18 {
		vpath global
		association <-global.diagram.in18
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 18 (Set 5 File 2)}
		default !
	    }
	    parameter in19 {
		vpath global
		association <-global.diagram.in19
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 19 (Set 5 File 3)}
		default !
	    }
	    parameter in20 {
		vpath global
		association <-global.diagram.in20
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 20 (Set 5 File 4)}
		default !
	    }
	    parameter in21 {
		vpath global
		association <-global.diagram.in21
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 21 (Set 6 File 1)}
		default !
	    }
	    parameter in22 {
		vpath global
		association <-global.diagram.in22
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 22 (Set 6 File 2)}
		default !
	    }
	    parameter in23 {
		vpath global
		association <-global.diagram.in23
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 23 (Set 6 File 3)}
		default !
	    }
	    parameter in24 {
		vpath global
		association <-global.diagram.in24
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 24 (Set 6 File 4)}
		default !
	    }
	    parameter in25 {
		vpath global
		association <-global.diagram.in25
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 25 (Set 7 File 1)}
		default !
	    }
	    parameter in26 {
		vpath global
		association <-global.diagram.in26
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 26 (Set 7 File 2)}
		default !
	    }
	    parameter in27 {
		vpath global
		association <-global.diagram.in27
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 27 (Set 7 File 3)}
		default !
	    }
	    parameter in28 {
		vpath global
		association <-global.diagram.in28
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 28 (Set 7 File 4)}
		default !
	    }
	    parameter in29 {
		vpath global
		association <-global.diagram.in29
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 29 (Set 8 File 1)}
		default !
	    }
	    parameter in30 {
		vpath global
		association <-global.diagram.in30
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 30 (Set 8 File 2)}
		default !
	    }
	    parameter in31 {
		vpath global
		association <-global.diagram.in31
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 31 (Set 8 File 3)}
		default !
	    }
	    parameter in32 {
		vpath global
		association <-global.diagram.in32
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input table 32 (Set 8 File 4)}
	    }
	    parameter in33 {
		vpath global
		association <-global.diagram.in33
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 33 (Set 9 File 1)}
		default !
	    }
	    parameter in34 {
		vpath global
		association <-global.diagram.in34
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 34 (Set 9 File 2)}
		default !
	    }
	    parameter in35 {
		vpath global
		association <-global.diagram.in35
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 35 (Set 9 File 3)}
		default !
	    }
	    parameter in36 {
		vpath global
		association <-global.diagram.in36
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 36 (Set 9 File 4)}
		default !
	    }
	    parameter in37 {
		vpath global
		association <-global.diagram.in37
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 37 (Set 10 File 1)}
		default !
	    }
	    parameter in38 {
		vpath global
		association <-global.diagram.in38
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 38 (Set 10 File 2)}
		default !
	    }
	    parameter in39 {
		vpath global
		association <-global.diagram.in39
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 39 (Set 10 File 3)}
		default !
	    }
	    parameter in40 {
		vpath global
		association <-global.diagram.in40
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 40 (Set 10 File 4)}
		default !
	    }
	    parameter in41 {
		vpath global
		association <-global.diagram.in41
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 41 (Set 11 File 1)}
		default !
	    }
	    parameter in42 {
		vpath global
		association <-global.diagram.in42
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 42 (Set 11 File 2)}
		default !
	    }
	    parameter in43 {
		vpath global
		association <-global.diagram.in43
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 43 (Set 11 File 3)}
		default !
	    }
	    parameter in44 {
		vpath global
		association <-global.diagram.in44
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 44 (Set 11 File 4)}
		default !
	    }
	    parameter in45 {
		vpath global
		association <-global.diagram.in45
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 45 (Set 12 File 1)}
		default !
	    }
	    parameter in46 {
		vpath global
		association <-global.diagram.in46
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 46 (Set 12 File 2)}
		default !
	    }
	    parameter in47 {
		vpath global
		association <-global.diagram.in47
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 47 (Set 12 File 3)}
		default !
	    }
	    parameter in48 {
		vpath global
		association <-global.diagram.in48
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		prompt {Input table 48 (Set 12 File 4)}
		default !
	    }
	    #
	    parameter out {
		vpath global
		association <-global.diagram.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		prompt {Output table}
		default !
	    }
	    #
	    parameter title {
		vpath global
		association <-global.diagram.title
		type LITERAL
		ppath dynamic
		helpkey TITLE
		prompt {Title to add to output table}
	    }
	    parameter easycmd {
		vpath global
		association <-global.diagram.easycmd
		type _LOGICAL
		ppath dynamic
		helpkey EASYCMD
		prompt {Do default CMD start? (yes:no)}
	    }
	    parameter exit {
		vpath global
		association <-global.diagram.exit
		type _LOGICAL
		ppath dynamic
		helpkey EXIT
		prompt {End program rather than change graph? (yes:no)}
	    }
	    parameter type {
		vpath global
		association <-global.diagram.type
		type LITERAL
		ppath dynamic
		helpkey TYPE
		prompt {Type of diagram? (cmd:twocol) }
	    }
	    parameter option {
		vpath global
		association <-global.diagram.option
		type LITERAL
		ppath dynamic
		helpkey OPTION
		prompt {Option to perform?}
	    }
	    parameter colcod1 {
		vpath global
		association <-global.diagram.colcod1
		type LITERAL
		ppath dynamic
		helpkey COLCODE
		prompt {Letter code for colour 1?}
	    }
	    parameter colcod2 {
		vpath global
		association <-global.diagram.colcod2
		type LITERAL
		ppath dynamic
		helpkey COLCODE
		prompt {Letter code for colour 2?}
	    }
	    parameter colcod3 {
		vpath global
		association <-global.diagram.colcod3
		type LITERAL
		ppath dynamic
		helpkey COLCODE
		prompt {Letter code for colour 3?}
	    }
	    parameter colcod4 {
		vpath global
		association <-global.diagram.colcod4
		type LITERAL
		ppath dynamic
		helpkey COLCODE
		prompt {Letter code for colour 4?}
	    }
	    parameter zerop {
		vpath global
		association <-global.diagram.zerop
		type _REAL
		ppath dynamic
		helpkey ZEROP
		prompt {Zero point to apply?}
	    }
	    parameter colcor {
		vpath global
		association <-global.diagram.colcor
		type _REAL
		ppath dynamic
		helpkey COLCOR
		prompt {Colour equation factor?}
	    }
	    parameter hilim {
		vpath global
		association <-global.diagram.hilim
		type _REAL
		ppath dynamic
		helpkey HILIM
		prompt {Maximum magnitude to use?}
	    }
	    parameter lolim {
		vpath global
		association <-global.diagram.lolim
		type _REAL
		ppath dynamic
		helpkey LOLIM
		prompt {Minimum magnitude to use?}
	    }
	    parameter numgood {
		vpath global
		association <-global.diagram.numgood
		type _INTEGER
		ppath dynamic
		helpkey NUMGOOD
		prompt {Number of good measures necessary?}
	    }
	    parameter all_sets {
		vpath global
		association <-global.diagram.all_sets
		type _LOGICAL
		ppath dynamic
		helpkey ALL_SETS
		prompt {Apply this set to all sets? (yes:no)}
	    }
	    parameter column1 {
		vpath global
		association <-global.diagram.column1
		type _INTEGER
		ppath dynamic
		helpkey COLUMN
		prompt {Column in table 1 where magnitudes are?}
	    }
	    parameter column2 {
		vpath global
		association <-global.diagram.column2
		type _INTEGER
		ppath dynamic
		helpkey COLUMN
		prompt {Column in table 2 where magnitudes are?}
	    }
	    parameter column3 {
		vpath global
		association <-global.diagram.column3
		type _INTEGER
		ppath dynamic
		helpkey COLUMN
		prompt {Column in table 3 where magnitudes are?}
	    }
	    parameter column4 {
		vpath global
		association <-global.diagram.column4
		type _INTEGER
		ppath dynamic
		helpkey COLUMN
		prompt {Column in table 4 where magnitudes are?}
	    }
	    parameter ncol1 {
		vpath global
		association <-global.diagram.ncol1
		type _INTEGER
		ppath dynamic
		helpkey NCOLUMN
		prompt {Column in table 1 where number of measures are?}
	    }
	    parameter ncol2 {
		vpath global
		association <-global.diagram.ncol2
		type _INTEGER
		ppath dynamic
		helpkey NCOLUMN
		prompt {Column in table 2 where number of measures are?}
	    }
	    parameter ncol3 {
		vpath global
		association <-global.diagram.ncol3
		type _INTEGER
		ppath dynamic
		helpkey NCOLUMN
		prompt {Column in table 3 where number of measures are?}
	    }
	    parameter ncol4 {
		vpath global
		association <-global.diagram.ncol4
		type _INTEGER
		ppath dynamic
		helpkey NCOLUMN
		prompt {Column in table 4 where number of measures are?}
	    }
	    parameter set {
		vpath global
		association <-global.diagram.set
		type _INTEGER
		ppath dynamic
		helpkey SET
		prompt {Set number to apply factors to}
	    }
	    #
	    parameter gtype {
		vpath global
		association <-global.diagram.gtype
		type LITERAL
		ppath dynamic
		helpkey GTYPE
		prompt {GKS Name of plot device}
	    }
	    parameter numbutt {
		type _INTEGER
		vpath global current
		association <-global.numbutt
		ppath dynamic default
		default 3
		prompt {Number of buttons on mouse?}
		helpkey NUMBUTT
	    }
	    parameter linecol {
		vpath global
		association <-global.linecol
		type LITERAL
		ppath dynamic
		helpkey LINECOL
		prompt {Colour of plot lines? (black:white)}
	    }
	    parameter devlimy {
		vpath global
		association <-global.diagram.devlimy
		type _REAL
		ppath dynamic
		helpkey DEVLIMY
		prompt {Plot limits in Y direction?}
	    }
	    parameter devlimx {
		vpath global
		association <-global.diagram.devlimx
		type _REAL
		ppath dynamic
		helpkey DEVLIMX
		prompt {Plot limits in X direction?}
	    }
	    parameter xrange {
		vpath global
		association <-global.diagram.xrange
		type _REAL
		ppath dynamic
		prompt {Range in X for which to plot stars?}
		helpkey XRANGE
	    }
	    parameter yrange {
		vpath global
		association <-global.diagram.yrange
		type _REAL
		ppath dynamic
		prompt {Range in Y for which to plot stars?}
		helpkey YRANGE
	    }
	    parameter storexy {
		vpath global
		association <-global.diagram.storexy
		type _LOGICAL
		ppath dynamic
		helpkey STOREXY
		prompt {Include positions in output table? (yes:no)}
	    }
	    parameter symbol {
		vpath global
		association <-global.diagram.symbol
		type _INTEGER
		ppath dynamic
		helpkey SYMBOL
		prompt {PGPLOT code number for type of symbol to plot?}
	    }
	    #
	    parameter tyline {
		vpath global
		association <-global.diagram.tyline
		type LITERAL
		ppath dynamic
		helpkey TYLINE
		prompt {Method of inputing line?}
	    }
	    parameter intab {
		vpath global
		association <-global.diagram.intab
		type NDF
		access READ
		helpkey INTAB
		ppath dynamic default
		default !
		prompt {Input file defining line}
	    }
	    parameter pcolumn {
		vpath global
		association <-global.diagram.pcolumn
		type _INTEGER
		ppath dynamic
		helpkey PCOLUMN
		prompt {Columns in INTAB table defining X and Y values?}
	    }
	    parameter offsets {
		vpath global
		association <-global.diagram.offsets
		type _REAL
		ppath dynamic
		helpkey OFFSETS
		prompt {Offsets in X and Y to apply to INTAB table values?}
	    }
	    parameter xykey {
		vpath global
		association <-global.diagram.xykey
		type _REAL
		ppath dynamic
		helpkey XYKEY
		prompt {X,Y value to plot? (left of plot to end)}
	    }
	}
	#
	#  DUSTRING.IFL  -- Interface file for DUSTRING.FOR
	#
	action dustring {
	    helplib {$STARMAN_HELP_A DUSTRING PARAMETERS}
	    parameter in {
		vpath global
		association <-global.dustring.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.dustring.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image}
	    }
	    parameter outtab {
		vpath global
		association <-global.dustring.outtab
		type NDF
		access WRITE
		helpkey OUTTAB
		ppath dynamic default
		default !
		position 3
		prompt {Output table of applied rings info}
	    }
	    parameter intab {
		vpath global
		association <-global.dustring.intab
		type NDF
		access READ
		helpkey INTAB
		ppath dynamic default
		default !
		position 4
		prompt {Input table of rings info}
	    }
	    parameter title {
		vpath global
		association <-global.dustring.title
		type LITERAL
		ppath dynamic
		position 5
		helpkey TITLE
		prompt {Title to add to output file}
	    }
	    parameter option {
		vpath global
		association <-global.dustring.option
		type LITERAL
		ppath dynamic
		position 6
		helpkey OPTION
		prompt {Which action to choose?}
	    }
	    parameter posn {
		vpath global
		association <-global.dustring.posn
		type _REAL
		ppath dynamic
		position 7
		helpkey POSN
		prompt {X,Y position to apply ring at}
	    }
	    parameter back {
		vpath global
		association <-global.dustring.back
		type _REAL
		ppath dynamic
		position 8
		helpkey BACK
		prompt {Background level for ring to affect}
	    }
	    parameter percent {
		vpath global
		association <-global.dustring.percent
		type _REAL
		ppath dynamic
		position 9
		helpkey PERCENT
		prompt {Depth of ring - percentage of background}
	    }
	    parameter do_add {
		vpath global
		association <-global.dustring.do_add
		type LITERAL
		ppath dynamic
		helpkey DO_ADD
		prompt {Add or subtract ring? (add:sub)}
	    }
	    parameter use {
		vpath global
		association <-global.dustring.use
		type _LOGICAL
		ppath dynamic
		helpkey USE
		prompt {Use this ring in table? (yes:no)}
	    }
	    parameter number {
		vpath global
		association <-global.dustring.number
		type _INTEGER
		ppath dynamic
		helpkey NUMBER
		prompt {Number of ring in table to select}
	    }
	    parameter rin {
		vpath global
		association <-global.dustring.rin
		type _REAL
		ppath dynamic
		helpkey RIN
		prompt {Inner radius (deep part) of ring}
	    }
	    parameter rout {
		vpath global
		association <-global.dustring.rout
		type _REAL
		ppath dynamic
		helpkey ROUT
		prompt {Outer radius (deep part) of ring}
	    }
	    parameter slopein {
		vpath global
		association <-global.dustring.slopein
		type _REAL
		ppath dynamic
		helpkey SLOPEIN
		prompt {Width of inner penumbra of wing}
	    }
	    parameter slopeout {
		vpath global
		association <-global.dustring.slopeout
		type _REAL
		ppath dynamic
		helpkey SLOPEOUT
		prompt {Width of outer penumbra of wing}
	    }
	    parameter side {
		vpath global
		association <-global.dustring.side
		type _INTEGER
		ppath dynamic
		helpkey SIDE
		prompt {X,Y size of box for background}
	    }
	    parameter vrange {
		vpath global
		association <-global.dustring.vrange
		type _REAL
		ppath dynamic
		helpkey VRANGE
		prompt {Low/High of display range?}
	    }
	    parameter wrap {
		vpath global
		association <-global.dustring.wrap
		type _LOGICAL
		ppath dynamic
		helpkey WRAP
		prompt {Wrap in the values outside range? (yes:no)}
	    }
	    parameter imposn {
		vpath global
		association <-global.dustring.imposn
		type _REAL
		ppath dynamic
		helpkey IMPOSN
		prompt {XY Position in window of image BLH corner}
	    }
	    parameter screen {
		vpath global
		association <-global.dustring.screen
		type _INTEGER
		ppath dynamic
		helpkey SCREEN
		prompt {XY size of window to open}
	    }
	    parameter numbutt {
		type _INTEGER
		vpath global current
		association <-global.numbutt
		ppath dynamic default
		default 3
		prompt {Number of buttons on mouse?}
		helpkey NUMBUTT
	    }
	    parameter imcomp {
		vpath global
		association <-global.dustring.imcomp
		type _INTEGER
		vpath dynamic
		helpkey IMCOMP
		prompt {Factor to compress image in X,Y by?}
	    }
	}
	########################################################
	# IMCALC.IFL
	#
	action imcalc {
	    #
	    helplib {$STARMAN_HELP_A IMCALC PARAMETERS}
	    #
	    parameter eqn {
		vpath global
		association <-global.imcalc.eqn
		type LITERAL
		ppath dynamic
		helpkey EQN
		position 1
		prompt {Equation (Fortran style - names or IA,IB,etc)}
	    }
	    parameter out {
		vpath global
		association <-global.imcalc.out
		type NDF
		access WRITE
		helpkey INIM
		ppath dynamic default
		default !
		position 2
		prompt {Output image}
	    }
	    parameter title {
		vpath global
		association <-global.imcalc.title
		type LITERAL
		ppath dynamic
		helpkey TITLE
		position 3
		prompt {Title to add to output image}
	    }
	    parameter ina {
		vpath global
		association <-global.imcalc.ina
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IA}
	    }
	    parameter inb {
		vpath global
		association <-global.imcalc.inb
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IB}
	    }
	    parameter inc {
		vpath global
		association <-global.imcalc.inc
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IC}
	    }
	    parameter ind {
		vpath global
		association <-global.imcalc.ind
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image ID}
	    }
	    parameter ine {
		vpath global
		association <-global.imcalc.ine
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IE}
	    }
	    parameter inf {
		vpath global
		association <-global.imcalc.inf
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IF}
	    }
	    parameter ing {
		vpath global
		association <-global.imcalc.ing
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IG}
	    }
	    parameter inh {
		vpath global
		association <-global.imcalc.inh
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IH}
	    }
	    parameter ini {
		vpath global
		association <-global.imcalc.ini
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image II}
	    }
	    parameter inj {
		vpath global
		association <-global.imcalc.inj
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IJ}
	    }
	    parameter ink {
		vpath global
		association <-global.imcalc.ink
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IK}
	    }
	    parameter inl {
		vpath global
		association <-global.imcalc.inl
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IL}
	    }
	    parameter inm {
		vpath global
		association <-global.imcalc.inm
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IM}
	    }
	    parameter inn {
		vpath global
		association <-global.imcalc.inn
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IN}
	    }
	    parameter ino {
		vpath global
		association <-global.imcalc.ino
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IO}
	    }
	    parameter inp {
		vpath global
		association <-global.imcalc.inp
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IP}
	    }
	    parameter inq {
		vpath global
		association <-global.imcalc.inq
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IQ}
	    }
	    parameter inr {
		vpath global
		association <-global.imcalc.inr
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IR}
	    }
	    parameter ins {
		vpath global
		association <-global.imcalc.ins
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IS}
	    }
	    parameter int {
		vpath global
		association <-global.imcalc.int
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IT}
	    }
	    parameter inu {
		vpath global
		association <-global.imcalc.inu
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IU}
	    }
	    parameter inv {
		vpath global
		association <-global.imcalc.inv
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IV}
	    }
	    parameter inw {
		vpath global
		association <-global.imcalc.inw
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IW}
	    }
	    parameter inx {
		vpath global
		association <-global.imcalc.inx
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IX}
	    }
	    parameter iny {
		vpath global
		association <-global.imcalc.iny
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IY}
	    }
	    parameter inz {
		vpath global
		association <-global.imcalc.inz
		type NDF
		access READ
		helpkey INIM
		ppath dynamic default
		default !
		prompt {Input image IZ}
	    }
	    parameter a {
		vpath global
		association <-global.imcalc.a
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IA}
	    }
	    parameter b {
		vpath global
		association <-global.imcalc.b
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IB}
	    }
	    parameter c {
		vpath global
		association <-global.imcalc.c
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IC}
	    }
	    parameter d {
		vpath global
		association <-global.imcalc.d
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter ID}
	    }
	    parameter e {
		vpath global
		association <-global.imcalc.e
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IE}
	    }
	    parameter f {
		vpath global
		association <-global.imcalc.f
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IF}
	    }
	    parameter g {
		vpath global
		association <-global.imcalc.g
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IG}
	    }
	    parameter h {
		vpath global
		association <-global.imcalc.h
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IH}
	    }
	    parameter i {
		vpath global
		association <-global.imcalc.i
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter II}
	    }
	    parameter j {
		vpath global
		association <-global.imcalc.j
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IJ}
	    }
	    parameter k {
		vpath global
		association <-global.imcalc.k
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IK}
	    }
	    parameter l {
		vpath global
		association <-global.imcalc.l
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IL}
	    }
	    parameter m {
		vpath global
		association <-global.imcalc.m
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IM}
	    }
	    parameter n {
		vpath global
		association <-global.imcalc.n
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IN}
	    }
	    parameter o {
		vpath global
		association <-global.imcalc.o
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IO}
	    }
	    parameter p {
		vpath global
		association <-global.imcalc.p
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IP}
	    }
	    parameter q {
		vpath global
		association <-global.imcalc.q
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IQ}
	    }
	    parameter r {
		vpath global
		association <-global.imcalc.r
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IR}
	    }
	    parameter s {
		vpath global
		association <-global.imcalc.s
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IS}
	    }
	    parameter t {
		vpath global
		association <-global.imcalc.t
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IT}
	    }
	    parameter u {
		vpath global
		association <-global.imcalc.u
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IU}
	    }
	    parameter v {
		vpath global
		association <-global.imcalc.v
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IV}
	    }
	    parameter w {
		vpath global
		association <-global.imcalc.w
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IW}
	    }
	    parameter x {
		vpath global
		association <-global.imcalc.x
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IX}
	    }
	    parameter y {
		vpath global
		association <-global.imcalc.y
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IY}
	    }
	    parameter z {
		vpath global
		association <-global.imcalc.z
		type _REAL
		ppath dynamic
		helpkey INVAR
		prompt {Input parameter IZ}
	    }
	    parameter seed {
		vpath global
		association <-global.imcalc.seed
		type _INTEGER
		ppath dynamic
		helpkey SEED
		prompt {Random number generator seed number}
	    }
	    parameter nxy {
		vpath global
		association <-global.imcalc.nxy
		type _INTEGER
		ppath dynamic
		helpkey NXY
		prompt {X, Y size of output image}
	    }
	    parameter bscale {
		vpath global
		association <-global.imcalc.bscale
		type _REAL
		ppath dynamic
		helpkey BSCALE
		prompt {Scale to apply to output pixel values}
	    }
	    parameter bzero {
		vpath global
		association <-global.imcalc.bzero
		type _REAL
		ppath dynamic
		helpkey BZERO
		prompt {Zero to apply to output pixel values}
	    }
	    parameter bchoice {
		vpath global
		association <-global.imcalc.bchoice
		type _LOGICAL
		ppath dynamic
		helpkey BCHOICE
		prompt {Use 1.0,0.0 values? (yes:no)}
	    }
	    parameter outtype {
		vpath global
		association <-global.imcalc.outtype
		type LITERAL
		ppath dynamic
		helpkey OUTTYPE
		prompt {32-bit real/16-bit integer output image? (real:short)}
	    }
	}
	#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	# IMCUBE.IFL
	#
	action imcube {
	    helplib {$STARMAN_HELP_A IMCUBE PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imcube.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.imcube.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image}
	    }
	    parameter title {
		vpath global
		association <-global.imcube.title
		type LITERAL
		ppath dynamic
		position 3
		helpkey TITLE
		prompt {Title to add to output image}
	    }
	    parameter plane3 {
		vpath global
		association <-global.imcube.plane3
		type LITERAL
		ppath dynamic
		position 4
		helpkey PLANE3
		prompt {2D plane to make from 3D cube}
	    }
	    parameter plane4 {
		vpath global
		association <-global.imcube.plane4
		type LITERAL
		ppath dynamic
		position 5
		helpkey PLANE4
		prompt {2D plane to make from 4D cube}
	    }
	    parameter xplane {
		vpath global
		association <-global.imcube.xplane
		type _INTEGER
		ppath dynamic
		position 6
		helpkey XPLANE
		prompt {Range in X (1st) direction to squash down}
	    }
	    parameter yplane {
		vpath global
		association <-global.imcube.yplane
		type _INTEGER
		ppath dynamic
		position 7
		helpkey YPLANE
		prompt {Range in Y (2nd) direction to squash down}
	    }
	    parameter zplane {
		vpath global
		association <-global.imcube.zplane
		type _INTEGER
		ppath dynamic
		position 8
		helpkey ZPLANE
		prompt {Range in Z (3rd) direction to squash down}
	    }
	    parameter tplane {
		vpath global
		association <-global.imcube.tplane
		type _INTEGER
		ppath dynamic
		position 9
		helpkey TPLANE
		prompt {Range in T (4th) direction to squash down}
	    }
	}
	#
	# IMCUT.IFL
	#
	action imcut {
	    helplib {$STARMAN_HELP_A IMCUT PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imcut.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.imcut.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image}
	    }
	    parameter xrange {
		vpath global
		association <-global.imcut.xrange
		type _INTEGER
		ppath dynamic
		position 3
		helpkey XRANGE
		prompt {X range to cut out}
	    }
	    parameter yrange {
		vpath global
		association <-global.imcut.yrange
		type _INTEGER
		ppath dynamic
		position 4
		helpkey YRANGE
		prompt {Y range to cut out}
	    }
	    parameter bin {
		vpath global
		association <-global.imcut.bin
		type _INTEGER
		ppath dynamic
		position 5
		helpkey BIN
		prompt {XY size of box for binning of pixels}
	    }
	    parameter sample {
		vpath global
		association <-global.imcut.sample
		type LITERAL
		ppath dynamic
		position 6
		helpkey SAMPLE
		prompt {Sampling of binning box? (sample:highest:average)}
	    }
	    parameter check {
		vpath global
		association <-global.imcut.check
		type _LOGICAL
		ppath dynamic
		position 7
		helpkey CHECK
		prompt {If any box pixel invalid, output invalid? (yes:no)}
	    }
	    parameter title {
		vpath global
		association <-global.imcut.title
		type LITERAL
		ppath dynamic
		position 8
		helpkey TITLE
		prompt {Title to add to output image}
	    }
	}
	#
	#  IMDES.IFL
	#
	action imdes {
	    helplib {$STARMAN_HELP_A IMDES PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imdes.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.imdes.out
		type NDF
		access UPDATE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image }
	    }
	    parameter option {
		vpath global
		association <-global.imdes.option
		type LITERAL
		ppath dynamic
		position 3
		helpkey OPTION
		prompt {Which action? (list:write:delete:copy)}
	    }
	    parameter all_list {
		vpath global
		association <-global.imdes.all_list
		type LITERAL
		ppath dynamic
		position 4
		helpkey ALL_LIST
		prompt {List all or just some? (all:some)}
	    }
	    parameter name {
		vpath global
		association <-global.imdes.name
		type LITERAL
		ppath dynamic
		position 5
		helpkey NAME
		prompt {Descriptor name? (null for exit)}
	    }
	    parameter onlyone {
		vpath global
		association <-global.imdes.onlyone
		type _LOGICAL
		ppath dynamic
		position 6
		helpkey ONLYONE
		prompt {Do only one descriptor? (yes:no)}
	    }
	    parameter loop {
		vpath global
		association <-global.imdes.loop
		type _LOGICAL
		ppath dynamic
		helpkey LOOP
		prompt {Loop for descriptors? (yes:no)}
	    }
	    parameter value {
		vpath global
		association <-global.imdes.value
		type LITERAL
		ppath dynamic
		helpkey VALUE
		prompt {Value to put into descriptor}
	    }
	    parameter format {
		vpath global
		association <-global.imdes.format
		type LITERAL
		ppath dynamic
		helpkey FORMAT
		prompt {Format to put descriptor? (char:int:real)}
	    }
	    parameter over {
		vpath global
		association <-global.imdes.over
		type _LOGICAL
		ppath dynamic
		helpkey OVER
		prompt {If descriptor exists, overwrite? (yes:no)}
	    }
	    parameter delete {
		vpath global
		association <-global.imdes.delete
		type _LOGICAL
		ppath dynamic
		helpkey DELETE
		prompt {If descriptor exists, delete old? (yes:no)}
	    }
	    parameter all_del {
		vpath global
		association <-global.imdes.all_del
		type LITERAL
		ppath dynamic
		helpkey ALL_DEL
		prompt {Delete all or just some? (all:some)}
	    }
	    parameter more {
		vpath global
		association <-global.imdes.more
		type _LOGICAL
		ppath dynamic
		helpkey MORE
		prompt {Another page of output? (yes:no)}
	    }
	    parameter paging {
		vpath global
		association <-global.imdes.paging
		type _LOGICAL
		ppath dynamic
		helpkey PAGING
		prompt {Put out lists page by page? (yes:no)}
	    }
	}
	#
	#  IMFITS_DR.IFL
	#
	action imfits_dr {
	    helplib {$STARMAN_HELP_A IMFITS_DR PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imfits_dr.in
		type LITERAL
		ppath dynamic default
		default !
		position 1
		prompt {Full Name of Input FITS file}
		helpkey IN
	    }
	    parameter out {
		vpath global
		association <-global.imfits_dr.out
		type NDF
		access WRITE
		ppath dynamic default
		default !
		position 2
		prompt {Output NDF file}
		helpkey OUT
	    }
	    parameter outtype {
		vpath global
		association <-global.imfits_dr.outtype
		type LITERAL
		ppath dynamic
		position 3
		prompt {Output image type (short:real)}
		helpkey OUTTYPE
	    }
	    parameter object {
		vpath global
		association <-global.imfits_dr.object
		type LITERAL
		ppath dynamic
		position 4
		prompt {Header for object name}
		helpkey OBJECT
	    }
	    parameter do_info {
		vpath global
		association <-global.imfits_dr.do_info
		type LITERAL
		ppath dynamic
		position 5
		prompt {Print exposure summary (yes:no)}
		helpkey DO_INFO
	    }
	    parameter filter {
		vpath global
		association <-global.imfits_dr.filter
		type LITERAL
		ppath dynamic
		position 6
		prompt {Header for filter}
		helpkey FILTER
	    }
	    parameter ra {
		vpath global
		association <-global.imfits_dr.ra
		type LITERAL
		ppath dynamic
		position 7
		prompt {Header for RA}
		helpkey RA
	    }
	    parameter dec {
		vpath global
		association <-global.imfits_dr.dec
		type LITERAL
		ppath dynamic
		position 8
		prompt {Header for Dec}
		helpkey DEC
	    }
	    parameter exposure {
		vpath global
		association <-global.imfits_dr.exposure
		type LITERAL
		ppath dynamic
		position 9
		prompt {Header for exposure}
		helpkey EXPOSURE
	    }
	    parameter time {
		vpath global
		association <-global.imfits_dr.time
		type LITERAL
		ppath dynamic
		prompt {Header for time}
		helpkey TIME
	    }
	    parameter date {
		vpath global
		association <-global.imfits_dr.date
		type LITERAL
		ppath dynamic
		prompt {Header for date}
		helpkey DATE
	    }
	}
	#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	#  IMFLASH.IFL
	#
	#
	action imflash {
	    helplib {$STARMAN_HELP_A IMFLASH PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imflash.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter screen {
		vpath global
		association <-global.imflash.screen
		type _INTEGER
		vpath dynamic
		position 2
		helpkey SCREEN
		prompt {XY size of window to open}
	    }
	    parameter imcomp {
		vpath global
		association <-global.imflash.imcomp
		type _INTEGER
		vpath dynamic
		position 3
		helpkey IMCOMP
		prompt {Compress image in X,Y by?}
	    }
	    parameter numbutt {
		type _INTEGER
		vpath global default
		association <-global.numbutt
		ppath dynamic default
		default 3
		helpkey NUMBUTT
		position 4
		prompt {Number of buttons on mouse?}
	    }
	    parameter enough {
		vpath global
		association <-global.imflash.enough
		type _LOGICAL
		ppath dynamic
		position 5
		helpkey ENOUGH
		prompt {Seen enough? (reply yes or no to finish)}
	    }
	}
	#
    }

    #
    #   STARMAN2_MON.IFL
    #
    executable starman2_mon {
	#
	#   IMJOIN.IFL
	#
	action imjoin {
	    helplib {$STARMAN_HELP_A IMJOIN PARAMETERS}
	    parameter in1 {
		vpath global
		association <-global.imjoin.in1
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input Image 1}
	    }
	    parameter in2 {
		vpath global
		association <-global.imjoin.in2
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 2
		prompt {Input Image 2}
	    }
	    parameter in3 {
		vpath global
		association <-global.imjoin.in3
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 3
		prompt {Input Image 3}
	    }
	    parameter in4 {
		vpath global
		association <-global.imjoin.in4
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 4
		prompt {Input Image 4}
	    }
	    parameter in5 {
		vpath global
		association <-global.imjoin.in5
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 5
		prompt {Input Image 5}
	    }
	    parameter in6 {
		vpath global
		association <-global.imjoin.in6
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 6
		prompt {Input Image 6}
	    }
	    parameter in7 {
		vpath global
		association <-global.imjoin.in7
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 7
		prompt {Input Image 7}
	    }
	    parameter in8 {
		vpath global
		association <-global.imjoin.in8
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 8
		prompt {Input Image 8}
	    }
	    parameter in9 {
		vpath global
		association <-global.imjoin.in9
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 9
		prompt {Input Image 9}
	    }
	    parameter in10 {
		vpath global
		association <-global.imjoin.in10
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 10
		prompt {Input Image 10}
	    }
	    parameter inref {
		vpath global
		association <-global.imjoin.inref
		type NDF
		access READ
		helpkey INREF
		ppath dynamic default
		default !
		prompt {Input reference image}
	    }
	    parameter inref1 {
		vpath global
		association <-global.imjoin.inref1
		type NDF
		access READ
		helpkey INREF1
		ppath dynamic default
		default !
		prompt {Input reference image 1}
	    }
	    parameter inref2 {
		vpath global
		association <-global.imjoin.inref2
		type NDF
		access READ
		helpkey INREF2
		ppath dynamic default
		default !
		prompt {Input reference image 2}
	    }
	    parameter inload {
		vpath global
		association <-global.imjoin.inload
		type NDF
		access READ
		helpkey INLOAD
		ppath dynamic default
		default !
		prompt {Input reference load image}
	    }
	    parameter inload1 {
		vpath global
		association <-global.imjoin.inload1
		type NDF
		access READ
		helpkey INLOAD1
		ppath dynamic default
		default !
		prompt {Input reference load image 1}
	    }
	    parameter inload2 {
		vpath global
		association <-global.imjoin.inload2
		type NDF
		access READ
		helpkey INLOAD2
		ppath dynamic default
		default !
		prompt {Input reference load image 2}
	    }
	    parameter out {
		vpath global
		association <-global.imjoin.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		prompt {Output image}
	    }
	    parameter outref {
		vpath global
		association <-global.imjoin.outref
		type NDF
		access WRITE
		helpkey OUTREF
		ppath dynamic default
		default !
		prompt {Output reference image}
	    }
	    parameter outload {
		vpath global
		association <-global.imjoin.outload
		type NDF
		access WRITE
		helpkey OUTLOAD
		ppath dynamic default
		default !
		prompt {Output reference load image}
	    }
	    parameter doout {
		vpath global
		association <-global.imjoin.doout
		type _LOGICAL
		ppath dynamic
		helpkey DOOUT
		prompt {Make output image? (yes:no)}
	    }
	    parameter outtype {
		vpath global
		association <-global.imjoin.outtype
		type LITERAL
		ppath dynamic
		helpkey OUTTYPE
		prompt {Output image type? (real:short)}
	    }
	    parameter size {
		vpath global
		association <-global.imjoin.size
		type _INTEGER
		ppath dynamic
		helpkey SIZE
		prompt {XY Size of output reference image}
	    }
	    parameter zero {
		vpath global
		association <-global.imjoin.zero
		type _LOGICAL
		ppath dynamic
		helpkey ZERO
		prompt {Subtract median? (yes:no)}
	    }
	    parameter xcoeff1 {
		vpath global
		association <-global.imjoin.xcoeff1
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 1}
	    }
	    parameter xcoeff2 {
		vpath global
		association <-global.imjoin.xcoeff2
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 2}
	    }
	    parameter xcoeff3 {
		vpath global
		association <-global.imjoin.xcoeff3
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 3}
	    }
	    parameter xcoeff4 {
		vpath global
		association <-global.imjoin.xcoeff4
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 4}
	    }
	    parameter xcoeff5 {
		vpath global
		association <-global.imjoin.xcoeff5
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 5}
	    }
	    parameter xcoeff6 {
		vpath global
		association <-global.imjoin.xcoeff6
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 6}
	    }
	    parameter xcoeff7 {
		vpath global
		association <-global.imjoin.xcoeff7
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 7}
	    }
	    parameter xcoeff8 {
		vpath global
		association <-global.imjoin.xcoeff8
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 8}
	    }
	    parameter xcoeff9 {
		vpath global
		association <-global.imjoin.xcoeff9
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 9}
	    }
	    parameter xcoeff10 {
		vpath global
		association <-global.imjoin.xcoeff10
		type _REAL
		ppath dynamic
		helpkey XCOEFF
		prompt {X coefficents of transform for image 10}
	    }
	    parameter ycoeff1 {
		vpath global
		association <-global.imjoin.ycoeff1
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 1}
	    }
	    parameter ycoeff2 {
		vpath global
		association <-global.imjoin.ycoeff2
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 2}
	    }
	    parameter ycoeff3 {
		vpath global
		association <-global.imjoin.ycoeff3
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 3}
	    }
	    parameter ycoeff4 {
		vpath global
		association <-global.imjoin.ycoeff4
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 4}
	    }
	    parameter ycoeff5 {
		vpath global
		association <-global.imjoin.ycoeff5
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 5}
	    }
	    parameter ycoeff6 {
		vpath global
		association <-global.imjoin.ycoeff6
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 6}
	    }
	    parameter ycoeff7 {
		vpath global
		association <-global.imjoin.ycoeff7
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 7}
	    }
	    parameter ycoeff8 {
		vpath global
		association <-global.imjoin.ycoeff8
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 8}
	    }
	    parameter ycoeff9 {
		vpath global
		association <-global.imjoin.ycoeff9
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 9}
	    }
	    parameter ycoeff10 {
		vpath global
		association <-global.imjoin.ycoeff10
		type _REAL
		ppath dynamic
		helpkey YCOEFF
		prompt {Y coefficents of transform for image 10}
	    }
	    parameter xyshft1 {
		vpath global
		association <-global.imjoin.xyshft1
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 1}
	    }
	    parameter xyshft2 {
		vpath global
		association <-global.imjoin.xyshft2
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 2}
	    }
	    parameter xyshft3 {
		vpath global
		association <-global.imjoin.xyshft3
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 3}
	    }
	    parameter xyshft4 {
		vpath global
		association <-global.imjoin.xyshft4
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 4}
	    }
	    parameter xyshft5 {
		vpath global
		association <-global.imjoin.xyshft5
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 5}
	    }
	    parameter xyshft6 {
		vpath global
		association <-global.imjoin.xyshft6
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 6}
	    }
	    parameter xyshft7 {
		vpath global
		association <-global.imjoin.xyshft7
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 7}
	    }
	    parameter xyshft8 {
		vpath global
		association <-global.imjoin.xyshft8
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 8}
	    }
	    parameter xyshft9 {
		vpath global
		association <-global.imjoin.xyshft9
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 9}
	    }
	    parameter xyshft10 {
		vpath global
		association <-global.imjoin.xyshft10
		type _REAL
		ppath dynamic
		helpkey XYSHFT
		prompt {X and Y shift for image 10}
	    }
	    parameter scale1 {
		vpath global
		association <-global.imjoin.scale1
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 1}
	    }
	    parameter scale2 {
		vpath global
		association <-global.imjoin.scale2
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 2}
	    }
	    parameter scale3 {
		vpath global
		association <-global.imjoin.scale3
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 3}
	    }
	    parameter scale4 {
		vpath global
		association <-global.imjoin.scale4
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 4}
	    }
	    parameter scale5 {
		vpath global
		association <-global.imjoin.scale5
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 5}
	    }
	    parameter scale6 {
		vpath global
		association <-global.imjoin.scale6
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 6}
	    }
	    parameter scale7 {
		vpath global
		association <-global.imjoin.scale7
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 7}
	    }
	    parameter scale8 {
		vpath global
		association <-global.imjoin.scale8
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 8}
	    }
	    parameter scale9 {
		vpath global
		association <-global.imjoin.scale9
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 9}
	    }
	    parameter scale10 {
		vpath global
		association <-global.imjoin.scale10
		type _REAL
		ppath dynamic
		helpkey SCALE
		prompt {Pixel values scale of image 10}
	    }
	    parameter title {
		vpath global
		association <-global.imjoin.title
		type LITERAL
		ppath dynamic
		helpkey TITLE
		prompt {Title to add to output image}
	    }
	    parameter titlel {
		vpath global
		association <-global.imjoin.titlel
		type LITERAL
		ppath dynamic
		helpkey TITLEL
		prompt {Title to add to output reference load image}
	    }
	    parameter titler {
		vpath global
		association <-global.imjoin.titler
		type LITERAL
		ppath dynamic
		helpkey TITLER
		prompt {Title to add to output reference image}
	    }
	    parameter outscale {
		vpath global
		association <-global.imjoin.outscale
		type _REAL
		ppath dynamic
		helpkey OUTSCALE
		prompt {Scale,zero of output image}
	    }
	    parameter method {
		vpath global
		association <-global.imjoin.method
		type LITERAL
		ppath dynamic
		helpkey METHOD
		prompt {Joining method? (nearest:linear:uniform)}
	    }
	    parameter shift {
		vpath global
		association <-global.imjoin.shift
		type LITERAL
		ppath dynamic
		helpkey SHIFT
		prompt {Shifting method? (full:xyshift)}
	    }
	    parameter outmode {
		vpath global
		association <-global.imjoin.outmode
		type LITERAL
		ppath dynamic
		helpkey OUTMODE
		prompt {Output is new or existing image? (new:reference)}
	    }
	}
	#
	# IMKEY.IFL
	#
	action imkey {
	    helplib {$STARMAN_HELP_A IMKEY PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imkey.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		prompt {Input image (null if none)?}
		position 1
	    }
	    parameter out {
		vpath global
		association <-global.imkey.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		prompt {Output image ?}
		default !
		position 2
	    }
	    parameter size {
		vpath global
		association <-global.imkey.size
		type _INTEGER
		ppath dynamic
		position 3
		prompt {XY size of output image ? }
		helpkey SIZE
	    }
	    parameter outscale {
		vpath global
		association <-global.imkey.outscale
		type _REAL
		ppath dynamic
		prompt {Scale, zero for output image values (1.0,0.0)?}
		position 4
		helpkey OUTSCALE
	    }
	    parameter outtype {
		vpath global
		association <-global.imkey.outtype
		type LITERAL
		ppath dynamic
		position 5
		prompt {Type of output image? (real:short)}
		helpkey OUTTYPE
	    }
	    parameter level {
		vpath global
		association <-global.imkey.level
		type _REAL
		ppath dynamic
		position 6
		prompt {Value for all pixels in output image ?}
		helpkey LEVEL
	    }
	    parameter title {
		vpath global
		association <-global.imkey.title
		type LITERAL
		ppath dynamic
		position 7
		prompt {Title to add to output image ?}
		helpkey TITLE
	    }
	    parameter xy {
		vpath global
		association <-global.imkey.xy
		type _INTEGER
		ppath dynamic
		prompt {XY Pixel Position ? (0,0 to end)}
		helpkey XY
	    }
	    parameter invalxy {
		vpath global
		association <-global.imkey.invalxy
		type _INTEGER
		ppath dynamic
		prompt {XY INvalid Pixel Position ? }
		helpkey INVALXY
	    }
	    parameter value {
		vpath global
		association <-global.imkey.value
		type _REAL
		ppath dynamic
		prompt {Pixel Value ? }
		helpkey VALUE
	    }
	}
	#
	#  IMPORT.IFL
	#
	action import {
	    helplib {$STARMAN_HELP_A IMPORT PARAMETERS}
	    parameter in {
		type NDF
		position 1
		access UPDATE
		helpkey IN
		ppath current default
		default !
		vpath prompt
		prompt {Input/output image}
	    }
	    parameter from {
		vpath global
		association <-global.import.from
		type LITERAL
		ppath dynamic
		position 2
		helpkey FROM
		prompt {Extension to read from (fits:starman:figaro:other)}
	    }
	    parameter to {
		vpath global
		association <-global.import.to
		type LITERAL
		ppath dynamic
		position 3
		helpkey TO
		prompt {Extension to read from (fits:starman:figaro:other)}
	    }
	    parameter in_exten {
		vpath global
		association <-global.import.in_exten
		type LITERAL
		ppath dynamic
		position 4
		helpkey IN_EXTEN
		prompt {Name of extension to read from}
	    }
	    parameter out_exten {
		vpath global
		association <-global.import.out_exten
		type LITERAL
		ppath dynamic
		position 5
		helpkey OUT_EXTEN
		prompt {Name of extension to write into}
	    }
	    parameter delete {
		vpath global
		association <-global.import.delete
		type _LOGICAL
		ppath dynamic
		position 6
		helpkey DELETE
		prompt {Delete input extension? (yes:no)}
	    }
	}
	#
	# IMROTATE.IFL
	#
	action imrotate {
	    helplib {$STARMAN_HELP_A IMROTATE PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imrotate.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.imrotate.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image}
	    }
	    parameter degrees {
		vpath global
		association <-global.imrotate.degrees
		type LITERAL
		ppath dynamic
		position 3
		helpkey DEGREES
		prompt {Degrees to rotate image? (90,180,270)}
	    }
	    parameter title {
		vpath global
		association <-global.imrotate.title
		type LITERAL
		ppath dynamic
		position 4
		helpkey TITLE
		prompt {Title to add to output image}
	    }
	}
	#
	# IMSMOOTH.IFL
	#
	action imsmooth {
	    helplib {$STARMAN_HELP_A IMSMOOTH PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imsmooth.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image?}
	    }
	    parameter out {
		vpath global
		association <-global.imsmooth.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image?}
	    }
	    parameter method {
		vpath global
		association <-global.imsmooth.method
		type LITERAL
		ppath dynamic
		position 3
		prompt {Smooth method? (box:gauss:median)}
		helpkey METHOD
	    }
	    parameter box {
		vpath global
		association <-global.imsmooth.box
		type _INTEGER
		ppath dynamic
		position 4
		helpkey BOX
		prompt {Size of XY smoothing box?}
	    }
	    parameter gradius {
		vpath global
		association <-global.imsmooth.gradius
		type _REAL
		ppath dynamic
		position 5
		helpkey GRADIUS
		prompt {E-folding radius of Gaussian?}
	    }
	    parameter gbox {
		vpath global
		association <-global.imsmooth.gbox
		type _INTEGER
		ppath dynamic
		position 6
		prompt {Size of XY box to smooth over?}
		helpkey GBOX
	    }
	    parameter title {
		vpath global
		association <-global.imsmooth.title
		type LITERAL
		ppath dynamic
		position 7
		prompt {Title to add to output image?}
		helpkey TITLE
	    }
	}
	#
	# IMSTAT.IFL
	#
	action imstat {
	    helplib {$STARMAN_HELP_A IMSTAT PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imstat.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		position 1
		default !
		prompt {Input image}
	    }
	    parameter xrange {
		vpath global
		association <-global.imstat.xrange
		type _INTEGER
		ppath dynamic
		helpkey XRANGE
		position 2
		prompt {X range to use}
	    }
	    parameter yrange {
		vpath global
		association <-global.imstat.yrange
		type _INTEGER
		ppath dynamic
		helpkey YRANGE
		position 3
		prompt {Y range to use}
	    }
	    parameter mean {
		vpath global
		association <-global.imstat.mean
		type _REAL
		access WRITE
		vpath internal
	    }
	    parameter stddev {
		vpath global
		association <-global.imstat.stddev
		type _REAL
		access WRITE
		vpath internal
	    }
	    parameter min {
		vpath global
		association <-global.imstat.min
		type _REAL
		access WRITE
		vpath internal
	    }
	    parameter max {
		vpath global
		association <-global.imstat.max
		type _REAL
		access WRITE
		vpath internal
	    }
	    parameter ngood {
		vpath global
		association <-global.imstat.ngood
		type _INTEGER
		access WRITE
		vpath internal
	    }
	    parameter nbad {
		vpath global
		association <-global.imstat.nbad
		type _INTEGER
		access WRITE
		vpath internal
	    }
	    parameter xmaxloc {
		vpath global
		association <-global.imstat.xmaxloc
		type _INTEGER
		access WRITE
		vpath internal
	    }
	    parameter xminloc {
		vpath global
		association <-global.imstat.xminloc
		type _INTEGER
		access WRITE
		vpath internal
	    }
	    parameter ymaxloc {
		vpath global
		association <-global.imstat.ymaxloc
		type _INTEGER
		access WRITE
		vpath internal
	    }
	    parameter yminloc {
		vpath global
		association <-global.imstat.yminloc
		type _INTEGER
		access WRITE
		vpath internal
	    }
	    parameter sum {
		vpath global
		association <-global.imstat.sum
		type _REAL
		access WRITE
		vpath internal
	    }
	}
	#
	# IMTYPE.IFL
	#
	action imtype {
	    helplib {$STARMAN_HELP_A IMTYPE PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imtype.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.imtype.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image}
	    }
	    parameter outtype {
		vpath global
		association <-global.imtype.outtype
		type LITERAL
		ppath dynamic
		position 3
		helpkey OUT_TYPE
		prompt {32-bit real/32-bit int/16-bit int? (real:int:short)}
	    }
	    parameter range {
		vpath global
		association <-global.imtype.range
		type _LOGICAL
		ppath dynamic
		position 4
		helpkey RANGE
		prompt {Calculate range of input data? (yes:no)}
	    }
	    parameter auto {
		vpath global
		association <-global.imtype.auto
		type _LOGICAL
		ppath dynamic
		position 5
		helpkey AUTO
		prompt {Automatically internally scale output? (yes:no)}
	    }
	    parameter outscale {
		vpath global
		association <-global.imtype.outscale
		type _REAL
		ppath dynamic
		position 6
		helpkey OUTSCALE
		prompt {Output image BSCALE and BZERO}
	    }
	    parameter title {
		vpath global
		association <-global.imtype.title
		type LITERAL
		ppath dynamic
		position 7
		helpkey TITLE
		prompt {Title to add to output image}
	    }
	}
	#
	# IMWEED.IFL
	#
	action imweed {
	    helplib {$STARMAN_HELP_A IMWEED PARAMETERS}
	    parameter in {
		vpath global
		association <-global.imweed.in
		type NDF
		access READ
		helpkey IN
		ppath dynamic default
		default !
		position 1
		prompt {Input image}
	    }
	    parameter out {
		vpath global
		association <-global.imweed.out
		type NDF
		access WRITE
		helpkey OUT
		ppath dynamic default
		default !
		position 2
		prompt {Output image}
	    }
	    parameter range {
		vpath global
		association <-global.imweed.range
		type _REAL
		ppath dynamic
		position 3
		helpkey RANGE
		prompt {Range of pixel values to set to Invalid}
	    }
	    parameter title {
		vpath global
		association <-global.imweed.title
		type LITERAL
		ppath dynamic
		position 4
		helpkey TITLE
		prompt {Title to add to output image}
	    }
	}
	#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	#  INTERACT.IFL
	#
	#
	#   General elements
	#
	action interact {
	    helplib {$STARMAN_HELP_A INTERACT PARAMETERS}
	    parameter in {
		vpath global
		association <-global.interact.in
		type NDF
		access READ
		default !
		ppath dynamic default
		position 1
		prompt {Input image file name?}
		helpkey IN
	    }
	    parameter easystart {
		vpath global
		association <-global.interact.easystart
		type _LOGICAL
		ppath dynamic
		position 2
		prompt {Use the standard start sequence of operations?}
		helpkey EASYSTART
	    }
	    parameter imposn {
		vpath global
		association <-global.interact.imposn
		type _INTEGER
		ppath dynamic
		position 3
		prompt {XY Position in window of image BLH corner?}
		helpkey IMPOSN
	    }
	    parameter screen {
		vpath global
		association <-global.interact.screen
		type _INTEGER
		ppath dynamic
		position 4
		prompt {XY size of window to open?}
		helpkey SCREEN
	    }
	    parameter gtype {
		vpath global
		association <-global.interact.gtype
		type LITERAL
		ppath dynamic
		position 5
		prompt {GKS name of plot device ?}
		helpkey GTYPE
	    }
	    parameter numbutt {
		type _INTEGER
		vpath global current
		association <-global.numbutt
		ppath dynamic default
		default 3
		position 6
		prompt {Number of buttons on mouse?}
		helpkey NUMBUTT
	    }
	    parameter imcomp {
		vpath global
		association <-global.interact.imcomp
		type _INTEGER
		vpath default
		helpkey IMCOMP
		prompt {Compress image in X,Y by?}
	    }
	    parameter linecol {
		vpath global
		association <-global.linecol
		type LITERAL
		ppath dynamic
		helpkey LINECOL
		prompt {Colour of plot lines? (black:white)}
	    }
	    parameter vrange {
		vpath global
		association <-global.interact.vrange
		type _REAL
		ppath dynamic
		prompt {Low/High of display range?}
		helpkey VRANGE
	    }
	    parameter wrap {
		vpath global
		association <-global.interact.wrap
		type _LOGICAL
		ppath dynamic
		prompt {Wrap in the values outside range? (yes:no)}
		helpkey WRAP
	    }
	    parameter title {
		vpath global
		association <-global.interact.title
		type LITERAL
		ppath dynamic
		prompt {Title to give to output image?}
		helpkey TITLE
	    }
	    parameter blink_ch {
		vpath global
		association <-global.interact.blink_ch
		type LITERAL
		ppath dynamic
		prompt {Blinking choice (under:over:auto:exit) ?}
		helpkey BLINK_CH
	    }
	    #
	    #  Elements for Interact
	    #
	    parameter xrange {
		vpath global
		association <-global.interact.xrange
		type _INTEGER
		ppath dynamic
		prompt {X range of image to access?}
		helpkey XRANGE
	    }
	    parameter yrange {
		vpath global
		association <-global.interact.yrange
		type _INTEGER
		ppath dynamic
		prompt {Y range of image to access?}
		helpkey YRANGE
	    }
	    parameter option {
		vpath global
		association <-global.interact.option
		type LITERAL
		ppath dynamic
		prompt {Which action to perform?}
		helpkey OPTION
	    }
	    #
	    #  Elements for Posnmag
	    #
	    parameter intab {
		vpath global
		association <-global.interact.intab
		type NDF
		access READ
		ppath dynamic default
		default !
		prompt {Name of input file of position table?}
		helpkey INTAB
	    }
	    parameter outtab {
		vpath global
		association <-global.interact.outtab
		type NDF
		access WRITE
		ppath dynamic default
		default !
		prompt {Name of output file of position table?}
		helpkey OUTTAB
	    }
	    parameter goption {
		vpath global
		association <-global.interact.goption
		type LITERAL
		ppath dynamic
		prompt {Which action to perform?}
		helpkey GOPTION
	    }
	    parameter radfix {
		vpath global
		association <-global.interact.radfix
		type _LOGICAL
		ppath dynamic
		prompt {Fix the star X and Y radii?}
		helpkey RADFIX
	    }
	    parameter radsize {
		vpath global
		association <-global.interact.radsize
		type _REAL
		ppath dynamic
		prompt {Star X and Y radii?}
		helpkey RADSIZE
	    }
	    parameter boxsize {
		vpath global
		association <-global.interact.boxsize
		type _INTEGER
		ppath dynamic
		prompt {Size of box round star to use?}
		helpkey BOXSIZE
	    }
	    parameter boxshow {
		vpath global
		association <-global.interact.boxshow
		type _LOGICAL
		ppath dynamic
		prompt {Paint box round fit? (yes:no)}
		helpkey BOXSHOW
	    }
	    parameter crossl {
		vpath global
		association <-global.interact.crossl
		type _REAL
		ppath dynamic
		prompt {Length of cross to paint?}
		helpkey CROSSL
	    }
	    parameter crcol {
		vpath global
		association <-global.interact.crcol
		type LITERAL
		ppath dynamic
		prompt {Colour of cross to paint?}
		helpkey CRCOL
	    }
	    #
	    # Elements for 'scrutiny'
	    #
	    parameter soption {
		vpath global
		association <-global.interact.soption
		type LITERAL
		ppath dynamic
		prompt {Which action to perform?}
		helpkey SOPTION
	    }
	    parameter number {
		vpath global
		association <-global.interact.number
		type _INTEGER
		ppath dynamic
		prompt {Number in star list? (0 to exit if looping)}
		helpkey NUMBER
	    }
	    parameter domap {
		vpath global
		association <-global.interact.domap
		type _LOGICAL
		ppath dynamic
		prompt {Use numerical map part of profile?}
		helpkey DOMAP
	    }
	    parameter profile {
		vpath global
		association <-global.interact.profile
		type NDF
		access READ
		ppath dynamic default
		default !
		prompt {Name of file containing the profile?}
		helpkey PROFILE
	    }
	    parameter wlist {
		vpath global
		association <-global.interact.wlist
		type LITERAL
		ppath dynamic
		prompt {Use old or new positions in position table?}
		helpkey WLIST
	    }
	    parameter outfile {
		vpath global
		association <-global.interact.outfile
		type LITERAL
		ppath dynamic
		prompt {Name of ASCII Output file?}
		helpkey OUTFILE
	    }
	    parameter dopref {
		vpath global
		association <-global.interact.dopref
		type _LOGICAL
		ppath dynamic
		prompt {Use input star names and add prefix to new ones?}
		helpkey DOPREF
	    }
	    parameter prefix {
		vpath global
		association <-global.interact.prefix
		type LITERAL
		ppath dynamic
		prompt {Prefix to add to the #NNN names of new stars?}
		    helpkey PREFIX
		}
		parameter numchar {
		    vpath global
		    association <-global.interact.numchar
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters in star names to output?}
		    helpkey NUMCHAR
		}
		parameter numcol {
		    vpath global
		    association <-global.interact.numcol
		    type _INTEGER
		    ppath dynamic
		    prompt {Column number to add to output? (0 to end)}
		    helpkey NUMCOL
		}
		parameter numbef {
		    vpath global
		    association <-global.interact.numbef
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of digits to show before decimal point?}
		    helpkey NUMBEF
		}
		parameter numaft {
		    vpath global
		    association <-global.interact.numaft
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of digits to show after decimal point?}
		    helpkey NUMAFT
		}
		parameter doform {
		    vpath global
		    association <-global.interact.doform
		    type _LOGICAL
		    ppath dynamic
		    prompt {Choose format of output?}
		    helpkey DOFORM
		}
		parameter seek {
		    vpath global
		    association <-global.interact.seek
		    type LITERAL
		    ppath dynamic
		    prompt {Select star by name or number in table?}
		    helpkey SEEK
		}
		parameter name {
		    vpath global
		    association <-global.interact.name
		    type LITERAL
		    ppath dynamic
		    prompt {Name of star to access?}
		    helpkey NAME
		}
		parameter doslope {
		    vpath global
		    association <-global.interact.doslope
		    type _LOGICAL
		    ppath dynamic
		    prompt {Subtract sloping component of background?}
		    helpkey DOSLOPE
		}
		parameter contrast {
		    vpath global
		    association <-global.interact.contrast
		    type _LOGICAL
		    ppath dynamic
		    prompt {High contrast display of removal?}
		    helpkey CONTRAST
		}
		parameter dospot {
		    vpath global
		    association <-global.interact.dospot
		    type _LOGICAL
		    ppath dynamic
		    prompt {Use spot in marking stars (otherwise cross)?}
		    helpkey DOSPOT
		}
		parameter donew {
		    vpath global
		    association <-global.interact.donew
		    type _LOGICAL
		    ppath dynamic
		    prompt {Use new star positions (otherwise old)?}
		    helpkey DONEW
		}
		parameter length {
		    vpath global
		    association <-global.interact.length
		    type _REAL
		    ppath dynamic
		    prompt {Length of cross to show?}
		    helpkey LENGTH
		}
		parameter bylist {
		    vpath global
		    association <-global.interact.bylist
		    type _LOGICAL
		    ppath dynamic
		    prompt {Select by section in table (otherwise in an area)?}
		    helpkey BYLIST
		}
		parameter lrange {
		    vpath global
		    association <-global.interact.lrange
		    type _INTEGER
		    ppath dynamic
		    prompt {Range of rows in table to access?}
		    helpkey LRANGE
		}
		parameter lxrange {
		    vpath global
		    association <-global.interact.lxrange
		    type _REAL
		    ppath dynamic
		    prompt {X range of area to select from?}
		    helpkey LXRANGE
		}
		parameter lyrange {
		    vpath global
		    association <-global.interact.lyrange
		    type _REAL
		    ppath dynamic
		    prompt {Y range of area to select from?}
		    helpkey LYRANGE
		}
		parameter instars {
		    vpath global
		    association <-global.interact.instars
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    prompt {Name of file with MEASURE results?}
		    helpkey INSTARS
		}
		parameter outstars {
		    vpath global
		    association <-global.interact.outstars
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    prompt {Name of file to store changed star table?}
		    helpkey OUTSTARS
		}
		parameter listxy {
		    vpath global
		    association <-global.interact.listxy
		    type _LOGICAL
		    ppath dynamic
		    prompt {Include XY positions in typing?}
		    helpkey LISTXY
		}
		parameter col_ok {
		    vpath global
		    association <-global.interact.col_ok
		    type LITERAL
		    ppath dynamic
		    prompt {Colour of mark for good input stars?}
		    helpkey COL_OK
		}
		parameter col_bad {
		    vpath global
		    association <-global.interact.col_bad
		    type LITERAL
		    ppath dynamic
		    prompt {Colour of mark for bad input stars?}
		    helpkey COL_BAD
		}
		parameter col_star {
		    vpath global
		    association <-global.interact.col_star
		    type LITERAL
		    ppath dynamic
		    prompt {Colour of mark for new stars?}
		    helpkey COL_STAR
		}
		#
		# Elements for 'inspect'
		#
		parameter ioption {
		    vpath global
		    association <-global.interact.ioption
		    type LITERAL
		    ppath dynamic
		    prompt {Which action to perform?}
		    helpkey IOPTION
		}
		parameter xarea {
		    vpath global
		    association <-global.interact.xarea
		    type _INTEGER
		    ppath dynamic
		    prompt {X limits of area to inspect?}
		    helpkey XAREA
		}
		parameter yarea {
		    vpath global
		    association <-global.interact.yarea
		    type _INTEGER
		    ppath dynamic
		    prompt {Y limits of area to inspect?}
		    helpkey YAREA
		}
		parameter steps {
		    vpath global
		    association <-global.interact.steps
		    type _REAL
		    ppath dynamic
		    prompt {XY steps in inspect area to use?}
		    helpkey STEPS
		}
		parameter window {
		    vpath global
		    association <-global.interact.window
		    type _REAL
		    ppath dynamic
		    prompt {Range of numbers allowed in typing out?}
		    helpkey WINDOW
		}
		parameter scale {
		    vpath global
		    association <-global.interact.scale
		    type _REAL
		    ppath dynamic
		    prompt {Scale to divide BASEd numbers before typing?}
		    helpkey SCALE
		}
		parameter base {
		    vpath global
		    association <-global.interact.base
		    type _REAL
		    ppath dynamic
		    prompt {Zero to subtract from numbers before typing?}
		    helpkey BASE
		}
		parameter decpl {
		    vpath global
		    association <-global.interact.decpl
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of digits to show after decimal point?}
		    helpkey DECPL
		}
		parameter width {
		    vpath global
		    association <-global.interact.width
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters to allow for typed numbers?}
		    helpkey WIDTH
		}
		parameter orient {
		    vpath global
		    association <-global.interact.orient
		    type _REAL
		    ppath dynamic
		    prompt {Azimuth (in degrees) to look at solid from?}
		    helpkey ORIENT
		}
		parameter hrange {
		    vpath global
		    association <-global.interact.hrange
		    type _REAL
		    ppath dynamic
		    prompt {Range of values to allow in histogram?}
		    helpkey HRANGE
		}
		parameter desname {
		    vpath global
		    association <-global.interact.desname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of descriptor?}
		    helpkey DESNAME
		}
		parameter extname {
		    vpath global
		    association <-global.interact.extname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of extension descriptor is in?}
		    helpkey EXTNAME
		}
		parameter contour {
		    vpath global
		    association <-global.interact.contour
		    type _REAL
		    ppath dynamic
		    prompt {Range, and step inside, to see in contour plot?}
		    helpkey CONTOUR
		}
		parameter xypplot {
		    vpath global
		    association <-global.interact.xypplot
		    type _REAL
		    ppath dynamic
		    prompt {XY fraction of window to use in putting graph?}
		    helpkey XYPPLOT
		}
		parameter vprange {
		    vpath global
		    association <-global.interact.vprange
		    type _REAL
		    ppath dynamic
		    prompt {Min and Max of values to plot?}
		    helpkey VPRANGE
		}
		parameter igradii {
		    vpath global
		    association <-global.interact.igradii
		    type _REAL
		    ppath dynamic
		    prompt {XY Radii to use in fit?}
		    helpkey IGRADII
		}
		parameter igbox {
		    vpath global
		    association <-global.interact.igbox
		    type _INTEGER
		    ppath dynamic
		    prompt {XY size of box round star to use?}
		    helpkey IGBOX
		}
		#
		# Elements for 'aperture'
		#
		parameter aoption {
		    vpath global
		    association <-global.interact.aoption
		    type LITERAL
		    ppath dynamic
		    prompt {Which action to perform?}
		    helpkey AOPTION
		}
		parameter apdiam {
		    vpath global
		    association <-global.interact.apdiam
		    type _REAL
		    ppath dynamic
		    prompt {Aperture XY oval diameter in pixels?}
		    helpkey APDIAM
		}
		parameter apang {
		    vpath global
		    association <-global.interact.apang
		    type _REAL
		    ppath dynamic
		    prompt {Aperture oval angle to X axis in degrees?}
		    helpkey APANG
		}
		parameter apell {
		    vpath global
		    association <-global.interact.apell
		    type _REAL
		    ppath dynamic
		    prompt {Aperture oval ellipticity (0.0-1.0) ?}
		    helpkey APELL
		}
		parameter zerop {
		    vpath global
		    association <-global.interact.zerop
		    type _REAL
		    ppath dynamic
		    prompt {Zero point to be added to magnitudes?}
		    helpkey ZEROP
		}
		parameter poiss {
		    vpath global
		    association <-global.interact.poiss
		    type _REAL
		    ppath dynamic
		    prompt {Scaling needed to get to Poissionian values?}
		    helpkey POISS
		}
		parameter noise {
		    vpath global
		    association <-global.interact.noise
		    type _REAL
		    ppath dynamic
		    prompt {Extra Poisson noise present in image?}
		    helpkey NOISE
		}
		parameter keep {
		    vpath global
		    association <-global.interact.keep
		    type _LOGICAL
		    ppath dynamic
		    prompt {Resurrect -removed- aperture measures?}
		    helpkey KEEP
		}
		parameter method {
		    vpath global
		    association <-global.interact.method
		    type LITERAL
		    ppath dynamic
		    prompt {Method to get sky level by (annulus:separate)?}
		    helpkey METHOD
		}
		parameter outmags {
		    vpath global
		    association <-global.interact.outmags
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    prompt {Name of output file to contain reults?}
		    helpkey OUTMAGS
		}
		parameter outtype {
		    vpath global
		    association <-global.interact.outtype
		    type LITERAL
		    ppath dynamic
		    prompt {Short or full form of output file?}
		    helpkey OUTTYPE
		}
		parameter list {
		    vpath global
		    association <-global.interact.list
		    type _LOGICAL
		    ppath dynamic
		    prompt {Include -removed- measures when typing them out?}
		    helpkey LIST
		}
		parameter fixgrad {
		    vpath global
		    association <-global.interact.fixgrad
		    type _LOGICAL
		    ppath dynamic
		    prompt {Fix the star radii when centering?}
		    helpkey FIXGRAD
		}
		parameter gradii {
		    vpath global
		    association <-global.interact.gradii
		    type _REAL
		    ppath dynamic
		    prompt {XY radii to use in fixed profile centering?}
		    helpkey GRADII
		}
		#
		# Elements for 'airsub'
		#
		parameter keytime {
		    vpath global
		    association <-global.interact.keytime
		    type _LOGICAL
		    ppath dynamic
		    prompt {Use keyboard for exposure time (otherwise from image)?}
		    helpkey KEYTIME
		}
		parameter exptim {
		    vpath global
		    association <-global.interact.exptim
		    type _REAL
		    ppath dynamic
		    prompt {Exposure time?}
		    helpkey EXPTIM
		}
		parameter descrtime {
		    vpath global
		    association <-global.interact.descrtime
		    type _LOGICAL
		    ppath dynamic
		    prompt {Use image descriptor to get exposure time from?}
		    helpkey DESCRTIME
		}
		parameter expname {
		    vpath global
		    association <-global.interact.expname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of image descriptor for exposure time?}
		    helpkey EXPNAME
		}
		parameter descrair {
		    vpath global
		    association <-global.interact.descrair
		    type LITERAL
		    ppath dynamic
		    prompt {Method of getting air mass (none:airmass:posn)?}
		    helpkey DESCRAIR
		}
		parameter airname {
		    vpath global
		    association <-global.interact.airname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of image descriptor for air mass?}
		    helpkey AIRNAME
		}
		parameter latitude {
		    vpath global
		    association <-global.interact.latitude
		    type LITERAL
		    ppath dynamic
		    prompt {site latitude (as +00 00 00)?}
		    helpkey LATITUDE
		}
		parameter raname {
		    vpath global
		    association <-global.interact.raname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of image descriptor for Right Ascension?}
		    helpkey RANAME
		}
		parameter decname {
		    vpath global
		    association <-global.interact.decname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of image descriptor for Declination?}
		    helpkey DECNAME
		}
		parameter coordtype {
		    vpath global
		    association <-global.interact.coordtype
		    type LITERAL
		    ppath dynamic
		    prompt {Coordinates input as (degree:radian:string)?}
		    helpkey COORDTYPE
		}
		parameter sidtname {
		    vpath global
		    association <-global.interact.sidtname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of image descriptor for sidereal time?}
		    helpkey SIDTNAME
		}
		parameter descrfilt {
		    vpath global
		    association <-global.interact.descrfilt
		    type _LOGICAL
		    ppath dynamic
		    prompt {Use image descriptor to get filters from?}
		    helpkey DESCRFILT
		}
		parameter filtname {
		    vpath global
		    association <-global.interact.filtname
		    type LITERAL
		    ppath dynamic
		    prompt {Name of image descriptor for filter name?}
		    helpkey FILTNAME
		}
		parameter filtloc {
		    vpath global
		    association <-global.interact.filtloc
		    type _INTEGER
		    ppath dynamic
		    prompt {Character posn of start and end of filter code?}
		    helpkey FILTLOC
		}
		parameter fname1 {
		    vpath global
		    association <-global.interact.fname1
		    type LITERAL
		    ppath dynamic
		    prompt {Name of first filter?}
		    helpkey FNAME
		}
		parameter fname2 {
		    vpath global
		    association <-global.interact.fname2
		    type LITERAL
		    ppath dynamic
		    prompt {Name of second filter?}
		    helpkey FNAME
		}
		parameter fname3 {
		    vpath global
		    association <-global.interact.fname3
		    type LITERAL
		    ppath dynamic
		    prompt {Name of third filter?}
		    helpkey FNAME
		}
		parameter fname4 {
		    vpath global
		    association <-global.interact.fname4
		    type LITERAL
		    ppath dynamic
		    prompt {Name of fourth filter?}
		    helpkey FNAME
		}
		parameter fname5 {
		    vpath global
		    association <-global.interact.fname5
		    type LITERAL
		    ppath dynamic
		    prompt {Name of fifth filter?}
		    helpkey FNAME
		}
		parameter fname6 {
		    vpath global
		    association <-global.interact.fname6
		    type LITERAL
		    ppath dynamic
		    prompt {Name of sixth filter?}
		    helpkey FNAME
		}
		parameter fname7 {
		    vpath global
		    association <-global.interact.fname7
		    type LITERAL
		    ppath dynamic
		    prompt {Name of seventh filter?}
		    helpkey FNAME
		}
		parameter fname8 {
		    vpath global
		    association <-global.interact.fname8
		    type LITERAL
		    ppath dynamic
		    prompt {Name of eigth filter?}
		    helpkey FNAME
		}
		parameter fname9 {
		    vpath global
		    association <-global.interact.fname9
		    type LITERAL
		    ppath dynamic
		    prompt {Name of ninth filter?}
		    helpkey FNAME
		}
		parameter ext1 {
		    vpath global
		    association <-global.interact.ext1
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for first filter?}
		    helpkey EXTINC
		}
		parameter ext2 {
		    vpath global
		    association <-global.interact.ext2
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for second filter?}
		    helpkey EXTINC
		}
		parameter ext3 {
		    vpath global
		    association <-global.interact.ext3
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for third filter?}
		    helpkey EXTINC
		}
		parameter ext4 {
		    vpath global
		    association <-global.interact.ext4
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for fourth filter?}
		    helpkey EXTINC
		}
		parameter ext5 {
		    vpath global
		    association <-global.interact.ext5
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for fifth filter?}
		    helpkey EXTINC
		}
		parameter ext6 {
		    vpath global
		    association <-global.interact.ext6
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for sixth filter?}
		    helpkey EXTINC
		}
		parameter ext7 {
		    vpath global
		    association <-global.interact.ext7
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for seventh filter?}
		    helpkey EXTINC
		}
		parameter ext8 {
		    vpath global
		    association <-global.interact.ext8
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for eighth filter?}
		    helpkey EXTINC
		}
		parameter ext9 {
		    vpath global
		    association <-global.interact.ext9
		    type LITERAL
		    ppath dynamic
		    prompt {Extinction for ninth filter?}
		    helpkey EXTINC
		}
		#
		# Elements for 'colour'
		#
		parameter coption {
		    vpath global
		    association <-global.interact.coption
		    type LITERAL
		    ppath dynamic
		    prompt {Which action to perform?}
		    helpkey COPTION
		}
		parameter lutnum {
		    vpath global
		    association <-global.interact.lutnum
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of internal Look-Up Table to load?}
		    helpkey LUTNUM
		}
		parameter outlut {
		    vpath global
		    association <-global.interact.outlut
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    prompt {Name of file to store modified Look-Up Table?}
		    helpkey OUTLUT
		}
		parameter inlut {
		    vpath global
		    association <-global.interact.inlut
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    prompt {Name of file to read a Look-Up Table from?}
		    helpkey INLUT
		}
		parameter num_lut {
		    vpath global
		    association <-global.interact.num_lut
		    type _INTEGER
		    ppath dynamic
		    prompt {Internal number of table to put Look-Up Table?}
		    helpkey NUM_LUT
		}
		#
		#  Elements for Alter
		#
		parameter aloption {
		    vpath global
		    association <-global.interact.aloption
		    type LITERAL
		    ppath dynamic
		    prompt {Which action to perform?}
		    helpkey ALOPTION
		}
		parameter xcoeff {
		    vpath global
		    association <-global.interact.xcoeff
		    type _REAL
		    ppath dynamic
		    helpkey XCOEFF
		    prompt {X coefficents of transform for image}
		}
		parameter xmagnify {
		    vpath global
		    association <-global.interact.xmagnify
		    type _REAL
		    ppath dynamic
		    helpkey XMAGNIFY
		    prompt {Amount to magnify in X}
		}
		parameter ycoeff {
		    vpath global
		    association <-global.interact.ycoeff
		    type _REAL
		    ppath dynamic
		    helpkey YCOEFF
		    prompt {Y coefficents of transform for image}
		}
		parameter ymagnify {
		    vpath global
		    association <-global.interact.ymagnify
		    type _REAL
		    ppath dynamic
		    helpkey YMAGNIFY
		    prompt {Amount to magnify in Y}
		}
		parameter smethod {
		    vpath global
		    association <-global.interact.smethod
		    type LITERAL
		    ppath dynamic
		    prompt {Smooth method? (box:gauss:median)}
		    helpkey SMETHOD
		}
		parameter area {
		    vpath global
		    association <-global.interact.area
		    type _INTEGER
		    ppath dynamic
		    helpkey AREA
		    prompt {XY start and XY end (-1 to end)?}
		}
		parameter pixval {
		    vpath global
		    association <-global.interact.pixval
		    type _REAL
		    ppath dynamic
		    helpkey PIXVAL
		    prompt {XY and value?}
		}
		parameter box {
		    vpath global
		    association <-global.interact.box
		    type _INTEGER
		    ppath dynamic
		    helpkey BOX
		    prompt {Size of XY smoothing box?}
		}
		parameter gradius {
		    vpath global
		    association <-global.interact.gradius
		    type _REAL
		    ppath dynamic
		    helpkey GRADIUS
		    prompt {E-folding radius of Gaussian?}
		}
		parameter gbox {
		    vpath global
		    association <-global.interact.gbox
		    type _INTEGER
		    ppath dynamic
		    prompt {Size of XY box to smooth over?}
		    helpkey GBOX
		}
		parameter range {
		    vpath global
		    association <-global.interact.range
		    type _REAL
		    ppath dynamic
		    helpkey RANGE
		    prompt {Range of pixel values to set to Invalid}
		}
		parameter rotate {
		    vpath global
		    association <-global.interact.rotate
		    type _REAL
		    ppath dynamic
		    helpkey ROTATE
		    prompt {Rotate degrees anticlockwise about centre}
		}
		parameter bin {
		    vpath global
		    association <-global.interact.bin
		    type _INTEGER
		    ppath dynamic
		    helpkey BIN
		    prompt {XY size of box for binning of pixels}
		}
		parameter sample {
		    vpath global
		    association <-global.interact.sample
		    type LITERAL
		    ppath dynamic
		    helpkey SAMPLE
		    prompt {Sampling of binning box? (sample:highest:average)}
		}
		parameter check {
		    vpath global
		    association <-global.interact.check
		    type _LOGICAL
		    ppath dynamic
		    helpkey CHECK
		    prompt {If any box pixel invalid, output invalid? (yes:no)}
		}
		parameter outim {
		    vpath global
		    association <-global.interact.outim
		    type NDF
		    access WRITE
		    helpkey OUTIM
		    ppath dynamic default
		    default !
		    prompt {Output image}
		}
		parameter titleim {
		    vpath global
		    association <-global.interact.titleim
		    type LITERAL
		    ppath dynamic
		    helpkey TITLEIM
		    prompt {Title to add to output image}
		}
		parameter doit {
		    vpath global
		    association <-global.interact.doit
		    type _LOGICAL
		    ppath dynamic
		    prompt {Do second smooth (yes:no)?}
		    helpkey DOIT
		}
		parameter fraction {
		    vpath global
		    association <-global.interact.fraction
		    type _REAL
		    ppath dynamic
		    prompt {Fraction of smoothed image to subtract?}
		    helpkey FRACTION
		}
		parameter more {
		    vpath global
		    association <-global.interact.more
		    type _LOGICAL
		    ppath dynamic
		    prompt {Another go at subtracting smoothed image (yes:no)?}
		    helpkey MORE
		}
		parameter eqn {
		    vpath global
		    association <-global.interact.eqn
		    type LITERAL
		    ppath dynamic
		    helpkey EQN
		    prompt {Equation (Fortran style - names or IA,IB,etc)}
		}
		parameter inb {
		    vpath global
		    association <-global.interact.inb
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IB}
		}
		parameter inc {
		    vpath global
		    association <-global.interact.inc
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IC}
		}
		parameter ind {
		    vpath global
		    association <-global.interact.ind
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image ID}
		}
		parameter ine {
		    vpath global
		    association <-global.interact.ine
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IE}
		}
		parameter inf {
		    vpath global
		    association <-global.interact.inf
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IF}
		}
		parameter ing {
		    vpath global
		    association <-global.interact.ing
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IG}
		}
		parameter inh {
		    vpath global
		    association <-global.interact.inh
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IH}
		}
		parameter ini {
		    vpath global
		    association <-global.interact.ini
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image II}
		}
		parameter inj {
		    vpath global
		    association <-global.interact.inj
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IJ}
		}
		parameter ink {
		    vpath global
		    association <-global.interact.ink
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IK}
		}
		parameter inl {
		    vpath global
		    association <-global.interact.inl
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IL}
		}
		parameter inm {
		    vpath global
		    association <-global.interact.inm
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IM}
		}
		parameter inn {
		    vpath global
		    association <-global.interact.inn
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IN}
		}
		parameter ino {
		    vpath global
		    association <-global.interact.ino
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IO}
		}
		parameter inp {
		    vpath global
		    association <-global.interact.inp
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IP}
		}
		parameter inq {
		    vpath global
		    association <-global.interact.inq
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IQ}
		}
		parameter inr {
		    vpath global
		    association <-global.interact.inr
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IR}
		}
		parameter ins {
		    vpath global
		    association <-global.interact.ins
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IS}
		}
		parameter int {
		    vpath global
		    association <-global.interact.int
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IT}
		}
		parameter inu {
		    vpath global
		    association <-global.interact.inu
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IU}
		}
		parameter inv {
		    vpath global
		    association <-global.interact.inv
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IV}
		}
		parameter inw {
		    vpath global
		    association <-global.interact.inw
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IW}
		}
		parameter inx {
		    vpath global
		    association <-global.interact.inx
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IX}
		}
		parameter iny {
		    vpath global
		    association <-global.interact.iny
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IY}
		}
		parameter inz {
		    vpath global
		    association <-global.interact.inz
		    type NDF
		    access READ
		    helpkey INB
		    ppath dynamic default
		    default !
		    prompt {Input image IZ}
		}
		parameter a {
		    vpath global
		    association <-global.interact.a
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IA}
		}
		parameter b {
		    vpath global
		    association <-global.interact.b
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IB}
		}
		parameter c {
		    vpath global
		    association <-global.interact.c
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IC}
		}
		parameter d {
		    vpath global
		    association <-global.interact.d
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter ID}
		}
		parameter e {
		    vpath global
		    association <-global.interact.e
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IE}
		}
		parameter f {
		    vpath global
		    association <-global.interact.f
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IF}
		}
		parameter g {
		    vpath global
		    association <-global.interact.g
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IG}
		}
		parameter h {
		    vpath global
		    association <-global.interact.h
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IH}
		}
		parameter i {
		    vpath global
		    association <-global.interact.i
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter II}
		}
		parameter j {
		    vpath global
		    association <-global.interact.j
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IJ}
		}
		parameter k {
		    vpath global
		    association <-global.interact.k
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IK}
		}
		parameter l {
		    vpath global
		    association <-global.interact.l
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IL}
		}
		parameter m {
		    vpath global
		    association <-global.interact.m
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IM}
		}
		parameter n {
		    vpath global
		    association <-global.interact.n
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IN}
		}
		parameter o {
		    vpath global
		    association <-global.interact.o
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IO}
		}
		parameter p {
		    vpath global
		    association <-global.interact.p
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IP}
		}
		parameter q {
		    vpath global
		    association <-global.interact.q
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IQ}
		}
		parameter r {
		    vpath global
		    association <-global.interact.r
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IR}
		}
		parameter s {
		    vpath global
		    association <-global.interact.s
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IS}
		}
		parameter t {
		    vpath global
		    association <-global.interact.t
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IT}
		}
		parameter u {
		    vpath global
		    association <-global.interact.u
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IU}
		}
		parameter v {
		    vpath global
		    association <-global.interact.v
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IV}
		}
		parameter w {
		    vpath global
		    association <-global.interact.w
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IW}
		}
		parameter x {
		    vpath global
		    association <-global.interact.x
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IX}
		}
		parameter y {
		    vpath global
		    association <-global.interact.y
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IY}
		}
		parameter z {
		    vpath global
		    association <-global.interact.z
		    type _REAL
		    ppath dynamic
		    helpkey INVAR
		    prompt {Input parameter IZ}
		}
		parameter seed {
		    vpath global
		    association <-global.interact.seed
		    type _INTEGER
		    ppath dynamic
		    helpkey SEED
		    prompt {Random number generator seed number}
		}
		parameter nxy {
		    vpath global
		    association <-global.interact.nxy
		    type _INTEGER
		    ppath dynamic
		    helpkey NXY
		    prompt {X, Y size of image}
		}
	    }
	    #
	    #    MEASURE.IFL
	    #
	    action measure {
		helplib {$STARMAN_HELP_A MEASURE PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.measure.in
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input image}
		}
		parameter out {
		    vpath global
		    association <-global.measure.out
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Output table of magnitudes}
		}
		parameter instars {
		    vpath global
		    association <-global.measure.instars
		    type NDF
		    access READ
		    helpkey INSTARS
		    ppath dynamic default
		    default !
		    position 3
		    prompt {Table of star positions}
		}
		parameter profile {
		    vpath global
		    association <-global.measure.profile
		    type NDF
		    access READ
		    helpkey PROFILE
		    ppath dynamic default
		    default !
		    position 4
		    prompt {Star profile}
		}
		parameter outtit {
		    vpath global
		    association <-global.measure.outtit
		    type LITERAL
		    ppath dynamic
		    position 5
		    helpkey OUTTIT
		    prompt {Title to add to output table}
		}
		parameter extra {
		    vpath global
		    association <-global.measure.extra
		    type NDF
		    access READ
		    helpkey EXTRA
		    ppath dynamic default
		    default !
		    position 6
		    prompt {Extra input table of star positions}
		}
		parameter outim {
		    vpath global
		    association <-global.measure.outim
		    type NDF
		    access WRITE
		    helpkey OUTIM
		    ppath dynamic default
		    default !
		    position 7
		    prompt {Optional output cleaned image}
		}
		parameter oimtit {
		    vpath global
		    association <-global.measure.oimtit
		    type LITERAL
		    ppath dynamic
		    position 8
		    helpkey OIMTIT
		    prompt {Title to add to optional output image}
		}
		parameter before {
		    vpath global
		    association <-global.measure.before
		    type NDF
		    access READ
		    helpkey BEFORE
		    ppath dynamic default
		    default !
		    position 9
		    prompt {Input table of any previous MEASURE output}
		}
		parameter xcoeff {
		    vpath global
		    association <-global.measure.xcoeff
		    type _REAL
		    ppath dynamic
		    helpkey XCOEFF
		    prompt {Coeffs to make X posns from input positions}
		}
		parameter ycoeff {
		    vpath global
		    association <-global.measure.ycoeff
		    type _REAL
		    ppath dynamic
		    helpkey YCOEFF
		    prompt {Coeffs to make Y posns from input positions}
		}
		parameter domap {
		    vpath global
		    association <-global.measure.domap
		    type _LOGICAL
		    ppath dynamic
		    helpkey DOMAP
		    prompt {Use empirical map in star profile? (yes:no)}
		}
		parameter pyes {
		    vpath global
		    association <-global.measure.pyes
		    type _LOGICAL
		    ppath dynamic
		    helpkey PYES
		    prompt {Any profile in star table overrides input profile? (yes:no)}
		}
		parameter heights {
		    vpath global
		    association <-global.measure.heights
		    type _LOGICAL
		    ppath dynamic
		    helpkey HEIGHTS
		    prompt {Use trial heights in input table? (yes:no)}
		}
		parameter gain {
		    vpath global
		    association <-global.measure.gain
		    type _REAL
		    ppath dynamic
		    helpkey GAIN
		    prompt {Factor ((Poisson values)/(Pixel values))}
		}
		parameter noise {
		    vpath global
		    association <-global.measure.noise
		    type _REAL
		    ppath dynamic
		    helpkey NOISE
		    prompt {Extra Poisson noise per pixel}
		}
		parameter dodisp {
		    vpath global
		    association <-global.measure.dodisp
		    type _LOGICAL
		    ppath dynamic
		    helpkey DODISP
		    prompt {Display fitting process on screen? (yes:no)}
		}
		#
		parameter redocl {
		    vpath global
		    association <-global.measure.redocl
		    type _LOGICAL
		    vpath dynamic noprompt
		    helpkey REDOCL
		    prompt {Redo failed stars on cleaned image? (yes:no)}
		}
		parameter dotwos {
		    vpath global
		    association <-global.measure.dotwos
		    type _LOGICAL
		    vpath dynamic noprompt
		    helpkey DOTWOS
		    prompt {Try failed double stars as a single? (yes:no)}
		}
		parameter recycle {
		    vpath global
		    association <-global.measure.recycle
		    type _LOGICAL
		    vpath dynamic noprompt
		    helpkey RECYCLE
		    prompt {Do a second cycle of fits? (yes:no)}
		}
		parameter ofix1 {
		    vpath global
		    association <-global.measure.ofix1
		    type _LOGICAL
		    vpath dynamic noprompt
		    helpkey OFIX1
		    prompt {In fitting, fix distant stars? (yes:no)}
		}
		parameter ofix2 {
		    vpath global
		    association <-global.measure.ofix2
		    type _LOGICAL
		    vpath dynamic noprompt
		    helpkey OFIX2
		    prompt {In 2nd cycle fitting, fix distant stars? (yes:no)}
		}
		parameter radius {
		    vpath global
		    association <-global.measure.radius
		    type _REAL
		    vpath dynamic noprompt
		    helpkey RADIUS
		    prompt {For mag to volume conversion, radius to include}
		}
		parameter number {
		    vpath global current
		    association <-global.measure.number
		    type _INTEGER
		    vpath dynamic noprompt
		    helpkey NUMBER
		    prompt {Number of stars to fit, if not all}
		}
		parameter box {
		    vpath global
		    association <-global.measure.box
		    type _INTEGER
		    vpath dynamic noprompt
		    helpkey BOX
		    prompt {Fixed size of fitting box round a star? (0,0 to vary)}
		}
		parameter fix {
		    vpath global
		    association <-global.measure.fix
		    type _LOGICAL
		    vpath dynamic noprompt
		    helpkey FIX
		    prompt {Fix input positions? (yes:no)}
		}
		parameter inform {
		    vpath global
		    association <-global.measure.inform
		    type LITERAL
		    vpath dynamic noprompt
		    helpkey INFORM
		    prompt {Extra informing? (none:standard:more:full)}
		}
		parameter numbutt {
		    type _INTEGER
		    vpath global
		    #      vpath   'global,default'
		    association <-global.numbutt
		    ppath dynamic default
		    default 3
		    prompt {Number of buttons on mouse?}
		    helpkey NUMBUTT
		}
		parameter screen {
		    vpath global
		    association <-global.measure.screen
		    type LITERAL
		    ppath dynamic
		    helpkey SCREEN
		    prompt {Size of screen to open}
		}
		parameter imcomp {
		    vpath global
		    association <-global.measure.imcomp
		    type _INTEGER
		    vpath dynamic
		    helpkey IMCOMP
		    prompt {Compress image in X,Y by?}
		}
	    }
	    #
	    #      PROFILE.IFL
	    #
	    action profile {
		helplib {$STARMAN_HELP_A PROFILE PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.profile.in
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input image name}
		}
		parameter instars {
		    vpath global
		    association <-global.profile.instars
		    type NDF
		    access READ
		    helpkey INSTARS
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Input star list (posns,details) name}
		}
		parameter use {
		    vpath global
		    association <-global.profile.use
		    type LITERAL
		    ppath dynamic
		    helpkey USE
		    position 3
		    prompt {Do automatically or interactively (auto:inter)?}
		}
		parameter out {
		    vpath global
		    association <-global.profile.out
		    type NDF
		    access UPDATE
		    helpkey OUT
		    ppath dynamic default
		    default !
		    position 4
		    prompt {Output file for profile (an image)}
		}
		parameter incomps {
		    vpath global
		    association <-global.profile.incomps
		    type NDF
		    access READ
		    helpkey INCOMPS
		    ppath dynamic default
		    default !
		    position 5
		    prompt {Input companions to stars list name}
		}
		parameter inprof {
		    vpath global
		    association <-global.profile.inprof
		    type NDF
		    access READ
		    helpkey INPROF
		    ppath dynamic default
		    default !
		    position 6
		    prompt {Input profile (stored in an image) name}
		}
		parameter flip {
		    vpath global
		    association <-global.profile.flip
		    type _INTEGER
		    ppath dynamic
		    position 7
		    helpkey FLIP
		    prompt {Star number to flip angle (0=none;- = flip -ve)}
		}
		parameter reject {
		    vpath global
		    association <-global.profile.reject
		    type _INTEGER
		    ppath dynamic
		    position 8
		    helpkey REJECT
		    prompt {Star number to not use (0=none;- = accept)}
		}
		parameter fixangle {
		    vpath global
		    association <-global.profile.fixangle
		    type _LOGICAL
		    ppath dynamic
		    position 9
		    helpkey FIXANGLE
		    prompt {Fix angle of fit (yes:no)}
		}
		parameter angle {
		    vpath global
		    association <-global.profile.angle
		    type _REAL
		    ppath dynamic
		    position 10
		    helpkey ANGLE
		    prompt {Input angle of fit profile ellipse to X axis}
		}
		parameter fixprof {
		    vpath global
		    association <-global.profile.fixprof
		    type _LOGICAL
		    ppath dynamic
		    helpkey FIXPROF
		    prompt {Do not allow the profile parameter to change?}
		}
		parameter fittype {
		    vpath global
		    association <-global.profile.fittype
		    type LITERAL
		    ppath dynamic
		    helpkey FITTYPE
		    prompt {Start values, fix:float -- fit type?}
		}
		parameter ok {
		    vpath global
		    association <-global.profile.ok
		    type _LOGICAL
		    ppath dynamic
		    helpkey OK
		    prompt {Agree with question (yes:no) ?}
		}
		parameter option {
		    vpath global
		    association <-global.profile.option
		    type LITERAL
		    ppath dynamic
		    helpkey OPTION
		    prompt {Which option to perform?}
		}
		parameter roption {
		    vpath global
		    association <-global.profile.roption
		    type LITERAL
		    ppath dynamic
		    helpkey ROPTION
		    prompt {Which residual option to perform}
		}
		parameter moption {
		    vpath global
		    association <-global.profile.moption
		    type LITERAL
		    ppath dynamic
		    helpkey MOPTION
		    prompt {Which empirical map option to perform?}
		}
		parameter doption {
		    vpath global
		    association <-global.profile.doption
		    type LITERAL
		    ppath dynamic
		    helpkey DOPTION
		    prompt {Which fit option to perform?}
		}
		parameter woption {
		    vpath global
		    association <-global.profile.woption
		    type LITERAL
		    ppath dynamic
		    helpkey WOPTION
		    prompt {Which Wing option to perform?}
		}
		parameter value {
		    vpath global
		    association <-global.profile.value
		    type _REAL
		    ppath dynamic
		    helpkey VALUE
		    prompt {Profile parameter value?}
		}
		parameter scale {
		    vpath global
		    association <-global.profile.scale
		    type _REAL
		    ppath dynamic
		    helpkey SCALE
		    prompt {Multiplication factor for empirical map}
		}
		parameter number {
		    vpath global
		    association <-global.profile.number
		    type _INTEGER
		    ppath dynamic
		    helpkey NUMBER
		    prompt {Number of desired star ?}
		}
		parameter base {
		    vpath global
		    association <-global.profile.base
		    type _REAL
		    ppath dynamic
		    helpkey BASE
		    prompt {Base level under Gaussian wing?}
		}
		parameter height {
		    vpath global
		    association <-global.profile.height
		    type _REAL
		    ppath dynamic
		    helpkey HEIGHT
		    prompt {Fractional ht of wing w.r.t. main profile}
		}
		parameter postype {
		    vpath global
		    association <-global.profile.postype
		    type LITERAL
		    ppath dynamic
		    helpkey POSTYPE
		    prompt {Symbol to mark star posns? (spot:cross)}
		}
		parameter power {
		    vpath global
		    association <-global.profile.power
		    type _REAL
		    ppath dynamic
		    helpkey POWER
		    prompt {Gaussian Power parameter for wing}
		}
		parameter radius {
		    vpath global
		    association <-global.profile.radius
		    type _REAL
		    ppath dynamic
		    helpkey RADIUS
		    prompt {Gaussian radius of wing profile}
		}
		parameter fixem {
		    vpath global
		    association <-global.profile.fixem
		    type _LOGICAL
		    ppath dynamic
		    helpkey FIXEM
		    prompt {Fix the four wing parameters? (yes:no)}
		}
		parameter outstars {
		    vpath global
		    association <-global.profile.outstars
		    type NDF
		    access UPDATE
		    helpkey OUTSTARS
		    ppath dynamic default
		    default !
		    prompt {Output file for details of fit stars}
		}
		parameter outcomps {
		    vpath global
		    association <-global.profile.outcomps
		    type NDF
		    access UPDATE
		    helpkey OUTCOMPS
		    ppath dynamic default
		    default !
		    prompt {Output file for details of companions to stars}
		}
		parameter title {
		    vpath global
		    association <-global.profile.title
		    type LITERAL
		    ppath dynamic
		    helpkey TITLE
		    prompt {Text to add as a title to file}
		}
		parameter xarea {
		    vpath global
		    association <-global.profile.xarea
		    type _INTEGER
		    ppath dynamic
		    helpkey XAREA
		    prompt {X limits of region to specify}
		}
		parameter yarea {
		    vpath global
		    association <-global.profile.yarea
		    type _INTEGER
		    ppath dynamic
		    helpkey YAREA
		    prompt {Y limits of region to specify}
		}
		parameter size {
		    vpath global
		    association <-global.profile.size
		    type _INTEGER
		    ppath dynamic
		    helpkey SIZE
		    prompt {XY Lengths of sides of box}
		}
		parameter smsize {
		    vpath global
		    association <-global.profile.smsize
		    type _INTEGER
		    ppath dynamic
		    helpkey SMSIZE
		    prompt {XY size of smoothing box}
		}
		parameter outradial {
		    vpath global
		    association <-global.profile.outradial
		    type NDF
		    access UPDATE
		    helpkey OUTRADIAL
		    ppath dynamic default
		    default !
		    prompt {Name of file for radial plot of profile + fit}
		}
		parameter shiftxy {
		    vpath global
		    association <-global.profile.shiftxy
		    type _REAL
		    ppath dynamic
		    helpkey SHIFTXY
		    prompt {XY shift to apply to input stars and companions}
		}
		parameter posn {
		    vpath global
		    association <-global.profile.posn
		    type _REAL
		    ppath dynamic
		    helpkey POSN
		    prompt {XY position to fix star at}
		}
		parameter cwidth {
		    vpath global
		    association <-global.profile.cwidth
		    type _REAL
		    ppath dynamic
		    helpkey CWIDTH
		    prompt {Width of cross to use in painting star posns}
		}
		parameter usemap {
		    vpath global
		    association <-global.profile.usemap
		    type _LOGICAL
		    ppath dynamic
		    helpkey USEMAP
		    prompt {Use empirical profile map in fitting or display}
		}
		parameter volrad {
		    vpath global
		    association <-global.profile.volrad
		    type _REAL
		    ppath dynamic
		    helpkey VOLRAD
		    prompt {Radius out to which to carry volume calculation}
		}
		parameter damp {
		    vpath global
		    association <-global.profile.damp
		    type _REAL
		    ppath dynamic
		    helpkey DAMP
		    prompt {Damping of fitting (0=none;0.5=normal;1=lot)}
		}
		parameter fitlim {
		    vpath global
		    association <-global.profile.fitlim
		    type _REAL
		    ppath dynamic
		    helpkey FITLIM
		    prompt {Fractional change in parameters to stop fitting}
		}
		parameter htlim {
		    vpath global
		    association <-global.profile.htlim
		    type _REAL
		    ppath dynamic
		    helpkey HTLIM
		    prompt {Fractional change in star height to stop fitting}
		}
		parameter wdamp {
		    vpath global
		    association <-global.profile.wdamp
		    type _REAL
		    ppath dynamic
		    helpkey WDAMP
		    prompt {Damping factor for wing fit (0=none;0.5=normal;1=lot)}
		}
		parameter wfitlim {
		    vpath global
		    association <-global.profile.wfitlim
		    type _REAL
		    ppath dynamic
		    helpkey WFITLIM
		    prompt {Fraction change in wing parameters to stop fit}
		}
		parameter whtlim {
		    vpath global
		    association <-global.profile.whtlim
		    type _REAL
		    ppath dynamic
		    helpkey WHTLIM
		    prompt {Fraction change in wing height ratio to stop fit}
		}
		parameter wfitok {
		    vpath global
		    association <-global.profile.wfitok
		    type _LOGICAL
		    ppath dynamic
		    helpkey WFITOK
		    prompt {Have stars been fitted with a fixed profile (yes:no) ?}
		}
		parameter screen {
		    vpath global
		    association <-global.profile.screen
		    type _INTEGER
		    ppath dynamic
		    helpkey SCREEN
		    prompt {XY size of window to open for display}
		}
		parameter numbutt {
		    type _INTEGER
		    vpath global current
		    association <-global.numbutt
		    ppath dynamic default
		    default 3
		    prompt {Number of buttons on mouse?}
		    helpkey NUMBUTT
		}
		parameter gtype {
		    vpath global
		    association <-global.profile.gtype
		    type LITERAL
		    ppath dynamic
		    helpkey GTYPE
		    prompt {GKS name of plot device ?}
		}
		parameter linecol {
		    vpath global
		    association <-global.linecol
		    type LITERAL
		    ppath dynamic
		    helpkey LINECOL
		    prompt {Colour of plot lines? (black:white)}
		}

	    }
	    #
	    # SIMPLEMAG.IFL
	    #
	    action simplemag {
		helplib {$STARMAN_HELP_A SIMPLEMAG PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.simplemag.in
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input image}
		}
		parameter instars {
		    vpath global
		    association <-global.simplemag.instars
		    type NDF
		    access READ
		    helpkey INSTARS
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Input table of star positions}
		}
		parameter out {
		    vpath global
		    association <-global.simplemag.out
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    default !
		    position 3
		    prompt {Output table of results}
		}
		parameter option {
		    vpath global
		    association <-global.simplemag.option
		    type LITERAL
		    ppath dynamic
		    position 4
		    helpkey OPTION
		    prompt {Type of photometry? (aperture:fitgauss:gauss)}
		}
		parameter title {
		    vpath global
		    association <-global.simplemag.title
		    type LITERAL
		    ppath dynamic
		    position 5
		    helpkey TITLE
		    prompt {Title to add to output table}
		}
		parameter typing {
		    vpath global
		    association <-global.simplemag.typing
		    type _LOGICAL
		    ppath dynamic
		    position 6
		    helpkey TYPING
		    prompt {Type out results as go along? (yes:no)}
		}
		parameter box {
		    vpath global
		    association <-global.simplemag.box
		    type _REAL
		    ppath dynamic
		    position 7
		    helpkey BOX
		    prompt {XY size of fitting box area}
		}
		#
		# Apermag
		#
		parameter apdia {
		    vpath global
		    association <-global.simplemag.apdia
		    type _REAL
		    ppath dynamic
		    position 8
		    helpkey APDIA
		    prompt {Diameter of star aperture}
		}
		parameter skydias {
		    vpath global
		    association <-global.simplemag.skydias
		    type _REAL
		    ppath dynamic
		    position 9
		    helpkey SKYDIAS
		    prompt {Inner and outer diameters of sky annulus}
		}
		parameter centre {
		    vpath global
		    association <-global.simplemag.centre
		    type LITERAL
		    ppath dynamic
		    position 10
		    helpkey CENTRE
		    prompt {Refine input star positions? (yes:no)}
		}
		parameter poisv {
		    vpath global
		    association <-global.simplemag.poisv
		    type _REAL
		    ppath dynamic
		    helpkey POISV
		    prompt {((Poisson equivalent)/(Pixel values)) factor}
		}
		parameter noise {
		    vpath global
		    association <-global.simplemag.noise
		    type _REAL
		    ppath dynamic
		    helpkey NOISE
		    prompt {Extra Poisson noise per pixel}
		}
		#
		# Gaumag
		#
		parameter parfix {
		    vpath global
		    association <-global.simplemag.parfix
		    type _LOGICAL
		    ppath dynamic
		    helpkey PARFIX
		    prompt {Fix Gaussian radii? (yes:no)}
		}
		parameter radii {
		    vpath global
		    association <-global.simplemag.radii
		    type _REAL
		    ppath dynamic
		    helpkey RADII
		    prompt {Star X,Y Gaussian radii}
		}
		#
		# Gaufit
		#
		parameter radlims {
		    vpath global
		    association <-global.simplemag.radlims
		    type _REAL
		    ppath dynamic
		    helpkey RADLIMS
		    prompt {Max,min radii that are plausible}
		}
		parameter dosum {
		    vpath global
		    association <-global.simplemag.dosum
		    type _LOGICAL
		    ppath dynamic
		    helpkey DOSUM
		    prompt {Do simple summing of pixels? (yes:no)}
		}
		parameter doint {
		    vpath global
		    association <-global.simplemag.doint
		    type _LOGICAL
		    ppath dynamic
		    helpkey DOINT
		    prompt {Do interpolated summing of pixels? (yes:no)}
		}
		parameter sumbox {
		    vpath global
		    association <-global.simplemag.sumbox
		    type _REAL
		    ppath dynamic
		    helpkey SUMBOX
		    prompt {X,Y size of box to make mean profile}
		}
		parameter out1im {
		    vpath global
		    association <-global.simplemag.out1im
		    type NDF
		    access WRITE
		    helpkey OUT1IM
		    ppath dynamic default
		    default !
		    prompt {Output image of simple profile residuals}
		}
		parameter out2im {
		    vpath global
		    association <-global.simplemag.out2im
		    type NDF
		    access WRITE
		    helpkey OUT2IM
		    ppath dynamic default
		    default !
		    prompt {Output image of interpolated profile residuals}
		}
		parameter out1tab {
		    vpath global
		    association <-global.simplemag.out1tab
		    type NDF
		    access WRITE
		    helpkey OUT1TAB
		    ppath dynamic default
		    default !
		    prompt {Output table of simple profile shape}
		}
		parameter out2tab {
		    vpath global
		    association <-global.simplemag.out2tab
		    type NDF
		    access WRITE
		    helpkey OUT2TAB
		    ppath dynamic default
		    default !
		    prompt {Output table of interpolated profile shape}
		}
		#
		# Output parameters
		#
		parameter rx1 {
		    type _REAL
		    vpath internal
		}
		parameter ry1 {
		    type _REAL
		    vpath internal
		}
		parameter rx2 {
		    type _REAL
		    vpath internal
		}
		parameter ry2 {
		    type _REAL
		    vpath internal
		}
		parameter rx3 {
		    type _REAL
		    vpath internal
		}
		parameter ry3 {
		    type _REAL
		    vpath internal
		}
	    }
	    #
	    #   SPRINKLE.IFL
	    #
	    action sprinkle {
		helplib {$STARMAN_HELP_A SPRINKLE PARAMETERS}
		parameter out {
		    vpath global
		    association <-global.sprinkle.out
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    default !
		    prompt {Output table of positions and heights}
		    position 1
		}
		parameter title {
		    vpath global
		    association <-global.sprinkle.title
		    type LITERAL
		    ppath dynamic
		    position 2
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
		parameter m1fact {
		    vpath global
		    association <-global.sprinkle.m1fact
		    type _REAL
		    ppath dynamic
		    prompt {1st Conversion from mags to heights}
		    position 3
		    helpkey M1FACT
		}
		parameter m2fact {
		    vpath global
		    association <-global.sprinkle.m2fact
		    type _REAL
		    ppath dynamic
		    position 4
		    prompt {2nd Conversion from mags to heights}
		    helpkey M2FACT
		}
		parameter doclust {
		    vpath global
		    association <-global.sprinkle.doclust
		    type _LOGICAL
		    ppath dynamic
		    position 5
		    prompt {Put a cluster in? (yes:no)}
		    helpkey DOCLUST
		}
		parameter cluster {
		    vpath global
		    association <-global.sprinkle.cluster
		    type NDF
		    access READ
		    helpkey CLUSTER
		    ppath dynamic default
		    default !
		    prompt {Table defining cluster CMD}
		    position 6
		}
		parameter cxyposn {
		    vpath global
		    association <-global.sprinkle.cxyposn
		    type _REAL
		    ppath dynamic
		    position 7
		    prompt {X,Y posn of cluster centre}
		    helpkey CXYPOSN
		}
		parameter cxrange {
		    vpath global
		    association <-global.sprinkle.cxrange
		    type _REAL
		    ppath dynamic
		    position 8
		    prompt {X range cluster stars drawn from}
		    helpkey CXRANGE
		}
		parameter cyrange {
		    vpath global
		    association <-global.sprinkle.cyrange
		    type _REAL
		    ppath dynamic
		    position 9
		    prompt {Y range cluster stars drawn from}
		    helpkey CYRANGE
		}
		parameter cmrange {
		    vpath global
		    association <-global.sprinkle.cmrange
		    type _REAL
		    ppath dynamic
		    position 10
		    prompt {Magnitude range cluster stars drawn from}
		    helpkey CMRANGE
		}
		parameter ccrange {
		    vpath global
		    association <-global.sprinkle.ccrange
		    type _REAL
		    ppath dynamic
		    prompt {Colour range cluster stars drawn from}
		    helpkey CCRANGE
		}
		parameter ceven {
		    vpath global
		    association <-global.sprinkle.ceven
		    type _LOGICAL
		    ppath dynamic
		    prompt {Cluster stars picked from even CMD? (yes:no)}
		    helpkey CEVEN
		}
		parameter cdismod {
		    vpath global
		    association <-global.sprinkle.cdismod
		    type _REAL
		    ppath dynamic
		    prompt {Distance modulus to cluster}
		    helpkey CDISMOD
		}
		parameter credden {
		    vpath global
		    association <-global.sprinkle.credden
		    type _REAL
		    ppath dynamic
		    prompt {Reddening for cluster}
		    helpkey CREDDEN
		}
		parameter cnumber {
		    vpath global
		    association <-global.sprinkle.cnumber
		    type _REAL
		    ppath dynamic
		    prompt {Number of cluster stars to insert}
		    helpkey CNUMBER
		}
		parameter radcore {
		    vpath global
		    association <-global.sprinkle.radcore
		    type _REAL
		    ppath dynamic
		    prompt {Core radius (King) of cluster}
		    helpkey RADCORE
		}
		parameter radtide {
		    vpath global
		    association <-global.sprinkle.radtide
		    type _REAL
		    ppath dynamic
		    prompt {Tidal radius (King) of cluster}
		    helpkey RADTIDE
		}
		parameter cseed {
		    vpath global
		    association <-global.sprinkle.cseed
		    type _INTEGER
		    ppath dynamic
		    prompt {Random number seed for cluster randomising}
		    helpkey CSEED
		}
		parameter log {
		    vpath global
		    association <-global.sprinkle.log
		    type LITERAL
		    vpath dynamic default
		    helpkey LOG
		    prompt {Output progress during sprinkling? (yes:no)}
		    default NO
		}
		parameter dofield {
		    vpath global
		    association <-global.sprinkle.dofield
		    type _LOGICAL
		    ppath dynamic
		    prompt {Add field stars? (yes:no)}
		    helpkey DOFIELD
		}
		parameter field {
		    vpath global
		    association <-global.sprinkle.field
		    type NDF
		    access READ
		    helpkey FIELD
		    prompt {Table defining CMD of field stars}
		    ppath dynamic default
		    default !
		}
		parameter fxrange {
		    vpath global
		    association <-global.sprinkle.fxrange
		    type _REAL
		    ppath dynamic
		    prompt {X range field stars drawn from}
		    helpkey FXRANGE
		}
		parameter fyrange {
		    vpath global
		    association <-global.sprinkle.fyrange
		    type _REAL
		    ppath dynamic
		    prompt {Y range field stars drawn from}
		    helpkey FYRANGE
		}
		parameter fmrange {
		    vpath global
		    association <-global.sprinkle.fmrange
		    type _REAL
		    ppath dynamic
		    prompt {Magnitude range field stars drawn from}
		    helpkey FMRANGE
		}
		parameter fcrange {
		    vpath global
		    association <-global.sprinkle.fcrange
		    type _REAL
		    ppath dynamic
		    prompt {Colour range field stars drawn from}
		    helpkey FCRANGE
		}
		parameter feven {
		    vpath global
		    association <-global.sprinkle.feven
		    type _LOGICAL
		    ppath dynamic
		    prompt {Field stars picked from even CMD? (yes:no)}
		    helpkey FEVEN
		}
		parameter fdismod {
		    vpath global
		    association <-global.sprinkle.fdismod
		    type _REAL
		    ppath dynamic
		    prompt {Distance modulus of field stars}
		    helpkey FDISMOD
		}
		parameter fredden {
		    vpath global
		    association <-global.sprinkle.fredden
		    type _REAL
		    ppath dynamic
		    prompt {Reddening of field stars}
		    helpkey FREDDEN
		}
		parameter fnumber {
		    vpath global
		    association <-global.sprinkle.fnumber
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of field stars to insert}
		    helpkey FNUMBER
		}
		parameter fseed {
		    vpath global
		    association <-global.sprinkle.fseed
		    type _INTEGER
		    ppath dynamic
		    prompt {Random number seed for field randomising}
		    helpkey FSEED
		}
	    }
	    #
	    #      STARFIND.IFL
	    #
	    action starfind {
		helplib {$STARMAN_HELP_A STARFIND PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.starfind.in
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    default !
		    prompt {Input image}
		    position 1
		}
		parameter radius {
		    vpath global
		    association <-global.starfind.radius
		    type _REAL
		    ppath dynamic
		    position 2
		    prompt {Approximate steller radius (HWHM)}
		    helpkey RADIUS
		}
		parameter ellipse {
		    vpath global
		    association <-global.starfind.ellipse
		    type _LOGICAL
		    ppath dynamic
		    position 3
		    prompt {Try to separate close pairs? (yes:no)}
		    helpkey ELLIPSE
		}
		parameter faint {
		    vpath global
		    association <-global.starfind.faint
		    type _LOGICAL
		    ppath dynamic
		    position 4
		    prompt {Look for faint stars in bright wings? (yes:no)}
		    helpkey FAINT
		}
		parameter smear {
		    vpath global
		    association <-global.starfind.smear
		    type _LOGICAL
		    ppath dynamic
		    position 5
		    prompt {See if image is trailed? (yes:no)}
		    helpkey SMEAR
		}
		parameter skytype {
		    vpath global
		    association <-global.starfind.skytype
		    type LITERAL
		    ppath dynamic
		    position 6
		    prompt {Method to define sky level? (local:mean:minimum)}
		    helpkey SKYTYPE
		}
		parameter xskybox {
		    vpath global
		    association <-global.starfind.xskybox
		    type _INTEGER
		    ppath dynamic
		    position 7
		    prompt {X size of local sky box}
		    helpkey XSKYBOX
		}
		parameter yskybox {
		    vpath global
		    association <-global.starfind.yskybox
		    type _INTEGER
		    ppath dynamic
		    position 8
		    prompt {Y size of local sky box}
		    helpkey YSKYBOX
		}
		parameter inform {
		    vpath global
		    association <-global.starfind.inform
		    type LITERAL
		    ppath dynamic
		    prompt {Information during finding (none:some:lots)}
		    position 9
		    helpkey INFORM
		}
		parameter plimit {
		    vpath global
		    association <-global.starfind.plimit
		    type _REAL
		    vpath current dynamic noprompt
		    prompt {Lower limit to probability of a chance find}
		    helpkey PLIMIT
		}
		parameter wlimit {
		    vpath global
		    association <-global.starfind.wlimit
		    type _REAL
		    vpath current dynamic noprompt
		    prompt {Lower limit to probability of a chance find for wings}
		    helpkey WLIMIT
		}
		parameter usave {
		    vpath global
		    association <-global.starfind.usave
		    type _LOGICAL
		    ppath dynamic
		    helpkey USAVE
		    prompt {Save U-test image? (yes:no)}
		}
		parameter outim {
		    vpath global
		    association <-global.starfind.outim
		    type NDF
		    access WRITE
		    helpkey OUTIM
		    ppath dynamic default
		    prompt {Output file for U-test image}
		}
		parameter out {
		    vpath global
		    association <-global.starfind.out
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    prompt {Output table of found stars}
		    default !
		}
		parameter title {
		    vpath global
		    association <-global.starfind.title
		    type LITERAL
		    ppath dynamic
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
		parameter maxnum {
		    vpath global
		    association <-global.starfind.maxnum
		    type _INTEGER
		    ppath dynamic
		    helpkey MAXNUM
		    prompt {Maximum number of stars allowed to be found}
		}
	    }
	    #
	    #   STARMANGRIPE.IFL
	    #
	    action starmangripe {


	    }
	    #
	    #  STARMANHELP.IFL
	    #
	    action starmanhelp {

		parameter topic {
		    position 1
		    vpath global
		    association <-global.starmanhelp.topic
		    type LITERAL
		    access READ
		    vpath DEFAULT
		    prompt {Help topic}
		    default {         }
		}

		parameter subtopic {
		    position 2
		    vpath global
		    association <-global.starmanhelp.subtopic
		    type LITERAL
		    access READ
		    vpath DEFAULT
		    prompt {Help subtopic}
		    default {         }
		}

		parameter subsubtopic {
		    position 3
		    vpath global
		    association <-global.starmanhelp.subsubtopic
		    type LITERAL
		    access READ
		    vpath DEFAULT
		    prompt {Help subsubtopic}
		    default {         }
		}

		parameter subsubsubtopic {
		    position 4
		    vpath global
		    association <-global.starmanhelp.subsubsubtopic
		    type LITERAL
		    access READ
		    vpath DEFAULT
		    prompt {Help subsubsubtopic}
		    default {         }
		}

	    }
	    #
	}


	#
	#   STARMAN3_MON.IFL
	#
	executable starman3_mon {
	    #
	    # TBCALC.IFL
	    #
	    action tbcalc {
		helplib {$STARMAN_HELP_A TBCALC PARAMETERS}
		parameter ina {
		    vpath global
		    association <-global.tbcalc.ina
		    type NDF
		    access READ
		    position 1
		    helpkey INA
		    prompt {Input table for symbol TA}
		    ppath dynamic default
		    default !
		}
		parameter inb {
		    vpath global
		    association <-global.tbcalc.inb
		    type NDF
		    access READ
		    position 2
		    helpkey INB
		    prompt {Input table for symbol TB}
		    ppath dynamic default
		    default !
		}
		parameter inc {
		    vpath global
		    association <-global.tbcalc.inc
		    type NDF
		    access READ
		    position 3
		    helpkey INB
		    prompt {Input table for symbol TC}
		    ppath dynamic default
		    default !
		}
		parameter ind {
		    vpath global
		    association <-global.tbcalc.ind
		    type NDF
		    access READ
		    position 4
		    helpkey INB
		    prompt {Input table for symbol TD}
		    ppath dynamic default
		    default !
		}
		parameter ine {
		    vpath global
		    association <-global.tbcalc.ine
		    type NDF
		    access READ
		    position 5
		    helpkey INB
		    prompt {Input table for symbol TE}
		    ppath dynamic default
		    default !
		}
		parameter inf {
		    vpath global
		    association <-global.tbcalc.inf
		    type NDF
		    access READ
		    position 6
		    helpkey INB
		    prompt {Input table for symbol TF}
		    ppath dynamic default
		    default !
		}
		parameter ing {
		    vpath global
		    association <-global.tbcalc.ing
		    type NDF
		    access READ
		    position 7
		    prompt {Input table for symbol TG}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter inh {
		    vpath global
		    association <-global.tbcalc.inh
		    type NDF
		    access READ
		    position 8
		    prompt {Input table for symbol TH}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter ini {
		    vpath global
		    association <-global.tbcalc.ini
		    type NDF
		    access READ
		    position 9
		    prompt {Input table for symbol TI}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter inj {
		    vpath global
		    association <-global.tbcalc.inj
		    type NDF
		    access READ
		    position 10
		    prompt {Input table for symbol TJ}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter ink {
		    vpath global
		    association <-global.tbcalc.ink
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TK}
		    ppath dynamic default
		    default !
		}
		parameter inl {
		    vpath global
		    association <-global.tbcalc.inl
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TL}
		    ppath dynamic default
		    default !
		}
		parameter inm {
		    vpath global
		    association <-global.tbcalc.inm
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TM}
		    ppath dynamic default
		    default !
		}
		parameter inn {
		    vpath global
		    association <-global.tbcalc.inn
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TN}
		    ppath dynamic default
		    default !
		}
		parameter ino {
		    vpath global
		    association <-global.tbcalc.ino
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TO}
		    ppath dynamic default
		    default !
		}
		parameter inp {
		    vpath global
		    association <-global.tbcalc.inp
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TP}
		    ppath dynamic default
		    default !
		}
		parameter inq {
		    vpath global
		    association <-global.tbcalc.inq
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TQ}
		    ppath dynamic default
		    default !
		}
		parameter inr {
		    vpath global
		    association <-global.tbcalc.inr
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TR}
		    ppath dynamic default
		    default !
		}
		parameter ins {
		    vpath global
		    association <-global.tbcalc.ins
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TS}
		    ppath dynamic default
		    default !
		}
		parameter int {
		    vpath global
		    association <-global.tbcalc.int
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TT}
		    ppath dynamic default
		    default !
		}
		parameter inu {
		    vpath global
		    association <-global.tbcalc.inu
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TU}
		    ppath dynamic default
		    default !
		}
		parameter inv {
		    vpath global
		    association <-global.tbcalc.inv
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TV}
		    ppath dynamic default
		    default !
		}
		parameter inw {
		    vpath global
		    association <-global.tbcalc.inw
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TW}
		    ppath dynamic default
		    default !
		}
		parameter inx {
		    vpath global
		    association <-global.tbcalc.inx
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TX}
		    ppath dynamic default
		    default !
		}
		parameter iny {
		    vpath global
		    association <-global.tbcalc.iny
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TY}
		    ppath dynamic default
		    default !
		}
		parameter inz {
		    vpath global
		    association <-global.tbcalc.inz
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TZ}
		    ppath dynamic default
		    default !
		}
		#
		parameter out {
		    vpath global
		    association <-global.tbcalc.out
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table}
		    ppath dynamic default
		    default !
		}
		#
		parameter column1 {
		    vpath global
		    association <-global.tbcalc.column1
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 1? (0 for end)}
		    helpkey COLUMN
		}
		parameter column2 {
		    vpath global
		    association <-global.tbcalc.column2
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 2? (0 for end)}
		    helpkey COLUMN
		}
		parameter column3 {
		    vpath global
		    association <-global.tbcalc.column3
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 3? (0 for end)}
		    helpkey COLUMN
		}
		parameter column4 {
		    vpath global
		    association <-global.tbcalc.column4
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 4? (0 for end)}
		    helpkey COLUMN
		}
		parameter column5 {
		    vpath global
		    association <-global.tbcalc.column5
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 5? (0 for end)}
		    helpkey COLUMN
		}
		parameter column6 {
		    vpath global
		    association <-global.tbcalc.column6
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 6? (0 for end)}
		    helpkey COLUMN
		}
		parameter column7 {
		    vpath global
		    association <-global.tbcalc.column7
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 7? (0 for end)}
		    helpkey COLUMN
		}
		parameter column8 {
		    vpath global
		    association <-global.tbcalc.column8
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 8? (0 for end)}
		    helpkey COLUMN
		}
		parameter column9 {
		    vpath global
		    association <-global.tbcalc.column9
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 9? (0 for end)}
		    helpkey COLUMN
		}
		parameter column10 {
		    vpath global
		    association <-global.tbcalc.column10
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 10? (0 for end)}
		    helpkey COLUMN
		}
		parameter column11 {
		    vpath global
		    association <-global.tbcalc.column11
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 11? (0 for end)}
		    helpkey COLUMN
		}
		parameter column12 {
		    vpath global
		    association <-global.tbcalc.column12
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 12? (0 for end)}
		    helpkey COLUMN
		}
		parameter column13 {
		    vpath global
		    association <-global.tbcalc.column13
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 13? (0 for end)}
		    helpkey COLUMN
		}
		parameter column14 {
		    vpath global
		    association <-global.tbcalc.column14
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 14? (0 for end)}
		    helpkey COLUMN
		}
		parameter column15 {
		    vpath global
		    association <-global.tbcalc.column15
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 15? (0 for end)}
		    helpkey COLUMN
		}
		parameter column16 {
		    vpath global
		    association <-global.tbcalc.column16
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 16? (0 for end)}
		    helpkey COLUMN
		}
		parameter column17 {
		    vpath global
		    association <-global.tbcalc.column17
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 17? (0 for end)}
		    helpkey COLUMN
		}
		parameter column18 {
		    vpath global
		    association <-global.tbcalc.column18
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 18? (0 for end)}
		    helpkey COLUMN
		}
		parameter column19 {
		    vpath global
		    association <-global.tbcalc.column19
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 19? (0 for end)}
		    helpkey COLUMN
		}
		parameter column20 {
		    vpath global
		    association <-global.tbcalc.column20
		    type _INTEGER
		    ppath dynamic
		    prompt {Output table column for Equation number 20? (0 for end)}
		    helpkey COLUMN
		}
		#
		parameter eqn1 {
		    vpath global
		    association <-global.tbcalc.eqn1
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 1}
		    helpkey EQN
		}
		parameter eqn2 {
		    vpath global
		    association <-global.tbcalc.eqn2
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 2}
		    helpkey EQN
		}
		parameter eqn3 {
		    vpath global
		    association <-global.tbcalc.eqn3
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 3}
		    helpkey EQN
		}
		parameter eqn4 {
		    vpath global
		    association <-global.tbcalc.eqn4
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 4}
		    helpkey EQN
		}
		parameter eqn5 {
		    vpath global
		    association <-global.tbcalc.eqn5
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 5}
		    helpkey EQN
		}
		parameter eqn6 {
		    vpath global
		    association <-global.tbcalc.eqn6
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 6}
		    helpkey EQN
		}
		parameter eqn7 {
		    vpath global
		    association <-global.tbcalc.eqn7
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 7}
		    helpkey EQN
		}
		parameter eqn8 {
		    vpath global
		    association <-global.tbcalc.eqn8
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 8}
		    helpkey EQN
		}
		parameter eqn9 {
		    vpath global
		    association <-global.tbcalc.eqn9
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 9}
		    helpkey EQN
		}
		parameter eqn10 {
		    vpath global
		    association <-global.tbcalc.eqn10
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 10}
		    helpkey EQN
		}
		parameter eqn11 {
		    vpath global
		    association <-global.tbcalc.eqn11
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 11}
		    helpkey EQN
		}
		parameter eqn12 {
		    vpath global
		    association <-global.tbcalc.eqn12
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 12}
		    helpkey EQN
		}
		parameter eqn13 {
		    vpath global
		    association <-global.tbcalc.eqn13
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 13}
		    helpkey EQN
		}
		parameter eqn14 {
		    vpath global
		    association <-global.tbcalc.eqn14
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 14}
		    helpkey EQN
		}
		parameter eqn15 {
		    vpath global
		    association <-global.tbcalc.eqn15
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 15}
		    helpkey EQN
		}
		parameter eqn16 {
		    vpath global
		    association <-global.tbcalc.eqn16
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 16}
		    helpkey EQN
		}
		parameter eqn17 {
		    vpath global
		    association <-global.tbcalc.eqn17
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 17}
		    helpkey EQN
		}
		parameter eqn18 {
		    vpath global
		    association <-global.tbcalc.eqn18
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 18}
		    helpkey EQN
		}
		parameter eqn19 {
		    vpath global
		    association <-global.tbcalc.eqn19
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 19}
		    helpkey EQN
		}
		parameter eqn20 {
		    vpath global
		    association <-global.tbcalc.eqn20
		    type LITERAL
		    ppath dynamic
		    prompt {Equation 20}
		    helpkey EQN
		}
		#
		parameter a {
		    vpath global
		    association <-global.tbcalc.a
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol A}
		    helpkey A
		}
		parameter b {
		    vpath global
		    association <-global.tbcalc.b
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol B}
		    helpkey A
		}
		parameter c {
		    vpath global
		    association <-global.tbcalc.c
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol C}
		    helpkey A
		}
		parameter d {
		    vpath global
		    association <-global.tbcalc.d
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol D}
		    helpkey A
		}
		parameter e {
		    vpath global
		    association <-global.tbcalc.e
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol E}
		    helpkey A
		}
		parameter f {
		    vpath global
		    association <-global.tbcalc.f
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol F}
		    helpkey A
		}
		parameter g {
		    vpath global
		    association <-global.tbcalc.g
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol G}
		    helpkey A
		}
		parameter h {
		    vpath global
		    association <-global.tbcalc.h
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol H}
		    helpkey A
		}
		parameter i {
		    vpath global
		    association <-global.tbcalc.i
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol I}
		    helpkey A
		}
		parameter j {
		    vpath global
		    association <-global.tbcalc.j
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol J}
		    helpkey A
		}
		parameter k {
		    vpath global
		    association <-global.tbcalc.k
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol K}
		    helpkey A
		}
		parameter l {
		    vpath global
		    association <-global.tbcalc.l
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol L}
		    helpkey A
		}
		parameter m {
		    vpath global
		    association <-global.tbcalc.m
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol M}
		    helpkey A
		}
		parameter n {
		    vpath global
		    association <-global.tbcalc.n
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol N}
		    helpkey A
		}
		parameter o {
		    vpath global
		    association <-global.tbcalc.o
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol O}
		    helpkey A
		}
		parameter p {
		    vpath global
		    association <-global.tbcalc.p
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol P}
		    helpkey A
		}
		parameter q {
		    vpath global
		    association <-global.tbcalc.q
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol Q}
		    helpkey A
		}
		parameter r {
		    vpath global
		    association <-global.tbcalc.r
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol R}
		    helpkey A
		}
		parameter s {
		    vpath global
		    association <-global.tbcalc.s
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol S}
		    helpkey A
		}
		parameter t {
		    vpath global
		    association <-global.tbcalc.t
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol T}
		    helpkey A
		}
		parameter u {
		    vpath global
		    association <-global.tbcalc.u
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol U}
		    helpkey A
		}
		parameter v {
		    vpath global
		    association <-global.tbcalc.v
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol V}
		    helpkey A
		}
		parameter w {
		    vpath global
		    association <-global.tbcalc.w
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol W}
		    helpkey A
		}
		parameter x {
		    vpath global
		    association <-global.tbcalc.x
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol X}
		    helpkey A
		}
		parameter y {
		    vpath global
		    association <-global.tbcalc.y
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol Y}
		    helpkey A
		}
		parameter z {
		    vpath global
		    association <-global.tbcalc.z
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol Z}
		    helpkey A
		}
		#
		parameter seed {
		    vpath global
		    association <-global.tbcalc.seed
		    type _INTEGER
		    ppath dynamic
		    prompt {Random number seed}
		    helpkey SEED
		}
		parameter numcols {
		    vpath global
		    association <-global.tbcalc.numcols
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of columns in output table}
		    helpkey NUMCOLS
		}
		parameter numrows {
		    vpath global
		    association <-global.tbcalc.numrows
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of rows in output table}
		    helpkey NUMROWS
		}
		parameter use_template {
		    vpath global
		    association <-global.tbcalc.use_template
		    type LITERAL
		    ppath dynamic
		    prompt {Use a template table for size:vals:headers? (yes:no)}
		    helpkey USE_TEMPLATE
		}
		parameter template {
		    vpath global
		    association <-global.tbcalc.template
		    type LITERAL
		    ppath dynamic
		    prompt {Template table for size:vals:headers? (none:TA:TB:etc)}
		    helpkey TEMPLATE
		}
		parameter clear {
		    vpath global
		    association <-global.tbcalc.clear
		    type _LOGICAL
		    ppath dynamic
		    prompt {Clear values from template table? (yes:no)}
		    helpkey CLEAR
		}
		parameter title {
		    vpath global
		    association <-global.tbcalc.title
		    type LITERAL
		    ppath dynamic
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
		#
		parameter head1 {
		    vpath global
		    association <-global.tbcalc.head1
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 1}
		    helpkey HEAD
		}
		parameter head2 {
		    vpath global
		    association <-global.tbcalc.head2
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 2}
		    helpkey HEAD
		}
		parameter head3 {
		    vpath global
		    association <-global.tbcalc.head3
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 3}
		    helpkey HEAD
		}
		parameter head4 {
		    vpath global
		    association <-global.tbcalc.head4
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 4}
		    helpkey HEAD
		}
		parameter head5 {
		    vpath global
		    association <-global.tbcalc.head5
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 5}
		    helpkey HEAD
		}
		parameter head6 {
		    vpath global
		    association <-global.tbcalc.head6
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 6}
		    helpkey HEAD
		}
		parameter head7 {
		    vpath global
		    association <-global.tbcalc.head7
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 7}
		    helpkey HEAD
		}
		parameter head8 {
		    vpath global
		    association <-global.tbcalc.head8
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 8}
		    helpkey HEAD
		}
		parameter head9 {
		    vpath global
		    association <-global.tbcalc.head9
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 9}
		    helpkey HEAD
		}
		parameter head10 {
		    vpath global
		    association <-global.tbcalc.head10
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 10}
		    helpkey HEAD
		}
		parameter head11 {
		    vpath global
		    association <-global.tbcalc.head11
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 11}
		    helpkey HEAD
		}
		parameter head12 {
		    vpath global
		    association <-global.tbcalc.head12
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 12}
		    helpkey HEAD
		}
		parameter head13 {
		    vpath global
		    association <-global.tbcalc.head13
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 13}
		    helpkey HEAD
		}
		parameter head14 {
		    vpath global
		    association <-global.tbcalc.head14
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 14}
		    helpkey HEAD
		}
		parameter head15 {
		    vpath global
		    association <-global.tbcalc.head15
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 15}
		    helpkey HEAD
		}
		parameter head16 {
		    vpath global
		    association <-global.tbcalc.head16
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 16}
		    helpkey HEAD
		}
		parameter head17 {
		    vpath global
		    association <-global.tbcalc.head17
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 17}
		    helpkey HEAD
		}
		parameter head18 {
		    vpath global
		    association <-global.tbcalc.head18
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 18}
		    helpkey HEAD
		}
		parameter head19 {
		    vpath global
		    association <-global.tbcalc.head19
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 19}
		    helpkey HEAD
		}
		parameter head20 {
		    vpath global
		    association <-global.tbcalc.head20
		    type LITERAL
		    ppath dynamic
		    prompt {Header to give to column 20}
		    helpkey HEAD
		}
	    }
	    #
	    # TBCHART.IFL
	    #
	    action tbchart {
		helplib {$STARMAN_HELP_A TBCHART PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbchart.in
		    type NDF
		    access READ
		    ppath dynamic
		    position 1
		    prompt {Input table of stars}
		    helpkey IN
		}
		parameter option {
		    vpath global
		    association <-global.tbchart.option
		    type LITERAL
		    ppath dynamic
		    position 2
		    prompt {Which option to perform?}
		    helpkey OPTION
		}
		parameter devlimx {
		    vpath global
		    association <-global.tbchart.devlimx
		    type _INTEGER
		    ppath dynamic
		    position 3
		    prompt {Limits in X direction of the plot?}
		    helpkey DEVLIMX
		}
		parameter devlimy {
		    vpath global
		    association <-global.tbchart.devlimy
		    type _INTEGER
		    ppath dynamic
		    position 4
		    prompt {Limits in Y direction of the plot?}
		    helpkey DEVLIMY
		}
		parameter xrange {
		    vpath global
		    association <-global.tbchart.xrange
		    type _INTEGER
		    ppath dynamic
		    position 5
		    prompt {Range in X of stars to plot?}
		    helpkey XRANGE
		}
		parameter yrange {
		    vpath global
		    association <-global.tbchart.yrange
		    type _INTEGER
		    ppath dynamic
		    position 6
		    prompt {Range in Y of stars to plot?}
		    helpkey YRANGE
		}
		parameter mrange {
		    vpath global
		    association <-global.tbchart.mrange
		    type _REAL
		    ppath dynamic
		    position 7
		    prompt {Range in magnitude of stars to plot?}
		    helpkey MRANGE
		}
		parameter hrange {
		    vpath global
		    association <-global.tbchart.hrange
		    type _REAL
		    ppath dynamic
		    position 8
		    prompt {Range in height of stars to plot?}
		    helpkey HRANGE
		}
		parameter mmin {
		    vpath global
		    association <-global.tbchart.mmin
		    type _REAL
		    ppath dynamic
		    position 9
		    prompt {Magnitude of star with small circle}
		    helpkey MMIN
		}
		parameter hmin {
		    vpath global
		    association <-global.tbchart.hmin
		    type _REAL
		    ppath dynamic
		    prompt {Height of star with small circle}
		    helpkey HMIN
		}
		parameter mscale {
		    vpath global
		    association <-global.tbchart.mscale
		    type _REAL
		    ppath dynamic
		    prompt {Rate of size of circles increase with magnitude}
		    helpkey MSCALE
		}
		parameter lsize {
		    vpath global
		    association <-global.tbchart.lsize
		    type _REAL
		    ppath dynamic
		    prompt {Size of labels}
		    helpkey LSIZE
		}
		#
		parameter numbutt {
		    type _INTEGER
		    vpath global current
		    association <-global.numbutt
		    ppath dynamic default
		    default 3
		    prompt {Number of buttons on mouse?}
		    helpkey NUMBUTT
		}
		parameter gtype {
		    vpath global
		    association <-global.tbchart.gtype
		    type LITERAL
		    ppath dynamic
		    helpkey GTYPE
		    prompt {GKS name of plot device ?}
		}
		parameter linecol {
		    vpath global
		    association <-global.linecol
		    type LITERAL
		    ppath dynamic
		    helpkey LINECOL
		    prompt {Colour of plot lines? (black:white)}
		}
	    }
	    #
	    #  TBCOMPS.IFL
	    #
	    action tbcomps {
		helplib {$STARMAN_HELP_A TBCOMPS PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbcomps.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input table of positions}
		    helpkey IN
		}
		parameter out {
		    vpath global
		    association <-global.tbcomps.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Output table of positions selected}
		    helpkey OUT
		}
		parameter option {
		    vpath global
		    association <-global.tbcomps.option
		    type LITERAL
		    ppath dynamic
		    position 3
		    prompt {In or not in annuli round all stars? (in:not_in)}
		    helpkey OPTION
		}
		parameter limits {
		    vpath global
		    association <-global.tbcomps.limits
		    type _REAL
		    ppath dynamic
		    position 4
		    prompt {Inner and outer radii of annuli?}
		    helpkey LIMITS
		}
		parameter title {
		    vpath global
		    association <-global.tbcomps.title
		    type LITERAL
		    ppath dynamic
		    position 5
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
	    }
	    #
	    #  TBCUT.IFL
	    #
	    action tbcut {
		helplib {$STARMAN_HELP_A TBCUT PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbcut.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input table}
		    helpkey IN
		}
		parameter out {
		    vpath global
		    association <-global.tbcut.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Output table}
		    helpkey OUT
		}
		parameter title {
		    vpath global
		    association <-global.tbcut.title
		    type LITERAL
		    ppath dynamic
		    position 3
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
		parameter col_1 {
		    vpath global
		    association <-global.tbcut.col_1
		    type _INTEGER
		    ppath dynamic
		    position 4
		    prompt {1st range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_2 {
		    vpath global
		    association <-global.tbcut.col_2
		    type _INTEGER
		    ppath dynamic
		    position 5
		    prompt {2nd range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_3 {
		    vpath global
		    association <-global.tbcut.col_3
		    type _INTEGER
		    ppath dynamic
		    position 6
		    prompt {3rd range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_4 {
		    vpath global
		    association <-global.tbcut.col_4
		    type _INTEGER
		    ppath dynamic
		    position 7
		    prompt {4th range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_5 {
		    vpath global
		    association <-global.tbcut.col_5
		    type _INTEGER
		    ppath dynamic
		    position 8
		    prompt {5th range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_6 {
		    vpath global
		    association <-global.tbcut.col_6
		    type _INTEGER
		    ppath dynamic
		    position 9
		    prompt {6th range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_7 {
		    vpath global
		    association <-global.tbcut.col_7
		    type _INTEGER
		    ppath dynamic
		    position 10
		    prompt {7th range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_8 {
		    vpath global
		    association <-global.tbcut.col_8
		    type _INTEGER
		    ppath dynamic
		    prompt {8th range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_9 {
		    vpath global
		    association <-global.tbcut.col_9
		    type _INTEGER
		    ppath dynamic
		    prompt {9th range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter col_10 {
		    vpath global
		    association <-global.tbcut.col_10
		    type _INTEGER
		    ppath dynamic
		    prompt {10th range of columns to output? (0,0 to end)}
		    helpkey COL
		}
		parameter row_1 {
		    vpath global
		    association <-global.tbcut.row_1
		    type _INTEGER
		    ppath dynamic
		    prompt {1st range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_2 {
		    vpath global
		    association <-global.tbcut.row_2
		    type _INTEGER
		    ppath dynamic
		    prompt {2nd range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_3 {
		    vpath global
		    association <-global.tbcut.row_3
		    type _INTEGER
		    ppath dynamic
		    prompt {3rd range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_4 {
		    vpath global
		    association <-global.tbcut.row_4
		    type _INTEGER
		    ppath dynamic
		    prompt {4th range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_5 {
		    vpath global
		    association <-global.tbcut.row_5
		    type _INTEGER
		    ppath dynamic
		    prompt {5th range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_6 {
		    vpath global
		    association <-global.tbcut.row_6
		    type _INTEGER
		    ppath dynamic
		    prompt {6th range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_7 {
		    vpath global
		    association <-global.tbcut.row_7
		    type _INTEGER
		    ppath dynamic
		    prompt {7th range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_8 {
		    vpath global
		    association <-global.tbcut.row_8
		    type _INTEGER
		    ppath dynamic
		    prompt {8th range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_9 {
		    vpath global
		    association <-global.tbcut.row_9
		    type _INTEGER
		    ppath dynamic
		    prompt {9th range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
		parameter row_10 {
		    vpath global
		    association <-global.tbcut.row_10
		    type _INTEGER
		    ppath dynamic
		    prompt {10th range of rows to output? (0,0 to end)}
		    helpkey ROW
		}
	    }
	    #
	    #  TBDES.IFL
	    #
	    action tbdes {
		helplib {$STARMAN_HELP_A TBDES PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbdes.in
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input table}
		}
		parameter out {
		    vpath global
		    association <-global.tbdes.out
		    type NDF
		    access UPDATE
		    ppath dynamic default
		    default !
		    position 2
		    helpkey OUT
		    prompt {Output table}
		}
		parameter option {
		    vpath global
		    association <-global.tbdes.option
		    type LITERAL
		    ppath dynamic
		    position 3
		    helpkey OPTION
		    prompt {Which action? (copy:delete:list:write)}
		}
		parameter all_list {
		    vpath global
		    association <-global.tbdes.all_list
		    type _LOGICAL
		    ppath dynamic
		    position 4
		    helpkey ALL_LIST
		    prompt {List all descriptors? (yes:no)}
		}
		parameter name {
		    vpath global
		    association <-global.tbdes.name
		    type LITERAL
		    ppath dynamic
		    position 5
		    helpkey NAME
		    prompt {Name of descriptor}
		}
		parameter onlyone {
		    vpath global
		    association <-global.tbdes.onlyone
		    type _LOGICAL
		    ppath dynamic
		    position 6
		    helpkey ONLYONE
		    prompt {Do only one descriptor? (yes:no)}
		}
		parameter format {
		    vpath global
		    association <-global.tbdes.format
		    type LITERAL
		    ppath dynamic
		    position 7
		    helpkey FORMAT
		    prompt {Format of descriptor? (char:real:integer)}
		}
		parameter cvalue {
		    vpath global
		    association <-global.tbdes.cvalue
		    type LITERAL
		    ppath dynamic
		    position 8
		    helpkey CVALUE
		    prompt {Characters to write?}
		}
		parameter rvalue {
		    vpath global
		    association <-global.tbdes.rvalue
		    type _REAL
		    ppath dynamic
		    position 9
		    helpkey RVALUE
		    prompt {Real value to write?}
		}
		parameter ivalue {
		    vpath global
		    association <-global.tbdes.ivalue
		    type _INTEGER
		    ppath dynamic
		    helpkey IVALUE
		    position 10
		    prompt {Integer value to write?}
		}
		parameter over {
		    vpath global
		    association <-global.tbdes.over
		    type _LOGICAL
		    ppath dynamic
		    helpkey LITERAL
		    prompt {Overwrite existing ones with copied ones? (yes:no)}
		}
		parameter delete {
		    vpath global
		    association <-global.tbdes.delete
		    type _LOGICAL
		    ppath dynamic
		    helpkey DELETE
		    prompt {Delete existing ones if overwriting? (yes:no)}
		}
		parameter paging {
		    vpath global
		    association <-global.tbdes.paging
		    type _LOGICAL
		    ppath dynamic
		    helpkey PAGING
		    prompt {Interrupt output at page ends? (yes:no)}
		}
		parameter more {
		    vpath global
		    association <-global.tbdes.more
		    type _LOGICAL
		    ppath dynamic
		    helpkey MORE
		    prompt {Output more descriptors? (yes:no)}
		}
	    }
	    #
	    # TBJOIN.IFL
	    #
	    action tbjoin {
		helplib {$STARMAN_HELP_A TBJOIN PARAMETERS}
		parameter in1 {
		    vpath global
		    association <-global.tbjoin.in1
		    type NDF
		    access READ
		    position 1
		    helpkey IN
		    ppath dynamic default
		    prompt {1st input table}
		    default !
		}
		parameter in2 {
		    vpath global
		    association <-global.tbjoin.in2
		    type NDF
		    access READ
		    position 2
		    helpkey IN
		    ppath dynamic default
		    prompt {2nd input table}
		    default !
		}
		parameter in3 {
		    vpath global
		    association <-global.tbjoin.in3
		    type NDF
		    access READ
		    position 3
		    helpkey IN
		    ppath dynamic default
		    prompt {3rd input table}
		    default !
		}
		parameter in4 {
		    vpath global
		    association <-global.tbjoin.in4
		    type NDF
		    access READ
		    position 4
		    helpkey IN
		    ppath dynamic default
		    prompt {4th input table}
		    default !
		}
		parameter in5 {
		    vpath global
		    association <-global.tbjoin.in5
		    type NDF
		    access READ
		    position 5
		    helpkey IN
		    ppath dynamic default
		    prompt {5th input table}
		    default !
		}
		parameter in6 {
		    vpath global
		    association <-global.tbjoin.in6
		    type NDF
		    access READ
		    position 6
		    helpkey IN
		    ppath dynamic default
		    prompt {6th input table}
		    default !
		}
		parameter in7 {
		    vpath global
		    association <-global.tbjoin.in7
		    type NDF
		    access READ
		    position 7
		    helpkey IN
		    ppath dynamic default
		    prompt {7th input table}
		    default !
		}
		parameter in8 {
		    vpath global
		    association <-global.tbjoin.in8
		    type NDF
		    access READ
		    position 8
		    helpkey IN
		    ppath dynamic default
		    prompt {8th input table}
		    default !
		}
		parameter in9 {
		    vpath global
		    association <-global.tbjoin.in9
		    type NDF
		    access READ
		    position 9
		    helpkey IN
		    ppath dynamic default
		    prompt {9th input table}
		    default !
		}
		parameter out {
		    vpath global
		    association <-global.tbjoin.out
		    type NDF
		    access WRITE
		    position 10
		    helpkey OUT
		    ppath dynamic default
		    prompt {Output table}
		    default !
		}
		parameter coloff2 {
		    vpath global
		    association <-global.tbjoin.coloff2
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter coloff3 {
		    vpath global
		    association <-global.tbjoin.coloff3
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter coloff4 {
		    vpath global
		    association <-global.tbjoin.coloff4
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter coloff5 {
		    vpath global
		    association <-global.tbjoin.coloff5
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter coloff6 {
		    vpath global
		    association <-global.tbjoin.coloff6
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter coloff7 {
		    vpath global
		    association <-global.tbjoin.coloff7
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter coloff8 {
		    vpath global
		    association <-global.tbjoin.coloff8
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter coloff9 {
		    vpath global
		    association <-global.tbjoin.coloff9
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in columns from 1st input table}
		    helpkey COLOFF
		}
		parameter rowoff2 {
		    vpath global
		    association <-global.tbjoin.rowoff2
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter rowoff3 {
		    vpath global
		    association <-global.tbjoin.rowoff3
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter rowoff4 {
		    vpath global
		    association <-global.tbjoin.rowoff4
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter rowoff5 {
		    vpath global
		    association <-global.tbjoin.rowoff5
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter rowoff6 {
		    vpath global
		    association <-global.tbjoin.rowoff6
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter rowoff7 {
		    vpath global
		    association <-global.tbjoin.rowoff7
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter rowoff8 {
		    vpath global
		    association <-global.tbjoin.rowoff8
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter rowoff9 {
		    vpath global
		    association <-global.tbjoin.rowoff9
		    type _INTEGER
		    ppath dynamic
		    prompt {Offset in rows from 1st input table}
		    helpkey ROWOFF
		}
		parameter title {
		    vpath global
		    association <-global.tbjoin.title
		    type LITERAL
		    ppath dynamic
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
	    }
	    #
	    # TBKEY.IFL
	    #
	    action tbkey {
		helplib {$STARMAN_HELP_A TBKEY PARAMETERS}
		parameter out {
		    vpath global
		    association <-global.tbkey.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    prompt {Output table}
		    position 1
		    helpkey OUT
		}
		parameter data {
		    vpath global
		    association <-global.tbkey.data
		    type LITERAL
		    ppath dynamic
		    position 2
		    prompt {Row of entries to input}
		    helpkey DATA
		}
		parameter header {
		    vpath global
		    association <-global.tbkey.header
		    type LITERAL
		    ppath dynamic
		    position 3
		    prompt {Header to apply to column}
		    helpkey HEADER
		}
		parameter numcol {
		    vpath global
		    association <-global.tbkey.numcol
		    type _INTEGER
		    ppath dynamic
		    position 4
		    prompt {Number of output columns}
		    helpkey NUMCOL
		}
		parameter maxrow {
		    vpath global
		    association <-global.tbkey.maxrow
		    type _INTEGER
		    vpath dynamic
		    position 5
		    prompt {Maximum number of output rows allowed}
		    helpkey MAXROW
		}
		parameter title {
		    vpath global
		    association <-global.tbkey.title
		    type LITERAL
		    ppath dynamic
		    position 6
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
	    }
	    #
	    #  TBLIST.IFL
	    #
	    action tblist {
		helplib {$STARMAN_HELP_A TBLIST PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tblist.in
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    default !
		    prompt {Input table}
		    position 1
		}
		parameter out {
		    vpath global
		    association <-global.tblist.out
		    type LITERAL
		    ppath dynamic
		    position 2
		    prompt {Output text file}
		    helpkey OUT
		}
		parameter typing {
		    vpath global
		    association <-global.tblist.typing
		    type _LOGICAL
		    ppath dynamic
		    position 3
		    prompt {Type out results? (yes:no)}
		    helpkey TYPING
		}
		parameter outmode {
		    vpath global
		    association <-global.tblist.outmode
		    type LITERAL
		    ppath dynamic
		    position 4
		    prompt {Value output mode? (short:full:fixform:form:header)}
		    helpkey OUTMODE
		}
		parameter header {
		    vpath global
		    association <-global.tblist.header
		    type LITERAL
		    ppath dynamic
		    position 5
		    prompt {Column header output mode? (full:short:none)}
		    helpkey HEADER
		}
		parameter numname {
		    vpath global
		    association <-global.tblist.numname
		    type _INTEGER
		    ppath dynamic
		    position 6
		    prompt {Number of characters in names to output?}
		    helpkey NUMNAME
		}
		parameter ncol1 {
		    vpath global
		    association <-global.tblist.ncol1
		    type _INTEGER
		    ppath dynamic
		    position 7
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol2 {
		    vpath global
		    association <-global.tblist.ncol2
		    type _INTEGER
		    ppath dynamic
		    position 8
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol3 {
		    vpath global
		    association <-global.tblist.ncol3
		    type _INTEGER
		    ppath dynamic
		    position 9
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol4 {
		    vpath global
		    association <-global.tblist.ncol4
		    type _INTEGER
		    ppath dynamic
		    position 10
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol5 {
		    vpath global
		    association <-global.tblist.ncol5
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol6 {
		    vpath global
		    association <-global.tblist.ncol6
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol7 {
		    vpath global
		    association <-global.tblist.ncol7
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol8 {
		    vpath global
		    association <-global.tblist.ncol8
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol9 {
		    vpath global
		    association <-global.tblist.ncol9
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol10 {
		    vpath global
		    association <-global.tblist.ncol10
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol11 {
		    vpath global
		    association <-global.tblist.ncol11
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol12 {
		    vpath global
		    association <-global.tblist.ncol12
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol13 {
		    vpath global
		    association <-global.tblist.ncol13
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol14 {
		    vpath global
		    association <-global.tblist.ncol14
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter ncol15 {
		    vpath global
		    association <-global.tblist.ncol15
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of column to output? (0 to end)}
		    helpkey NCOL
		}
		parameter nbef1 {
		    vpath global
		    association <-global.tblist.nbef1
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef2 {
		    vpath global
		    association <-global.tblist.nbef2
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef3 {
		    vpath global
		    association <-global.tblist.nbef3
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef4 {
		    vpath global
		    association <-global.tblist.nbef4
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef5 {
		    vpath global
		    association <-global.tblist.nbef5
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef6 {
		    vpath global
		    association <-global.tblist.nbef6
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef7 {
		    vpath global
		    association <-global.tblist.nbef7
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef8 {
		    vpath global
		    association <-global.tblist.nbef8
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef9 {
		    vpath global
		    association <-global.tblist.nbef9
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef10 {
		    vpath global
		    association <-global.tblist.nbef10
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef11 {
		    vpath global
		    association <-global.tblist.nbef11
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef12 {
		    vpath global
		    association <-global.tblist.nbef12
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef13 {
		    vpath global
		    association <-global.tblist.nbef13
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef14 {
		    vpath global
		    association <-global.tblist.nbef14
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter nbef15 {
		    vpath global
		    association <-global.tblist.nbef15
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters before decimal point to output?}
		    helpkey NBEF
		}
		parameter naft1 {
		    vpath global
		    association <-global.tblist.naft1
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft2 {
		    vpath global
		    association <-global.tblist.naft2
		    type _INTEGER
		    ppath dynamic
		    helpkey NAFT
		    prompt {Number of characters after decimal point to output?}
		}
		parameter naft3 {
		    vpath global
		    association <-global.tblist.naft3
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft4 {
		    vpath global
		    association <-global.tblist.naft4
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft5 {
		    vpath global
		    association <-global.tblist.naft5
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft6 {
		    vpath global
		    association <-global.tblist.naft6
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft7 {
		    vpath global
		    association <-global.tblist.naft7
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft8 {
		    vpath global
		    association <-global.tblist.naft8
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft9 {
		    vpath global
		    association <-global.tblist.naft9
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft10 {
		    vpath global
		    association <-global.tblist.naft10
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft11 {
		    vpath global
		    association <-global.tblist.naft11
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft12 {
		    vpath global
		    association <-global.tblist.naft12
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft13 {
		    vpath global
		    association <-global.tblist.naft13
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft14 {
		    vpath global
		    association <-global.tblist.naft14
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
		parameter naft15 {
		    vpath global
		    association <-global.tblist.naft15
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of characters after decimal point to output?}
		    helpkey NAFT
		}
	    }
	    #
	    #  TBLOAD.IFL
	    #
	    action tbload {
		helplib {$STARMAN_HELP_A TBLOAD PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbload.in
		    type LITERAL
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input ascii file with a table}
		    helpkey IN
		}
		parameter out {
		    vpath global
		    association <-global.tbload.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Output table}
		    helpkey OUT
		}
		parameter header {
		    vpath global
		    association <-global.tbload.header
		    type _LOGICAL
		    ppath dynamic
		    position 3
		    prompt {Does input file have standard header? (yes:no)}
		    helpkey HEADER
		}
		parameter hignore {
		    vpath global
		    association <-global.tbload.hignore
		    type _INTEGER
		    ppath dynamic
		    position 4
		    prompt {Number of lines at start of file before data?}
		    helpkey HIGNORE
		}
		parameter names {
		    vpath global
		    association <-global.tbload.names
		    type LITERAL
		    ppath dynamic
		    position 5
		    prompt {Does input file have names? (yes:no)}
		    helpkey NAMES
		}
		parameter nlines {
		    vpath global
		    association <-global.tbload.nlines
		    type _INTEGER
		    ppath dynamic
		    position 6
		    prompt {Number of lines in input file per table row of data}
		    helpkey NLINES
		}
		parameter title {
		    vpath global
		    association <-global.tbload.title
		    type LITERAL
		    ppath dynamic
		    position 7
		    prompt {Title to add to output table?}
		    helpkey TITLE
		}
		parameter head001 {
		    vpath global
		    association <-global.tbload.head001
		    type LITERAL
		    ppath dynamic
		    position 8
		    prompt {Header for column 1}
		    helpkey HEAD001
		}
		parameter head002 {
		    vpath global
		    association <-global.tbload.head002
		    type LITERAL
		    ppath dynamic
		    position 9
		    prompt {Header for column 2}
		    helpkey HEAD001
		}
		parameter head003 {
		    vpath global
		    association <-global.tbload.head003
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 3}
		    position 10
		    helpkey HEAD001
		}
		parameter head004 {
		    vpath global
		    association <-global.tbload.head004
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 4}
		    helpkey HEAD001
		}
		parameter head005 {
		    vpath global
		    association <-global.tbload.head005
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 5}
		    helpkey HEAD001
		}
		parameter head006 {
		    vpath global
		    association <-global.tbload.head006
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 6}
		    helpkey HEAD001
		}
		parameter head007 {
		    vpath global
		    association <-global.tbload.head007
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 7}
		    helpkey HEAD001
		}
		parameter head008 {
		    vpath global
		    association <-global.tbload.head008
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 8}
		    helpkey HEAD001
		}
		parameter head009 {
		    vpath global
		    association <-global.tbload.head009
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 9}
		    helpkey HEAD001
		}
		parameter head010 {
		    vpath global
		    association <-global.tbload.head010
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 10}
		    helpkey HEAD001
		}
		parameter head011 {
		    vpath global
		    association <-global.tbload.head011
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 11}
		    helpkey HEAD001
		}
		parameter head012 {
		    vpath global
		    association <-global.tbload.head012
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 12}
		    helpkey HEAD001
		}
		parameter head013 {
		    vpath global
		    association <-global.tbload.head013
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 13}
		    helpkey HEAD001
		}
		parameter head014 {
		    vpath global
		    association <-global.tbload.head014
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 14}
		    helpkey HEAD001
		}
		parameter head015 {
		    vpath global
		    association <-global.tbload.head015
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 15}
		    helpkey HEAD001
		}
		parameter head016 {
		    vpath global
		    association <-global.tbload.head016
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 16}
		    helpkey HEAD001
		}
		parameter head017 {
		    vpath global
		    association <-global.tbload.head017
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 17}
		    helpkey HEAD001
		}
		parameter head018 {
		    vpath global
		    association <-global.tbload.head018
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 18}
		    helpkey HEAD001
		}
		parameter head019 {
		    vpath global
		    association <-global.tbload.head019
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 19}
		    helpkey HEAD001
		}
		parameter head020 {
		    vpath global
		    association <-global.tbload.head020
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column 20}
		    helpkey HEAD001
		}
		parameter head {
		    vpath global
		    association <-global.tbload.head
		    type LITERAL
		    ppath dynamic
		    prompt {Header for column}
		    helpkey HEAD
		}
	    }
	    #
	    #  TBMATCH.IFL
	    #
	    action tbmatch {
		helplib {$STARMAN_HELP_A TBMATCH PARAMETERS}
		parameter in1 {
		    vpath global
		    association <-global.tbmatch.in1
		    type NDF
		    access READ
		    position 1
		    helpkey IN1
		    prompt {Input table 1}
		    ppath dynamic default
		    default !
		}
		parameter in2 {
		    vpath global
		    association <-global.tbmatch.in2
		    type NDF
		    access READ
		    position 2
		    helpkey IN2
		    prompt {Input table 2}
		    ppath dynamic default
		    default !
		}
		parameter out1 {
		    vpath global
		    association <-global.tbmatch.out1
		    type NDF
		    access WRITE
		    position 3
		    helpkey OUT1
		    prompt {Output table 1}
		    ppath dynamic default
		    default !
		}
		parameter out2 {
		    vpath global
		    association <-global.tbmatch.out2
		    type NDF
		    access WRITE
		    position 4
		    helpkey OUT2
		    prompt {Output table 2}
		    ppath dynamic default
		    default !
		}
		parameter option {
		    vpath global
		    association <-global.tbmatch.option
		    type LITERAL
		    ppath dynamic
		    prompt {Action for stars of same name? (accept:reject)}
		    position 5
		    helpkey OPTION
		}
		parameter same {
		    vpath global
		    association <-global.tbmatch.same
		    type LITERAL
		    ppath dynamic
		    position 6
		    prompt {2nd table accepted stars into same order as 1st? (yes:no)}
		    helpkey SAME
		}
		parameter title1 {
		    vpath global
		    association <-global.tbmatch.title1
		    type LITERAL
		    ppath dynamic
		    position 7
		    prompt {Title to add to output table 2}
		    helpkey TITLE1
		}
		parameter title2 {
		    vpath global
		    association <-global.tbmatch.title2
		    type LITERAL
		    ppath dynamic
		    position 8
		    prompt {Title to add to output table 2}
		    helpkey TITLE2
		}
	    }
	    action tbnative {
		helplib {$STARMAN_HELP_A TBNATIVE PARAMETERS}
		parameter in {
		    type NDF
		    position 1
		    access READ
		    prompt {Input table}
		    ppath current default
		    default !
		    vpath prompt
		    helpkey IN
		}
		parameter out {
		    type NDF
		    position 2
		    access UPDATE
		    prompt {Output table}
		    ppath current default
		    default !
		    vpath prompt
		    helpkey OUT
		}
	    }
	    #
	    # TBNMATCH.IFL
	    #
	    action tbnmatch {
		helplib {$STARMAN_HELP_A TBMNMATCH PARAMETERS}
		parameter in1 {
		    vpath global
		    association <-global.tbnmatch.in1
		    type NDF
		    access READ
		    position 1
		    helpkey IN
		    prompt {Input table no 1}
		    ppath dynamic default
		    default !
		}
		parameter in2 {
		    vpath global
		    association <-global.tbnmatch.in2
		    type NDF
		    access READ
		    position 2
		    helpkey IN
		    prompt {Input table no 2 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in3 {
		    vpath global
		    association <-global.tbnmatch.in3
		    type NDF
		    access READ
		    position 3
		    helpkey IN
		    prompt {Input table no 3 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in4 {
		    vpath global
		    association <-global.tbnmatch.in4
		    type NDF
		    access READ
		    position 4
		    helpkey IN
		    prompt {Input table no 4 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in5 {
		    vpath global
		    association <-global.tbnmatch.in5
		    type NDF
		    access READ
		    position 5
		    helpkey IN
		    prompt {Input table no 5 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in6 {
		    vpath global
		    association <-global.tbnmatch.in6
		    type NDF
		    access READ
		    position 6
		    helpkey IN
		    prompt {Input table no 6 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in7 {
		    vpath global
		    association <-global.tbnmatch.in7
		    type NDF
		    access READ
		    position 7
		    helpkey IN
		    prompt {Input table no 7 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in8 {
		    vpath global
		    association <-global.tbnmatch.in8
		    type NDF
		    access READ
		    position 8
		    helpkey IN
		    prompt {Input table no 8 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in9 {
		    vpath global
		    association <-global.tbnmatch.in9
		    type NDF
		    access READ
		    position 9
		    helpkey IN
		    prompt {Input table no 9 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in10 {
		    vpath global
		    association <-global.tbnmatch.in10
		    type NDF
		    access READ
		    position 10
		    helpkey IN
		    prompt {Input table no 10 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in11 {
		    vpath global
		    association <-global.tbnmatch.in11
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    prompt {Input table no 11 (null to end)}
		    default !
		}
		parameter in12 {
		    vpath global
		    association <-global.tbnmatch.in12
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 12 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in13 {
		    vpath global
		    association <-global.tbnmatch.in13
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 13 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in14 {
		    vpath global
		    association <-global.tbnmatch.in14
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 14 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in15 {
		    vpath global
		    association <-global.tbnmatch.in15
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 15 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in16 {
		    vpath global
		    association <-global.tbnmatch.in16
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 16 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in17 {
		    vpath global
		    association <-global.tbnmatch.in17
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 17 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in18 {
		    vpath global
		    association <-global.tbnmatch.in18
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 18 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in19 {
		    vpath global
		    association <-global.tbnmatch.in19
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 19 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in20 {
		    vpath global
		    association <-global.tbnmatch.in20
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 20 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in21 {
		    vpath global
		    association <-global.tbnmatch.in21
		    type NDF
		    access READ
		    prompt {Input table no 21 (null to end)}
		    helpkey IN
		    ppath dynamic default
		    default !
		}
		parameter in22 {
		    vpath global
		    association <-global.tbnmatch.in22
		    type NDF
		    access READ
		    prompt {Input table no 22 (null to end)}
		    helpkey IN
		    ppath dynamic default
		    default !
		}
		parameter in23 {
		    vpath global
		    association <-global.tbnmatch.in23
		    type NDF
		    access READ
		    prompt {Input table no 23 (null to end)}
		    helpkey IN
		    ppath dynamic default
		    default !
		}
		parameter in24 {
		    vpath global
		    association <-global.tbnmatch.in24
		    type NDF
		    access READ
		    prompt {Input table no 24 (null to end)}
		    helpkey IN
		    ppath dynamic default
		    default !
		}
		parameter in25 {
		    vpath global
		    association <-global.tbnmatch.in25
		    type NDF
		    access READ
		    prompt {Input table no 25 (null to end)}
		    helpkey IN
		    ppath dynamic default
		    default !
		}
		parameter in26 {
		    vpath global
		    association <-global.tbnmatch.in26
		    type NDF
		    access READ
		    prompt {Input table no 26 (null to end)}
		    helpkey IN
		    ppath dynamic default
		    default !
		}
		parameter in27 {
		    vpath global
		    association <-global.tbnmatch.in27
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 27 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in28 {
		    vpath global
		    association <-global.tbnmatch.in28
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 28 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in29 {
		    vpath global
		    association <-global.tbnmatch.in29
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 29 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in30 {
		    vpath global
		    association <-global.tbnmatch.in30
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 30 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in31 {
		    vpath global
		    association <-global.tbnmatch.in31
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 31 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in32 {
		    vpath global
		    association <-global.tbnmatch.in32
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 32 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in33 {
		    vpath global
		    association <-global.tbnmatch.in33
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 33 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in34 {
		    vpath global
		    association <-global.tbnmatch.in34
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 34 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in35 {
		    vpath global
		    association <-global.tbnmatch.in35
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 35 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in36 {
		    vpath global
		    association <-global.tbnmatch.in36
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 36 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in37 {
		    vpath global
		    association <-global.tbnmatch.in37
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 37 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in38 {
		    vpath global
		    association <-global.tbnmatch.in38
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 38 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in39 {
		    vpath global
		    association <-global.tbnmatch.in39
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 39 (null to end)}
		    ppath dynamic default
		    default !
		}
		parameter in40 {
		    vpath global
		    association <-global.tbnmatch.in40
		    type NDF
		    access READ
		    helpkey IN
		    prompt {Input table no 40 (null to end)}
		    ppath dynamic default
		    default !
		}
		#
		parameter out1 {
		    vpath global
		    association <-global.tbnmatch.out1
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 1}
		    ppath dynamic default
		    default !
		}
		parameter out2 {
		    vpath global
		    association <-global.tbnmatch.out2
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 2}
		    ppath dynamic default
		    default !
		}
		parameter out3 {
		    vpath global
		    association <-global.tbnmatch.out3
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 3}
		    ppath dynamic default
		    default !
		}
		parameter out4 {
		    vpath global
		    association <-global.tbnmatch.out4
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 4}
		    ppath dynamic default
		    default !
		}
		parameter out5 {
		    vpath global
		    association <-global.tbnmatch.out5
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 5}
		    ppath dynamic default
		    default !
		}
		parameter out6 {
		    vpath global
		    association <-global.tbnmatch.out6
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 6}
		    ppath dynamic default
		    default !
		}
		parameter out7 {
		    vpath global
		    association <-global.tbnmatch.out7
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 7}
		    ppath dynamic default
		    default !
		}
		parameter out8 {
		    vpath global
		    association <-global.tbnmatch.out8
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 8}
		    ppath dynamic default
		    default !
		}
		parameter out9 {
		    vpath global
		    association <-global.tbnmatch.out9
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 9}
		    ppath dynamic default
		    default !
		}
		parameter out10 {
		    vpath global
		    association <-global.tbnmatch.out10
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 10}
		    ppath dynamic default
		    default !
		}
		parameter out11 {
		    vpath global
		    association <-global.tbnmatch.out11
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 11}
		    ppath dynamic default
		    default !
		}
		parameter out12 {
		    vpath global
		    association <-global.tbnmatch.out12
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 12}
		    ppath dynamic default
		    default !
		}
		parameter out13 {
		    vpath global
		    association <-global.tbnmatch.out13
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 13}
		    ppath dynamic default
		    default !
		}
		parameter out14 {
		    vpath global
		    association <-global.tbnmatch.out14
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 14}
		    ppath dynamic default
		    default !
		}
		parameter out15 {
		    vpath global
		    association <-global.tbnmatch.out15
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 15}
		    ppath dynamic default
		    default !
		}
		parameter out16 {
		    vpath global
		    association <-global.tbnmatch.out16
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 16}
		    ppath dynamic default
		    default !
		}
		parameter out17 {
		    vpath global
		    association <-global.tbnmatch.out17
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 17}
		    ppath dynamic default
		    default !
		}
		parameter out18 {
		    vpath global
		    association <-global.tbnmatch.out18
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 18}
		    ppath dynamic default
		    default !
		}
		parameter out19 {
		    vpath global
		    association <-global.tbnmatch.out19
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 19}
		    ppath dynamic default
		    default !
		}
		parameter out20 {
		    vpath global
		    association <-global.tbnmatch.out20
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 20}
		    ppath dynamic default
		    default !
		}
		parameter out21 {
		    vpath global
		    association <-global.tbnmatch.out21
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 21}
		    ppath dynamic default
		    default !
		}
		parameter out22 {
		    vpath global
		    association <-global.tbnmatch.out22
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 22}
		    ppath dynamic default
		    default !
		}
		parameter out23 {
		    vpath global
		    association <-global.tbnmatch.out23
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 23}
		    ppath dynamic default
		    default !
		}
		parameter out24 {
		    vpath global
		    association <-global.tbnmatch.out24
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 24}
		    ppath dynamic default
		    default !
		}
		parameter out25 {
		    vpath global
		    association <-global.tbnmatch.out25
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 25}
		    ppath dynamic default
		    default !
		}
		parameter out26 {
		    vpath global
		    association <-global.tbnmatch.out26
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 26}
		    ppath dynamic default
		    default !
		}
		parameter out27 {
		    vpath global
		    association <-global.tbnmatch.out27
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 27}
		    ppath dynamic default
		    default !
		}
		parameter out28 {
		    vpath global
		    association <-global.tbnmatch.out28
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 28}
		    ppath dynamic default
		    default !
		}
		parameter out29 {
		    vpath global
		    association <-global.tbnmatch.out29
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 29}
		    ppath dynamic default
		    default !
		}
		parameter out30 {
		    vpath global
		    association <-global.tbnmatch.out30
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 30}
		    ppath dynamic default
		    default !
		}
		parameter out31 {
		    vpath global
		    association <-global.tbnmatch.out31
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 31}
		    ppath dynamic default
		    default !
		}
		parameter out32 {
		    vpath global
		    association <-global.tbnmatch.out32
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 32}
		    ppath dynamic default
		    default !
		}
		parameter out33 {
		    vpath global
		    association <-global.tbnmatch.out33
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 33}
		    ppath dynamic default
		    default !
		}
		parameter out34 {
		    vpath global
		    association <-global.tbnmatch.out34
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 34}
		    ppath dynamic default
		    default !
		}
		parameter out35 {
		    vpath global
		    association <-global.tbnmatch.out35
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 35}
		    ppath dynamic default
		    default !
		}
		parameter out36 {
		    vpath global
		    association <-global.tbnmatch.out36
		    type NDF
		    access WRITE
		    helpkey OUT
		    prompt {Output table no 36}
		    ppath dynamic default
		    default !
		}
		parameter out37 {
		    vpath global
		    association <-global.tbnmatch.out37
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    prompt {Output table no 37}
		    default !
		}
		parameter out38 {
		    vpath global
		    association <-global.tbnmatch.out38
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    prompt {Output table no 38}
		    default !
		}
		parameter out39 {
		    vpath global
		    association <-global.tbnmatch.out39
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    prompt {Output table no 39}
		    default !
		}
		parameter out40 {
		    vpath global
		    association <-global.tbnmatch.out40
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    default !
		    prompt {Output table no 40}
		}
		#
		parameter title {
		    vpath global
		    association <-global.tbnmatch.title
		    type LITERAL
		    ppath dynamic
		    prompt {Title to add to output file}
		    helpkey TITLE
		}
		parameter flagcol {
		    vpath global
		    association <-global.tbnmatch.flagcol
		    type _INTEGER
		    ppath dynamic
		    prompt {Column to put flag in for missing row? (0=none)}
		    helpkey FLAGCOL
		}
		parameter flagval {
		    vpath global
		    association <-global.tbnmatch.flagval
		    type _REAL
		    ppath dynamic
		    prompt {Value for flag column}
		    helpkey FLAGVAL
		}
		parameter maximum {
		    vpath global
		    association <-global.tbnmatch.maximum
		    type LITERAL
		    ppath dynamic
		    prompt {Maximum number of rows allowed in output tables}
		    helpkey MAXIMUM
		}
	    }
	    #
	    #  TBPLOT.IFL
	    #
	    action tbplot {
		helplib {$STARMAN_HELP_A TBPLOT PARAMETERS}
		parameter in1 {
		    vpath global
		    association <-global.tbplot.in1
		    type NDF
		    access READ
		    position 1
		    helpkey IN1
		    prompt {Input table 1}
		    ppath dynamic default
		    default !
		}
		parameter ncol1 {
		    vpath global
		    association <-global.tbplot.ncol1
		    type _INTEGER
		    ppath dynamic
		    position 2
		    prompt {Column number for data in table 1}
		    helpkey NCOL1
		}
		parameter in2 {
		    vpath global
		    association <-global.tbplot.in2
		    type NDF
		    access READ
		    position 3
		    helpkey IN2
		    prompt {Input table 2}
		    ppath dynamic default
		    default !
		}
		parameter ncol2 {
		    vpath global
		    association <-global.tbplot.ncol2
		    type _INTEGER
		    ppath dynamic
		    position 4
		    prompt {Column number for data in table 2}
		    helpkey NCOL2
		}
		parameter option {
		    vpath global
		    association <-global.tbplot.option
		    type LITERAL
		    ppath dynamic
		    prompt {Action to take?}
		    position 5
		    helpkey OPTION
		}
		parameter hrange {
		    vpath global
		    association <-global.tbplot.hrange
		    type _REAL
		    ppath dynamic
		    position 6
		    prompt {Range of values to use for histogram}
		    helpkey HRANGE
		}
		parameter nbin {
		    vpath global
		    association <-global.tbplot.nbin
		    type _INTEGER
		    ppath dynamic
		    position 7
		    prompt {Number of bins in histogram}
		    helpkey NBIN
		}
		parameter use {
		    vpath global
		    association <-global.tbplot.use
		    type LITERAL
		    ppath dynamic
		    position 8
		    prompt {Automatic/panel/keyboard interaction (auto:panel:key)?}
		    helpkey USE
		}
		parameter atype {
		    vpath global
		    association <-global.tbplot.atype
		    type LITERAL
		    ppath dynamic
		    position 9
		    prompt {Plot type (points:line:hist:disp:cont)?}
		    helpkey ATYPE
		}
		parameter lstyle {
		    vpath global
		    association <-global.tbplot.lstyle
		    type _INTEGER
		    ppath dynamic
		    prompt {Pgplot code for line type. (1-5)}
		    helpkey LSTYLE
		}
		parameter devlimy {
		    vpath global
		    association <-global.tbplot.devlimy
		    type _REAL
		    ppath dynamic
		    helpkey DEVLIMY
		    prompt {Plot limits in Y direction?}
		}
		parameter devlimx {
		    vpath global
		    association <-global.tbplot.devlimx
		    type _REAL
		    ppath dynamic
		    helpkey DEVLIMX
		    prompt {Plot limits in X direction?}
		}
		parameter aspect {
		    vpath global
		    association <-global.tbplot.aspect
		    type LITERAL
		    ppath dynamic
		    prompt {Plot axes equal scale (yes:no) ?}
		    helpkey ASPECT
		}
		parameter xrange {
		    vpath global
		    association <-global.tbplot.xrange
		    type _REAL
		    ppath dynamic
		    prompt {Range in X for which to plot points?}
		    helpkey XRANGE
		}
		parameter yrange {
		    vpath global
		    association <-global.tbplot.yrange
		    type _REAL
		    ppath dynamic
		    prompt {Range in Y for which to plot points?}
		    helpkey YRANGE
		}
		parameter symbol {
		    vpath global
		    association <-global.tbplot.symbol
		    type _INTEGER
		    ppath dynamic
		    helpkey SYMBOL
		    prompt {PGPLOT code number for type of symbol to plot?}
		}
		parameter im {
		    vpath global
		    association <-global.tbplot.im
		    type NDF
		    access READ
		    helpkey IM
		    prompt {Input image}
		    ppath dynamic default
		    default !
		}
		parameter imxrange {
		    vpath global
		    association <-global.tbplot.imxrange
		    type _REAL
		    ppath dynamic
		    prompt {X image range for contour?}
		    helpkey IMXRANGE
		}
		parameter imyrange {
		    vpath global
		    association <-global.tbplot.imyrange
		    type _REAL
		    ppath dynamic
		    prompt {Y image range for contour?}
		    helpkey IMYRANGE
		}
		parameter imoffset {
		    vpath global
		    association <-global.tbplot.imoffset
		    type _REAL
		    ppath dynamic
		    prompt {XY offset for image/contour plot?}
		    helpkey IMOFFSET
		}
		parameter vprange {
		    vpath global
		    association <-global.tbplot.vprange
		    type _REAL
		    ppath dynamic
		    prompt {Min and Max of values to plot?}
		    helpkey VPRANGE
		}
		parameter contour {
		    vpath global
		    association <-global.tbplot.contour
		    type _REAL
		    ppath dynamic
		    prompt {Start,end,step of contour levels?}
		    helpkey CONTOUR
		}
		parameter text {
		    vpath global
		    association <-global.tbplot.text
		    type LITERAL
		    ppath dynamic
		    prompt {Text to plot?}
		    helpkey TEXT
		}
		parameter position {
		    vpath global
		    association <-global.tbplot.position
		    type _REAL
		    ppath dynamic
		    prompt {Position to plot?}
		    helpkey POSITION
		}
		parameter xlabel {
		    vpath global
		    association <-global.tbplot.xlabel
		    type LITERAL
		    ppath dynamic
		    prompt {Label to plot on X axis?}
		    helpkey XLABEL
		}
		parameter ylabel {
		    vpath global
		    association <-global.tbplot.ylabel
		    type LITERAL
		    ppath dynamic
		    prompt {Label to plot on Y axis?}
		    helpkey YLABEL
		}
		#
		parameter gtype {
		    vpath global
		    association <-global.tbplot.gtype
		    type LITERAL
		    ppath dynamic
		    helpkey GTYPE
		    prompt {GKS Name of plot device}
		}
		parameter numbutt {
		    type _INTEGER
		    vpath global current
		    association <-global.numbutt
		    ppath dynamic default
		    default 3
		    prompt {Number of buttons on mouse?}
		    helpkey NUMBUTT
		}
		parameter linecol {
		    vpath global
		    association <-global.linecol
		    type LITERAL
		    ppath dynamic
		    helpkey LINECOL
		    prompt {Colour of plot lines? (black:white)}
		}
	    }
	    #
	    #  TBPMATCH.IFL
	    #
	    action tbpmatch {
		helplib {$STARMAN_HELP_A TBPMATCH PARAMETERS}
		parameter in1 {
		    vpath global
		    association <-global.tbpmatch.in1
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input table 1}
		    helpkey IN1
		}
		parameter in2 {
		    vpath global
		    association <-global.tbpmatch.in2
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Input table 2}
		    helpkey IN2
		}
		parameter out1 {
		    vpath global
		    association <-global.tbpmatch.out1
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 3
		    prompt {Output table 1}
		    helpkey OUT1
		}
		parameter out2 {
		    vpath global
		    association <-global.tbpmatch.out2
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 4
		    prompt {Output table 2}
		    helpkey OUT2
		}
		parameter mismatch {
		    vpath global
		    association <-global.tbpmatch.mismatch
		    type _REAL
		    ppath dynamic
		    position 5
		    prompt {Distance away allowed}
		    helpkey MISMATCH
		}
		parameter method {
		    vpath global
		    association <-global.tbpmatch.method
		    type LITERAL
		    ppath dynamic
		    position 6
		    prompt {Which one if more than one matches?}
		    helpkey METHOD
		}
		parameter numcol {
		    vpath global
		    association <-global.tbpmatch.numcol
		    type _INTEGER
		    ppath dynamic
		    position 7
		    prompt {Column in table 2 to use as selector?}
		    helpkey NUMCOL
		}
		parameter title1 {
		    vpath global
		    association <-global.tbpmatch.title1
		    type LITERAL
		    ppath dynamic
		    position 8
		    prompt {Title to add to output table 1}
		    helpkey TITLE1
		}
		parameter title2 {
		    vpath global
		    association <-global.tbpmatch.title2
		    type LITERAL
		    ppath dynamic
		    position 9
		    prompt {Title to add to output table 2}
		    helpkey TITLE2
		}
	    }
	    #
	    #  TBRENUM.IFL
	    #
	    action tbrenum {
		helplib {$STARMAN_HELP_A TBRENUM PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbrenum.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    helpkey IN
		    prompt {Input table}
		}
		parameter out {
		    vpath global
		    association <-global.tbrenum.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    helpkey OUT
		    prompt {Output table}
		}
		parameter title {
		    vpath global
		    association <-global.tbrenum.title
		    type LITERAL
		    ppath dynamic
		    position 3
		    helpkey TITLE
		    prompt {Title to add to output table}
		}
	    }
	    #
	}

	#
	#   STARMAN4_MON.IFL
	#
	executable starman4_mon {
	    #
	    #  TBSHEET.IFL
	    #
	    action tbsheet {
		helplib {$STARMAN_HELP_A TBSHEET PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbsheet.in
		    type NDF
		    access READ
		    position 1
		    helpkey IN
		    prompt {Input table}
		    ppath dynamic default
		    default !
		}
		parameter out {
		    vpath global
		    association <-global.tbsheet.out
		    type NDF
		    access WRITE
		    position 2
		    helpkey OUT
		    prompt {Output table}
		    ppath dynamic default
		    default !
		}
		parameter chnames {
		    vpath global
		    association <-global.tbsheet.chnames
		    type _INTEGER
		    ppath dynamic
		    position 3
		    prompt {Number of characters to show of names}
		    helpkey CHNAMES
		}
		parameter colnum {
		    vpath global
		    association <-global.tbsheet.colnum
		    type _INTEGER
		    ppath dynamic
		    position 4
		    prompt {Number of columns to display}
		    helpkey COLNUM
		}
		parameter size {
		    vpath global
		    association <-global.tbsheet.size
		    type _INTEGER
		    ppath dynamic
		    position 5
		    prompt {Number of columns and rows to be in table}
		    helpkey SIZE
		}
		parameter title {
		    vpath global
		    association <-global.tbsheet.title
		    type LITERAL
		    ppath dynamic
		    position 6
		    prompt {Title to add to output table}
		    helpkey TITLE
		}
		parameter command {
		    vpath global
		    association <-global.tbsheet.command
		    type _LOGICAL
		    ppath dynamic
		    position 7
		    prompt {Dummy command - use for exit or help. (yes:no)}
		    helpkey COMMAND
		}
		parameter more {
		    vpath global
		    association <-global.tbsheet.more
		    type _LOGICAL
		    ppath dynamic
		    position 8
		    prompt {More help lines out? (yes:no)}
		    helpkey MORE
		}
		parameter ok {
		    vpath global
		    association <-global.tbsheet.ok
		    type _LOGICAL
		    ppath dynamic
		    position 9
		    prompt {Assent to question? (yes:no)}
		    helpkey OK
		}
		parameter gtype {
		    vpath global
		    association <-global.tbsheet.gtype
		    type LITERAL
		    ppath dynamic
		    position 10
		    helpkey GTYPE
		    prompt {GKS name of plot device ?}
		}
		parameter linecol {
		    vpath global
		    association <-global.linecol
		    type LITERAL
		    ppath dynamic
		    helpkey LINECOL
		    prompt {Colour of plot lines? (black:white)}
		}
		parameter numcols {
		    vpath global
		    association <-global.tbsheet.numcols
		    type _INTEGER
		    ppath dynamic
		    prompt {Range of columns to delete}
		    helpkey NUMCOLS
		}
		parameter numrows {
		    vpath global
		    association <-global.tbsheet.numrows
		    type _INTEGER
		    ppath dynamic
		    prompt {Range of rows to delete}
		    helpkey NUMROWS
		}
		parameter limits {
		    vpath global
		    association <-global.tbsheet.limits
		    type _REAL
		    ppath dynamic
		    prompt {Limits of values for weeding}
		    helpkey LIMITS
		}
		parameter weedopt {
		    vpath global
		    association <-global.tbsheet.weedopt
		    type LITERAL
		    ppath dynamic
		    prompt {Action if within these limits? (accept:reject)}
		    helpkey WEEDOPT
		}
		parameter name {
		    vpath global
		    association <-global.tbsheet.name
		    type LITERAL
		    ppath dynamic
		    prompt {Name to insert for this row}
		    helpkey NAME
		}
		parameter header {
		    vpath global
		    association <-global.tbsheet.header
		    type LITERAL
		    ppath dynamic
		    prompt {Header to insert for this column}
		    helpkey HEADER
		}
		parameter value {
		    vpath global
		    association <-global.tbsheet.value
		    type _REAL
		    ppath dynamic
		    prompt {Number to insert in this position}
		    helpkey VALUE
		}
		parameter mono {
		    vpath global
		    association <-global.tbsheet.mono
		    type _LOGICAL
		    ppath dynamic
		    prompt {Is this a monochrome display? (yes:no)}
		    helpkey MONO
		}
		parameter colours {
		    vpath global
		    association <-global.tbsheet.colours
		    type _INTEGER
		    ppath dynamic
		    prompt {Codes for the colours for the display. (1-10)}
		    helpkey COLOURS
		}
		parameter data {
		    vpath global
		    association <-global.tbsheet.data
		    type LITERAL
		    ppath dynamic
		    prompt {Entries for row}
		    helpkey DATA
		}
		parameter position {
		    vpath global
		    association <-global.tbsheet.position
		    type _INTEGER
		    ppath dynamic
		    prompt {X,Y screen posn of t.l.h. of display}
		    helpkey POSITION
		}
		parameter cols {
		    vpath global
		    association <-global.tbsheet.cols
		    type _INTEGER
		    ppath dynamic
		    prompt {Two columns to use}
		    helpkey COLS
		}
		parameter ptype {
		    vpath global
		    association <-global.tbsheet.ptype
		    type LITERAL
		    ppath dynamic
		    prompt {Plot type? (points:line)}
		    helpkey PTYPE
		}
		parameter lstyle {
		    vpath global
		    association <-global.tbsheet.lstyle
		    type _INTEGER
		    ppath dynamic
		    prompt {Pgplot code for line type. (1-5)}
		    helpkey LSTYLE
		}
		parameter devlimy {
		    vpath global
		    association <-global.tbsheet.devlimy
		    type _REAL
		    ppath dynamic
		    helpkey DEVLIMY
		    prompt {Plot limits in Y direction?}
		}
		parameter devlimx {
		    vpath global
		    association <-global.tbsheet.devlimx
		    type _REAL
		    ppath dynamic
		    helpkey DEVLIMX
		    prompt {Plot limits in X direction?}
		}
		parameter xrange {
		    vpath global
		    association <-global.tbsheet.xrange
		    type _REAL
		    ppath dynamic
		    prompt {Range in X for which to plot points?}
		    helpkey XRANGE
		}
		parameter yrange {
		    vpath global
		    association <-global.tbsheet.yrange
		    type _REAL
		    ppath dynamic
		    prompt {Range in Y for which to plot points?}
		    helpkey YRANGE
		}
		parameter symbol {
		    vpath global
		    association <-global.tbsheet.symbol
		    type _INTEGER
		    ppath dynamic
		    helpkey SYMBOL
		    prompt {PGPLOT code number for type of symbol to plot?}
		}
		parameter aspect {
		    vpath global
		    association <-global.tbsheet.aspect
		    type _LOGICAL
		    ppath dynamic
		    prompt {Axes same scale? (yes:no)}
		    helpkey ASPECT
		}
		parameter hrange {
		    vpath global
		    association <-global.tbsheet.hrange
		    type _REAL
		    ppath dynamic
		    prompt {Range of values to use for histogram}
		    helpkey HRANGE
		}
		parameter nbin {
		    vpath global
		    association <-global.tbsheet.nbin
		    type _INTEGER
		    ppath dynamic
		    prompt {No of bins in histogram?}
		    helpkey NBIN
		}
		#
		# Calculation parameters
		#
		parameter inb {
		    vpath global
		    association <-global.tbsheet.inb
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TB}
		    ppath dynamic default
		    default !
		}
		parameter inc {
		    vpath global
		    association <-global.tbsheet.inc
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TC}
		    ppath dynamic default
		    default !
		}
		parameter ind {
		    vpath global
		    association <-global.tbsheet.ind
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TD}
		    ppath dynamic default
		    default !
		}
		parameter ine {
		    vpath global
		    association <-global.tbsheet.ine
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TE}
		    ppath dynamic default
		    default !
		}
		parameter inf {
		    vpath global
		    association <-global.tbsheet.inf
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TF}
		    ppath dynamic default
		    default !
		}
		parameter ing {
		    vpath global
		    association <-global.tbsheet.ing
		    type NDF
		    access READ
		    prompt {Input table for symbol TG}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter inh {
		    vpath global
		    association <-global.tbsheet.inh
		    type NDF
		    access READ
		    prompt {Input table for symbol TH}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter ini {
		    vpath global
		    association <-global.tbsheet.ini
		    type NDF
		    access READ
		    prompt {Input table for symbol TI}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter inj {
		    vpath global
		    association <-global.tbsheet.inj
		    type NDF
		    access READ
		    prompt {Input table for symbol TJ}
		    helpkey INB
		    ppath dynamic default
		    default !
		}
		parameter ink {
		    vpath global
		    association <-global.tbsheet.ink
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TK}
		    ppath dynamic default
		    default !
		}
		parameter inl {
		    vpath global
		    association <-global.tbsheet.inl
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TL}
		    ppath dynamic default
		    default !
		}
		parameter inm {
		    vpath global
		    association <-global.tbsheet.inm
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TM}
		    ppath dynamic default
		    default !
		}
		parameter inn {
		    vpath global
		    association <-global.tbsheet.inn
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TN}
		    ppath dynamic default
		    default !
		}
		parameter ino {
		    vpath global
		    association <-global.tbsheet.ino
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TO}
		    ppath dynamic default
		    default !
		}
		parameter inp {
		    vpath global
		    association <-global.tbsheet.inp
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TP}
		    ppath dynamic default
		    default !
		}
		parameter inq {
		    vpath global
		    association <-global.tbsheet.inq
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TQ}
		    ppath dynamic default
		    default !
		}
		parameter inr {
		    vpath global
		    association <-global.tbsheet.inr
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TR}
		    ppath dynamic default
		    default !
		}
		parameter ins {
		    vpath global
		    association <-global.tbsheet.ins
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TS}
		    ppath dynamic default
		    default !
		}
		parameter int {
		    vpath global
		    association <-global.tbsheet.int
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TT}
		    ppath dynamic default
		    default !
		}
		parameter inu {
		    vpath global
		    association <-global.tbsheet.inu
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TU}
		    ppath dynamic default
		    default !
		}
		parameter inv {
		    vpath global
		    association <-global.tbsheet.inv
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TV}
		    ppath dynamic default
		    default !
		}
		parameter inw {
		    vpath global
		    association <-global.tbsheet.inw
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TW}
		    ppath dynamic default
		    default !
		}
		parameter inx {
		    vpath global
		    association <-global.tbsheet.inx
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TX}
		    ppath dynamic default
		    default !
		}
		parameter iny {
		    vpath global
		    association <-global.tbsheet.iny
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TY}
		    ppath dynamic default
		    default !
		}
		parameter inz {
		    vpath global
		    association <-global.tbsheet.inz
		    type NDF
		    access READ
		    helpkey INB
		    prompt {Input table for symbol TZ}
		    ppath dynamic default
		    default !
		}
		#
		parameter equation {
		    vpath global
		    association <-global.tbsheet.equation
		    type LITERAL
		    ppath dynamic
		    prompt {Equation}
		    helpkey EQUATION
		}
		#
		parameter a {
		    vpath global
		    association <-global.tbsheet.a
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol A}
		    helpkey A
		}
		parameter b {
		    vpath global
		    association <-global.tbsheet.b
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol B}
		    helpkey A
		}
		parameter c {
		    vpath global
		    association <-global.tbsheet.c
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol C}
		    helpkey A
		}
		parameter d {
		    vpath global
		    association <-global.tbsheet.d
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol D}
		    helpkey A
		}
		parameter e {
		    vpath global
		    association <-global.tbsheet.e
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol E}
		    helpkey A
		}
		parameter f {
		    vpath global
		    association <-global.tbsheet.f
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol F}
		    helpkey A
		}
		parameter g {
		    vpath global
		    association <-global.tbsheet.g
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol G}
		    helpkey A
		}
		parameter h {
		    vpath global
		    association <-global.tbsheet.h
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol H}
		    helpkey A
		}
		parameter i {
		    vpath global
		    association <-global.tbsheet.i
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol I}
		    helpkey A
		}
		parameter j {
		    vpath global
		    association <-global.tbsheet.j
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol J}
		    helpkey A
		}
		parameter k {
		    vpath global
		    association <-global.tbsheet.k
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol K}
		    helpkey A
		}
		parameter l {
		    vpath global
		    association <-global.tbsheet.l
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol L}
		    helpkey A
		}
		parameter m {
		    vpath global
		    association <-global.tbsheet.m
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol M}
		    helpkey A
		}
		parameter n {
		    vpath global
		    association <-global.tbsheet.n
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol N}
		    helpkey A
		}
		parameter o {
		    vpath global
		    association <-global.tbsheet.o
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol O}
		    helpkey A
		}
		parameter p {
		    vpath global
		    association <-global.tbsheet.p
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol P}
		    helpkey A
		}
		parameter q {
		    vpath global
		    association <-global.tbsheet.q
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol Q}
		    helpkey A
		}
		parameter r {
		    vpath global
		    association <-global.tbsheet.r
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol R}
		    helpkey A
		}
		parameter s {
		    vpath global
		    association <-global.tbsheet.s
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol S}
		    helpkey A
		}
		parameter t {
		    vpath global
		    association <-global.tbsheet.t
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol T}
		    helpkey A
		}
		parameter u {
		    vpath global
		    association <-global.tbsheet.u
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol U}
		    helpkey A
		}
		parameter v {
		    vpath global
		    association <-global.tbsheet.v
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol V}
		    helpkey A
		}
		parameter w {
		    vpath global
		    association <-global.tbsheet.w
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol W}
		    helpkey A
		}
		parameter x {
		    vpath global
		    association <-global.tbsheet.x
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol X}
		    helpkey A
		}
		parameter y {
		    vpath global
		    association <-global.tbsheet.y
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol Y}
		    helpkey A
		}
		parameter z {
		    vpath global
		    association <-global.tbsheet.z
		    type _REAL
		    ppath dynamic
		    prompt {Value for variable with symbol Z}
		    helpkey A
		}
		#
		parameter seed {
		    vpath global
		    association <-global.tbsheet.seed
		    type _INTEGER
		    ppath dynamic
		    prompt {Random number seed}
		    helpkey SEED
		}
		#
	    }
	    #
	    #  TBSORT.IFL
	    #
	    action tbsort {
		helplib {$STARMAN_HELP_A TBSORT PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbsort.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    helpkey IN
		    prompt {Input table}
		}
		parameter out {
		    vpath global
		    association <-global.tbsort.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    helpkey OUT
		    prompt {Output table}
		}
		parameter option {
		    vpath global
		    association <-global.tbsort.option
		    type LITERAL
		    ppath dynamic
		    position 3
		    helpkey OPTION
		    prompt {Sort up or down? (ascending:descending)}
		}
		parameter numcol {
		    vpath global
		    association <-global.tbsort.numcol
		    type _INTEGER
		    ppath dynamic
		    position 4
		    helpkey NUMCOL
		    prompt {Number of column to sort on}
		}
		parameter title {
		    vpath global
		    association <-global.tbsort.title
		    type LITERAL
		    ppath dynamic
		    position 5
		    helpkey TITLE
		    prompt {Title to add to output table}
		}
	    }
	    #
	    # TBSTAT.IFL
	    #
	    action tbstat {
		helplib {$STARMAN_HELP_A TBSTAT PARAMETERS}
		parameter in1 {
		    vpath global
		    association <-global.tbstat.in1
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    helpkey IN1
		    prompt {Input table 1}
		}
		parameter in2 {
		    vpath global
		    association <-global.tbstat.in2
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 2
		    helpkey IN2
		    prompt {Input table 2 (optional)}
		}
		parameter ncol1 {
		    vpath global
		    association <-global.tbstat.ncol1
		    type _INTEGER
		    ppath dynamic
		    position 3
		    helpkey NCOL1
		    prompt {Column in table 1 to examine}
		}
		parameter ncol2 {
		    vpath global
		    association <-global.tbstat.ncol2
		    type _INTEGER
		    ppath dynamic
		    position 4
		    helpkey NCOL2
		    prompt {Column in table 2 to examine}
		}
	    }
	    #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	    #  TBTRAN_AUTO.IFL
	    #
	    #
	    action tbtran_auto {
		helplib {$STARMAN_HELP_A TBTRAN_AUTO PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbtran_auto.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input table}
		    helpkey IN
		}
		parameter out {
		    vpath global
		    association <-global.tbtran_auto.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Master table}
		    helpkey OUT
		}
		parameter master {
		    vpath global
		    association <-global.tbtran_auto.master
		    type NDF
		    access READ
		    default !
		    ppath dynamic default
		    position 3
		    prompt {Master table}
		    helpkey MASTER
		}
		parameter tol {
		    vpath global
		    association <-global.tbtran_auto.tol
		    type _REAL
		    ppath dynamic
		    position 4
		    prompt {Triangle match tolerance}
		    helpkey TOL
		}
		parameter ftol {
		    vpath global
		    association <-global.tbtran_auto.ftol
		    type _REAL
		    ppath dynamic
		    position 5
		    prompt {Fit alignment tolerance}
		    helpkey FTOL
		}
		parameter ntri {
		    vpath global
		    association <-global.tbtran_auto.ntri
		    type _INTEGER
		    ppath dynamic
		    position 6
		    prompt {No of similar triangles for a match}
		    helpkey NTRI
		}
		parameter totntri {
		    vpath global
		    association <-global.tbtran_auto.totntri
		    type _INTEGER
		    ppath dynamic
		    position 7
		    prompt {No of matched triangles in all}
		    helpkey TOTNTRI
		}
		parameter ms_mags {
		    vpath global
		    association <-global.tbtran_auto.ms_mags
		    type LITERAL
		    ppath dynamic
		    position 8
		    prompt {Master table type (mags:heights:none)?}
		    helpkey MS_MAGS
		}
		parameter in_mags {
		    vpath global
		    association <-global.tbtran_auto.in_mags
		    type LITERAL
		    ppath dynamic
		    position 9
		    prompt {Input table type (mags:heights:none)?}
		    helpkey IN_MAGS
		}
		parameter type {
		    vpath global
		    association <-global.tbtran_auto.type
		    type LITERAL
		    ppath dynamic
		    prompt {Full fit or XY shift (full:xyshift)?}
		    helpkey TYPE
		}
		parameter title {
		    vpath global
		    association <-global.tbtran_auto.title
		    type LITERAL
		    ppath dynamic
		    prompt {Title to add to image?}
		    helpkey TITLE
		}
		#
		# Output parameters
		#
		parameter xcoeff {
		    type _REAL
		    vpath internal
		}
		parameter ycoeff {
		    type _REAL
		    vpath internal
		}
	    }
	    #
	    #  TBTRAN_DO.IFL
	    #
	    action tbtran_do {
		helplib {$STARMAN_HELP_A TBTRAN_DO PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbtran_do.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    helpkey IN
		    prompt {Input table}
		}
		parameter out {
		    vpath global
		    association <-global.tbtran_do.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    helpkey OUT
		    prompt {Output table}
		}
		parameter title {
		    vpath global
		    association <-global.tbtran_do.title
		    type LITERAL
		    ppath dynamic
		    position 3
		    helpkey TITLE
		    prompt {Title to add to output table}
		}
		parameter xcoeff {
		    vpath global
		    association <-global.tbtran_do.xcoeff
		    type _REAL
		    ppath dynamic
		    position 4
		    helpkey XCOEFF
		    prompt {Coefficents for output X values}
		}
		parameter ycoeff {
		    vpath global
		    association <-global.tbtran_do.ycoeff
		    type _REAL
		    ppath dynamic
		    position 5
		    helpkey YCOEFF
		    prompt {Coefficents for output Y values}
		}
	    }
	    #
	    #  TBTRAN_LOAD.IFL
	    #
	    action tbtran_load {
		helplib {$STARMAN_HELP_A TBTRAN_LOAD PARAMETERS}
		parameter centre {
		    vpath global
		    association <-global.tbtran_load.centre
		    type _REAL
		    ppath dynamic
		    position 1
		    helpkey OLDCEN
		    prompt {XY centre in old system}
		}
		parameter magnify {
		    vpath global
		    association <-global.tbtran_load.magnify
		    type _REAL
		    ppath dynamic
		    position 2
		    helpkey MAGNIFY
		    prompt {Magnification of old system}
		}
		parameter rotate {
		    vpath global
		    association <-global.tbtran_load.rotate
		    type _REAL
		    ppath dynamic
		    position 3
		    helpkey ROTATE
		    prompt {Rotate degrees anticlockwise about old centre}
		}
		parameter shift {
		    vpath global
		    association <-global.tbtran_load.shift
		    type _REAL
		    ppath dynamic
		    position 4
		    helpkey SHIFT
		    prompt {XY shift to magnified,rotated frame}
		}
		#
		# Output parameters
		#
		parameter xcoeff {
		    type _REAL
		    vpath internal
		}
		parameter ycoeff {
		    type _REAL
		    vpath internal
		}
	    }
	    #
	    #  TBTRAN_MAKE.IFL
	    #
	    action tbtran_make {
		helplib {$STARMAN_HELP_A TBTRAN_MAKE PARAMETERS}
		parameter in1 {
		    vpath global
		    association <-global.tbtran_make.in1
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    helpkey IN1
		    prompt {Input table 1}
		}
		parameter in2 {
		    vpath global
		    association <-global.tbtran_make.in2
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 2
		    helpkey IN2
		    prompt {Input table 2}
		}
		parameter trtype {
		    vpath global
		    association <-global.tbtran_make.trtype
		    type LITERAL
		    ppath dynamic
		    position 3
		    helpkey TRTYPE
		    prompt {Type of transformation}
		}
		parameter siglim {
		    vpath global
		    association <-global.tbtran_make.siglim
		    type _REAL
		    ppath dynamic
		    position 4
		    helpkey SIGLIM
		    prompt {No of std devs allowed in fit}
		}
		parameter names {
		    vpath global
		    association <-global.tbtran_make.names
		    type _LOGICAL
		    ppath dynamic
		    position 5
		    helpkey NAMES
		    prompt {Match points with same names? (yes:no)}
		}
		#
		# Output parameters
		#
		parameter xcoeff {
		    type _REAL
		    vpath internal
		}
		parameter ycoeff {
		    type _REAL
		    vpath internal
		}
	    }
	    #
	    # TBVALUE.IFL
	    #
	    action tbvalue {
		helplib {$STARMAN_HELP_A TBVALUE PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbvalue.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    helpkey IN
		    prompt {Input table}
		}
		parameter usehead {
		    vpath global
		    association <-global.tbvalue.usehead
		    type LITERAL
		    ppath dynamic
		    position 2
		    helpkey USEHEAD
		    prompt {Get column wanted from header? (yes:no)}
		}
		parameter usename {
		    vpath global
		    association <-global.tbvalue.usename
		    type _LOGICAL
		    ppath dynamic
		    position 3
		    helpkey USENAME
		    prompt {Get row wanted from name? (yes:no)}
		}
		parameter header {
		    vpath global
		    association <-global.tbvalue.header
		    type LITERAL
		    ppath dynamic
		    position 4
		    helpkey HEADER
		    prompt {Header of wanted column}
		}
		parameter name {
		    vpath global
		    association <-global.tbvalue.name
		    type LITERAL
		    ppath dynamic
		    position 5
		    helpkey NAME
		    prompt {Name of wanted row}
		}
		parameter column {
		    vpath global
		    association <-global.tbvalue.column
		    type _INTEGER
		    ppath dynamic
		    position 6
		    helpkey COLUMN
		    prompt {Number of wanted column}
		}
		parameter row {
		    vpath global
		    association <-global.tbvalue.row
		    type _INTEGER
		    ppath dynamic
		    position 7
		    helpkey ROW
		    prompt {Number of wanted row}
		}
		#
		# Output parameters
		#
		parameter value {
		    type _REAL
		    vpath internal
		}
	    }
	    #
	    # TBWEED.IFL
	    #
	    action tbweed {
		helplib {$STARMAN_HELP_A TBWEED PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.tbweed.in
		    type NDF
		    access READ
		    ppath dynamic default
		    default !
		    position 1
		    helpkey IN
		    prompt {Input table}
		}
		parameter out {
		    vpath global
		    association <-global.tbweed.out
		    type NDF
		    access WRITE
		    ppath dynamic default
		    default !
		    position 2
		    helpkey OUT
		    prompt {Output table}
		}
		parameter title {
		    vpath global
		    association <-global.tbweed.title
		    type LITERAL
		    ppath dynamic
		    position 3
		    helpkey TITLE
		    prompt {Title to add to output table}
		}
		parameter option {
		    vpath global
		    association <-global.tbweed.option
		    type LITERAL
		    ppath dynamic
		    position 4
		    helpkey OPTION
		    prompt {Action for values between limits? (accept:reject)}
		}
		parameter ncol1 {
		    vpath global
		    association <-global.tbweed.ncol1
		    type _INTEGER
		    ppath dynamic
		    position 5
		    prompt {Number of 1st column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol2 {
		    vpath global
		    association <-global.tbweed.ncol2
		    type _INTEGER
		    ppath dynamic
		    position 6
		    prompt {Number of 2nd column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol3 {
		    vpath global
		    association <-global.tbweed.ncol3
		    type _INTEGER
		    ppath dynamic
		    position 7
		    prompt {Number of 3rd column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol4 {
		    vpath global
		    association <-global.tbweed.ncol4
		    type _INTEGER
		    ppath dynamic
		    position 8
		    prompt {Number of 4th column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol5 {
		    vpath global
		    association <-global.tbweed.ncol5
		    type _INTEGER
		    ppath dynamic
		    position 9
		    prompt {Number of 5th column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol6 {
		    vpath global
		    association <-global.tbweed.ncol6
		    type _INTEGER
		    ppath dynamic
		    position 10
		    prompt {Number of 6th column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol7 {
		    vpath global
		    association <-global.tbweed.ncol7
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of 7th column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol8 {
		    vpath global
		    association <-global.tbweed.ncol8
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of 8th column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol9 {
		    vpath global
		    association <-global.tbweed.ncol9
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of 9th column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter ncol10 {
		    vpath global
		    association <-global.tbweed.ncol10
		    type _INTEGER
		    ppath dynamic
		    prompt {Number of 10th column to weed on? (0=no more)}
		    helpkey NCOL
		}
		parameter lims1 {
		    vpath global
		    association <-global.tbweed.lims1
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 1st column weeding}
		}
		parameter lims2 {
		    vpath global
		    association <-global.tbweed.lims2
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 2nd column weeding}
		}
		parameter lims3 {
		    vpath global
		    association <-global.tbweed.lims3
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 3rd column weeding}
		}
		parameter lims4 {
		    vpath global
		    association <-global.tbweed.lims4
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 4th column weeding}
		}
		parameter lims5 {
		    vpath global
		    association <-global.tbweed.lims5
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 5th column weeding}
		}
		parameter lims6 {
		    vpath global
		    association <-global.tbweed.lims6
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 6th column weeding}
		}
		parameter lims7 {
		    vpath global
		    association <-global.tbweed.lims7
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 7th column weeding}
		}
		parameter lims8 {
		    vpath global
		    association <-global.tbweed.lims8
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 8th column weeding}
		}
		parameter lims9 {
		    vpath global
		    association <-global.tbweed.lims9
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 9th column weeding}
		}
		parameter lims10 {
		    vpath global
		    association <-global.tbweed.lims10
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower and upper limits for 10th column weeding}
		}
	    }
	    #
	    #  UNCCD.IFL
	    #
	    action unccd {
		helplib {$STARMAN_HELP_A UNCCD PARAMETERS}
		parameter in {
		    vpath global
		    association <-global.unccd.in
		    type NDF
		    access READ
		    helpkey IN
		    ppath dynamic default
		    default !
		    position 1
		    prompt {Input image}
		}
		parameter out {
		    vpath global
		    association <-global.unccd.out
		    type NDF
		    access WRITE
		    helpkey OUT
		    ppath dynamic default
		    default !
		    position 2
		    prompt {Output image}
		}
		parameter dtype {
		    vpath global
		    association <-global.unccd.dtype
		    type LITERAL
		    ppath dynamic
		    position 3
		    helpkey DTYPE
		    prompt {Input data type? (real:signed:unsign:badsigned)}
		}
		parameter outtype {
		    vpath global
		    association <-global.unccd.outtype
		    type LITERAL
		    ppath dynamic
		    position 4
		    helpkey OUTTYPE
		    prompt {Output data type - real/16-bit integer? (real:short)}
		}
		parameter narea {
		    vpath global
		    association <-global.unccd.narea
		    type _INTEGER
		    ppath dynamic
		    position 5
		    helpkey NAREA
		    prompt {Xstart/end:Ystart/end area to process}
		}
		parameter correct {
		    vpath global
		    association <-global.unccd.correct
		    type LITERAL
		    ppath dynamic
		    position 6
		    helpkey CORRECT
		    prompt {Correction mode to apply? (none:mode1)}
		}
		parameter bias {
		    vpath global
		    association <-global.unccd.bias
		    type _LOGICAL
		    ppath dynamic
		    position 7
		    helpkey BIAS
		    prompt {Calculate bias? (yes:no)}
		}
		parameter nbias {
		    vpath global
		    association <-global.unccd.nbias
		    type _INTEGER
		    ppath dynamic
		    position 8
		    helpkey NBIAS
		    prompt {Xstart/end:Ystart/end of bias area}
		}
		parameter biasbad {
		    vpath global
		    association <-global.unccd.biasbad
		    type NDF
		    access READ
		    ppath dynamic default
		    position 9
		    default !
		    helpkey BIASBAD
		    prompt {Table of bad bias areas}
		}
		parameter offset {
		    vpath global
		    association <-global.unccd.offset
		    type _REAL
		    ppath dynamic
		    helpkey OFFSET
		    prompt {XY offset of reference images to input}
		}
		parameter dolims {
		    vpath global
		    association <-global.unccd.dolims
		    type _LOGICAL
		    ppath dynamic
		    helpkey DOLIMS
		    prompt {Check on limits for input pixel values? (yes:no)}
		}
		parameter lims {
		    vpath global
		    association <-global.unccd.lims
		    type _REAL
		    ppath dynamic
		    helpkey LIMS
		    prompt {Lower:upper limits to input pixel values}
		}
		parameter norm {
		    vpath global
		    association <-global.unccd.norm
		    type LITERAL
		    ppath dynamic
		    helpkey NORM
		    prompt {Method of normalising output? (none:flux:sub:time)}
		}
		parameter nnorm {
		    vpath global
		    association <-global.unccd.nnorm
		    type _INTEGER
		    ppath dynamic
		    helpkey NNORM
		    prompt {Xstart/end:Ystart/end of normalising area}
		}
		parameter lin {
		    vpath global
		    association <-global.unccd.lin
		    type LITERAL
		    ppath dynamic
		    helpkey LIN
		    prompt {Method for linearising input? (none:mode1)}
		}
		parameter linf {
		    vpath global
		    association <-global.unccd.linf
		    type _REAL
		    ppath dynamic
		    helpkey LINF
		    prompt {Linearising factor}
		}
		parameter noise {
		    vpath global
		    association <-global.unccd.noise
		    type _REAL
		    ppath dynamic
		    helpkey NOISE
		    prompt {Extra Poisson noise per pixel}
		}
		parameter gain {
		    vpath global
		    association <-global.unccd.gain
		    type _REAL
		    ppath dynamic
		    helpkey GAIN
		    prompt {((Poisson values)/(pixel values)) factor}
		}
		parameter objname {
		    vpath global
		    association <-global.unccd.objname
		    type LITERAL
		    ppath dynamic
		    helpkey OBJNAME
		    prompt {Name of descriptor with object name}
		}
		parameter expname {
		    vpath global
		    association <-global.unccd.expname
		    type LITERAL
		    ppath dynamic
		    helpkey EXPNAME
		    prompt {Name of descriptor with exposure time}
		}
		parameter exptime {
		    vpath global
		    association <-global.unccd.exptime
		    type _REAL
		    ppath dynamic
		    helpkey EXPTIME
		    prompt {Exposure time}
		}
		parameter prefname {
		    vpath global
		    association <-global.unccd.prefname
		    type LITERAL
		    ppath dynamic
		    helpkey PREFNAME
		    prompt {Name of descriptor with preflash time}
		}
		parameter preftime {
		    vpath global
		    association <-global.unccd.preftime
		    type _REAL
		    ppath dynamic
		    helpkey PREFTIME
		    prompt {preflash time}
		}
		parameter tit {
		    vpath global
		    association <-global.unccd.tit
		    type LITERAL
		    ppath dynamic
		    helpkey TIT
		    prompt {Title to add to output image}
		}
		parameter scale {
		    vpath global
		    association <-global.unccd.scale
		    type _REAL
		    ppath dynamic
		    helpkey SCALE
		    prompt {Scale/zero to apply to output image}
		}
		parameter im_b {
		    vpath global
		    association <-global.unccd.im_b
		    type NDF
		    access READ
		    helpkey IM_B
		    ppath dynamic default
		    default !
		    prompt {Input bias image (optional)}
		}
		parameter im_p {
		    vpath global
		    association <-global.unccd.im_p
		    type NDF
		    access READ
		    helpkey IM_P
		    ppath dynamic default
		    default !
		    prompt {Input preflash image (optional)}
		}
		parameter im_d {
		    vpath global
		    association <-global.unccd.im_d
		    type NDF
		    access READ
		    helpkey IM_D
		    ppath dynamic default
		    default !
		    prompt {Input dark image (optional)}
		}
		parameter im_fl {
		    vpath global
		    association <-global.unccd.im_fl
		    type NDF
		    access READ
		    helpkey IM_FL
		    ppath dynamic default
		    default !
		    prompt {Input flat field image (optional)}
		}
		parameter im_fr {
		    vpath global
		    association <-global.unccd.im_fr
		    type NDF
		    access READ
		    helpkey IM_FR
		    ppath dynamic default
		    default !
		    prompt {Input fringe image (optional)}
		}
		parameter bad {
		    vpath global
		    association <-global.unccd.bad
		    type NDF
		    access READ
		    helpkey BAD
		    ppath dynamic default
		    default !
		    prompt {Input table of bad areas in input image}
		}
		#
		# Screen display
		#
		parameter disp {
		    vpath global
		    association <-global.unccd.disp
		    type _LOGICAL
		    ppath dynamic
		    helpkey DISP
		    prompt {Display result on screen? (yes:no)}
		}
		parameter ndisp {
		    vpath global
		    association <-global.unccd.ndisp
		    type _INTEGER
		    ppath dynamic
		    helpkey NDISP
		    prompt {Xstart/end:Ystart/end area to display}
		}
		parameter screen {
		    vpath global
		    association <-global.unccd.screen
		    type _INTEGER
		    vpath dynamic
		    helpkey SCREEN
		    prompt {XY size of window to open}
		}
		parameter imcomp {
		    vpath global
		    association <-global.unccd.imcomp
		    type _INTEGER
		    vpath dynamic
		    helpkey IMCOMP
		    prompt {Compress image in X,Y by?}
		}
		parameter numbutt {
		    type _INTEGER
		    vpath global default
		    association <-global.numbutt
		    ppath dynamic default
		    default 3
		    helpkey NUMBUTT
		    prompt {Number of buttons on mouse?}
		}
		parameter enough {
		    vpath global
		    association <-global.unccd.enough
		    type _LOGICAL
		    ppath dynamic
		    helpkey ENOUGH
		    prompt {Seen enough of displayed image? (yes:no to continue)}
		}
		#
	    }
	    #
	}

	command starmandemo {
	    obey {$STARMAN_DIR/starmandemo}
	}

	command starmanhypergripe {
	    obey {$STARMAN_DIR/starmanhypergrype}
	}

	command starmanhyperhelp {
	    obey {$STARMAN_DIR/starmanhyperhelp}
	}

	icl {defhelp starman $STARMAN_HELP/starman_help_a 0}

	display {

    ____________________________________________________________________
    |  Starman - Stellar Photometry               Version @PACKAGE_VERSION@   |
    |            Image and Table Handling                                |
    |                                                                    |
    |1) Help:                         starmanhyperhelp / starmanhelp     |
    |2) Advice/Bug Reports:           starmanhypergripe / starmangripe   |
    |                                   - or - mail alan.penny@rl.ac.uk  |
    |3) Prompts in programs:          ? or ?? for help : \!\! to exit    |
    |4) Default data for a prompt:    $STARMAN_DATA/progam_parameter     |
    |                                    e.g. $STARMAN_DATA/measure_in   |
    |5) Demonstration:                starmandemo                        |
    |                                                                    |
    |All rights reserved. Starlink copyright and disclaimer notices apply|
     --------------------------------------------------------------------

}

}