
#  N.B. the previous line should be blank.
#+
#  Name:
#     ast_link

#  Purpose:
#     Generate linker (ld) arguments for linking against standalone ASTERIX.

#  Type of Module:
#     Shell script.

#  Description:
#     This script should be invoked by those building standalone
#     applications which use ASTERIX in order to generate the correct
#     arguments for the compiler (or ld) command. The arguments
#     generated are written to the standard output.

#  Invocation:
#     The script is normally invoked as part of a compiler command line,
#     such as:
#
#        f77 -o program -L/star/lib/asterix `asterix_standalone` program.f

#  Copyright:
#     Copyright (C) University of Birmingham, 1995

#  Authors:
#     DJA: D.J. Allan (JET-X,University of Birmingham)
#     {enter_new_authors_here}

#  History:
#     7-JUL-1993 (RFWS):
#        Original version.
#     6 Mar 97 : nag removed (RJV)
#     {enter_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

#.

#  Initialise the special options string.
      special=''
      special2=''
      
#  Test to see if we are on a system which requires additional
#  "special" ld options for correct linking.

#  DEC Alpha systems running OSF1:
#  ------------------------------
#  Ensure that allocated memory addresses will fit into 32 bits to
#  prevent problems with storing them in Fortran integers.
      if test "`uname -m`" = "alpha" -a "`uname -s`" = "OSF1"; then
         special='-Wl,-D -Wl,40800000 -Wl,-T -Wl,30000000'

#  SUN Sparc systems running SunOS
#  -------------------------------
#  The gcc compiler is is required explicitly if variable length argument
#  lists are used (as they are in ASTERIX).
      elif test "`uname -m`" = "sun4m" -a "`uname -r`" = "4.1.3"; then
         special2='-L/usr/local/lib/gcc-lib/sparc-sun-sunos4.1/2.2.2 -lgcc'

#  PC running Linux
#  ----------------
#      elif test "`uname`" = "Linux"; then
#


      fi

#  Echo any special options, followed by the ASTERIX library reference,
#  followed by the list of options for packages on which ASTERIX depends.
#  Pass the result through an awk script to remove duplicate library
#  references.
      ldef=${AST_TOP}/${SYSTEM}/lib
      echo "${special}" -L${1-$ldef} -lastlib_stnd -lastlib -lwfclib -lastpda \
        -L/star/share \
	`fitsio_link` `grp_link` `ref_link` `hds_link` `prm_link` \
   `sla_link` `ard_link` `fio_link` `chr_link`  `pda_link` `psx_link` `err_link` \
   `cnf_link` -L/star/lib -lcurses -ltermcap "${special2}"  \
           | awk '{for(f=NF;f;f--)if(!w[$f]++)l=$f" "l;print l}'

#  End of script.
