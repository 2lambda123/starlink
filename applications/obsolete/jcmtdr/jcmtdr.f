C+
C                        J C M T D R      (ADAM version)
C
C  Routine name:
C     JCMTDR
C
C  Function:
C     Main control routine for the ADAM JCMTDR monolith.
C
C  Description:
C     This routine is the main control routine for the version of
C     the JCMTDR data reduction system that runs as an ADAM monolith.
C     It is called by the monolith fixed part in response to a JCMTDR
C     command, and passes control to the appropriate JCMTDR applications
C     subroutine.
C
C  Language:
C     FORTRAN
C
C  Call:
C     CALL JCMTDR (STATUS)
C
C  Parameters:   (">" input, "!" modified, "W" workspace, "<" output)
C
C     (!) STATUS   (Integer,ref) Status code.  If not passed as zero
C                  (SAI__OK), this routine returns immediately.  This
C                  version leaves STATUS unchanged - eventually, I'll
C                  work out how I'm supposed to use it.
C
C  Prior requirements:
C     None
C
C  Support: Horst Meyerdierks, UoE, Starlink.
C
C  History:
C     19th Nov 1987.  Original version.  KS / AAO.
C     30th June 1989. Now uses FIG_HANDEL to trap arithmetic errors.  KS / AAO.
C     21st June 1989. Now includes call to VAR_ADAM_VOPEN.  KS/AAO.
C     2nd July 1991.  NFIGARO.  HME / UoE, Starlink.
C     9th Sept 1991.  Back to FIGARO.  HME / UoE, Starlink.
C     12th Dec 1991.  Suppress error message from deep down below.
C                     HME / UoE, Starlink.
C     9th Jan 1992.   Undo this last change. The problem of HDS error reports
C                     must be solved in DTA.  HME / UoE, Starlink.
C     24th Mar 1994.  Port JCMTDR to Unix. MAKEMAP disabled.
C                     HME / UoE, Starlink.
C     28th Nov 1994.  Try enabling MAKEMAP.
C+
      SUBROUTINE JCMTDR (STATUS)
C
      IMPLICIT NONE
C
C     Parameters
C
      INTEGER STATUS
C
C     Functions used
C
      INTEGER ICH_FOLD
C
C     ADAM constants - defines SAI__OK
C
      INCLUDE 'SAE_PAR'
      INCLUDE 'PAR_PAR'
C
C     Local variables
C
      LOGICAL BATCH_MODE                      ! True if running in batch
      INTEGER IGNORE                          ! Ignored function result
      CHARACTER*8 ENVVAR                      ! Value of batch mode
      CHARACTER*32 COMMAND                    ! Upper-case command name
C
C     Bail-out if called with bad status
C
      IF (STATUS.NE.SAI__OK) RETURN
C
C     Get task name.
C
      CALL TASK_GET_NAME(COMMAND,STATUS)
      IGNORE=ICH_FOLD(COMMAND)
C
C     Find out about the batch mode.
C
      CALL PSX_GETENV('FIGARO_MODE',ENVVAR,STATUS)
      IF (STATUS.NE.SAI__OK) THEN
         CALL ERR_ANNUL(STATUS)
         BATCH_MODE=.FALSE.
      ELSE
         IGNORE=ICH_FOLD(ENVVAR)
         IF (ENVVAR.EQ.'BATCH') THEN
            BATCH_MODE=.TRUE.
         ELSE
            BATCH_MODE=.FALSE.
         END IF
      END IF
C
C     Initialise the FIGARO parameter system for this command
C
      CALL PAR_INIT(COMMAND,' ',0,BATCH_MODE,IGNORE)
C
C     Generated by the program GFIGMON, Monday, June 22nd, 1992, at 3:22 pm
C
C     IRAS_TAG application was added by hand (REVAD::JFL) - 22-JUN-1992
C
      IF (COMMAND.EQ.'MAKEMAP') THEN
         CALL MAKEMAP
      ELSE IF (COMMAND.EQ.'RESTORE') THEN
         CALL RESTORE
      ELSE IF (COMMAND.EQ.'MAP2TS') THEN
         CALL MAP2TS
      ELSE IF (COMMAND.EQ.'TS2MAP') THEN
         CALL TS2MAP
      ELSE IF (COMMAND.EQ.'AE2RD1') THEN
         CALL AE2RD1
      ELSE IF (COMMAND.EQ.'AE2RD2') THEN
         CALL AE2RD2
      ELSE IF (COMMAND.EQ.'JCMTEXTC') THEN
         CALL JCMTEXTC
      ELSE IF (COMMAND.EQ.'MAP2MEM') THEN
         CALL MAP2MEM
      ELSE IF (COMMAND.EQ.'FAKE') THEN
         CALL FAKE
      ELSE IF (COMMAND.EQ.'IRAS_TAG') THEN
         CALL IRAS_TAG
      END IF
C
C     End of code generated by GFIGMON (FIG_MONO_COM.INC).
C
      END
