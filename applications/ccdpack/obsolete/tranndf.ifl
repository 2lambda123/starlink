#+
#  Name:
#     TRANNDF.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     MJC: Malcolm J. Currie (STARLINK)
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     1993 March 16 (MJC):
#     	 Original version.
#     1993 March 25 (MJC):
#     	 Added LCOORD, UCOORD, LBOUND, and UBOUND. Revised SHAPE.
#	 Removed SAME.
#     18-JUN-1993 (PDRAPER):
#     	 Changed to TRANNDF.
#     {enter_further_changes_here}

#-

interface TRANNDF

   helplib        'CCDPACK_HELP:'

   parameter      CONSERVE       # Conserve flux
      type        '_LOGICAL'
      ppath       'CURRENT,DEFAULT'
      vpath       'CURRENT,DEFAULT'
      prompt      'Conserve flux?'
      helpkey     '*'
      default     TRUE
   endparameter

   parameter      IN             # Input NDF
      position    1
      type        LITERAL
      access      'READ'
      vpath    'PROMPT,CURRENT,GLOBAL'
      ppath    'CURRENT,GLOBAL'
      association '<-global.ccdpack_ndfin'
      prompt      'List of NDFs'
      helpkey     '*'
   endparameter

   parameter      OUT            # Output NDF
      position    2
      type        'LITERAL'
      access      'WRITE'
      vpath       'PROMPt,CURRENT'
      ppath       'CURRENT'
      association '->global.data_array'
      prompt      'Output NDF'
      helpkey     '*'
   endparameter

   parameter      METHOD         # Resampling method
      position    3
      type        'LITERAL'
      vpath       'CURRENT,DEFAULT'
      ppath       'CURRENT,DEFAULT'
      prompt      'Re-sampling method'
      helpkey     '*'
      default     'Nearest'
#     in          'Linint', 'Nearest'
   endparameter

   parameter      SHAPE          # How to shape output NDFs
      type        'LITERAL'
      access      'UPDATE'
      ppath       'CURRENT,DEFAULT'
      vpath       'CURRENT,DEFAULT'
      default     'AUTO'
      prompt      'Method used to get bounds of output NDFs'
      helpkey     '*'
   endparameter

   parameter INEXT               # Get transformation structures from NDFs
      type     _LOGICAL
      access   READ
      vpath    'CURRENT,DEFAULT'
      ppath    'CURRENT,DEFAULT'
      default  true
      prompt   'Locate transform structure in NDF extensions'
      helpkey  '*'
   endparameter

   parameter      LBOUND        # Lower bounds of output NDFs
      type        '_DOUBLE'
      vpath       'PROMPT,DYNAMIC,CURRENT,DEFAULT'
      ppath       'DYNAMIC,CURRENT,DEFAULT'
      prompt      'Lower bounds of the output NDFs'
      helpkey     '*'
   endparameter

   parameter      UBOUND        # Upper bound of output NDFs
      type        '_DOUBLE'
      vpath       'PROMPT,DYNAMIC,CURRENT,DEFAULT'
      ppath       'DYNAMIC,CURRENT,DEFAULT'
      prompt      'Upper bounds of the output NDFs'
      helpkey     '*'
   endparameter

   parameter TRANSFORM           # Transformation structure
      access   READ
      type     'TRN'
      vpath    'PROMPT,CURRENT'
      ppath    'CURRENT'
      prompt   'Transformation structure'
      helpkey  '*'
   endparameter

   parameter LOGTO              # Logging system interaction level
       type        LITERAL
       access      UPDATE
       vpath       'GLOBAL,CURRENT,DEFAULT'
       ppath       'GLOBAL,CURRENT,DEFAULT'
       association '<-global.ccdpack_logto'
       prompt      'Write log to (Logfile,Terminal,Neither,Both)'
       default     'Both'
       helpkey     '*'
   endparameter

   parameter      LOGFILE        # The log file
      type        LITERAL
      access      READ
      vpath       'GLOBAL,CURRENT,DEFAULT'
      ppath       'GLOBAL,CURRENT,DEFAULT'
      association '<-global.ccdpack_logfile'
      prompt      'Logfile name'
      default     'CCDPACK.LOG'
      helpkey     '*'
   endparameter

   parameter TITLE # Title for the output NDF
      keyword  TITLE
      type     LITERAL
      access   READ
      vpath    'DEFAULT,PROMPT '
      ppath    'CURRENT,DEFAULT '
      default  'Output from TRANNDF'
      prompt   'Title for the output NDFs'
      helpkey  '*'
   endparameter

endinterface
# $Id$
