.help tranndf Starlink ccdpack
.nf
Transforms a list of NDFs by resampling.

Usage:

   tranndf in out [method]

Description:

   This application performs the arbitrary transformation of a list
   of NDFs using transform structures created by routines such as
   REGISTER and CCDEDIT. The output NDFs are calculated by resampling
   the data of the input NDFs. Output array elements are set to the
   bad value if their inverse-transformed coordinates lie outside the
   corresponding input NDF's coordinate limits.

   NDFs processed within CCDPACK may be resampled using the
   appropriate transformation structures located within the NDF's
   extensions. Using these facilities allows many NDFs to be aligned
   with one invocation.

Parameters:

CONSERVE = _LOGICAL (Read)
   If CONSERVE is TRUE, the output values are normalised by the
   ratio of the output-to-input pixel areas.  In other words this
   conserves flux.  If CONSERVE is FALSE, there is no
   normalisation.  [TRUE]
IN = NDF (Read)
   A list of NDF names whose data are to be transformed. The NDF
   names should be separated by commas and may include wildcards.
INEXT = _LOGICAL (Read)
   If TRUE then the transformation which is to be applied to the
   NDF is stored in the NDF's CCDPACK extension
   (.MORE.CCDPACK.TRANSFORM). If FALSE then a transformation
   structure must be supplied via the parameter TRANSFORM. This
   transformation is then applied to the list of NDFs.  [TRUE]
LBOUND() = _INTEGER (Read)
   If SHAPE is "SPECIFY" then this parameter specifies the lower
   pixel-index bounds of all the output NDFs. The number of
   values should equal the maximum number of dimensions of the
   input NDFs. The suggested defaults are the lower bounds
   generated by the SHAPE="AUTO" option for the first NDF. These
   bounds are probably small enough to ensure that all the
   transformed data (of the first NDF) will appear in the output
   NDF.
   [Dynamic default]
LOGFILE = FILENAME (Read)
   Name of the CCDPACK logfile.  If a null (!) value is given for
   this parameter then no logfile will be written, regardless of
   the value of the LOGTO parameter.

   If the logging system has been initialised using CCDSETUP
   then the value specified there will be used. Otherwise, the
   default is "CCDPACK.LOG".
   [CCDPACK.LOG]
LOGTO = LITERAL (Read)
   Every CCDPACK application has the ability to log its output
   for future reference as well as for display on the terminal.
   This parameter controls this process, and may be set to any
   unique abbreviation of the following:

      -  TERMINAL  -- Send output to the terminal only

      -  LOGFILE   -- Send output to the logfile only (see the
                      LOGFILE parameter)

      -  BOTH      -- Send output to both the terminal and the
                      logfile

      -  NEITHER   -- Produce no output at all

   If the logging system has been initialised using CCDSETUP
   then the value specified there will be used. Otherwise, the
   default is "BOTH".
   [BOTH]
METHOD = LITERAL (Read)
   The interpolation method used to resample the input NDF data
   arrays. Permitted values are "NEAREST" for nearest-neighbour,
   and "LININT" for linear interpolation.
   [NEAREST]
OUT = LITERAL (Write)
   Names of the output -- transformed -- NDFs. These may be
   specified as list of comma separated names, using indirection
   if required, or, as a single modification element (of the
   input names). The simplest modification element is the
   asterisk "*" which means call each of the output NDFs the same
   name as the corresponding input NDFs. So,
      IN > *
      OUT > *
   signifies that all the NDFs in the current directory should be
   used and the output NDFs should have the same names. Other
   types of modification can also be used, such as,
      OUT > *-TRN
   which means call the output NDFs the same as the input NDFs
   but add -TRN to the end of the names. Replacement of a
   specified string with another in the output file names can
   also be used,
      OUT > *|RAW|RES|
   this replaces the string RAW with RES in any of the output
   names.
SHAPE = LITERAL (Read)
   The method to be used to determine the SHAPE of the output
   NDFs. Can take one of the values "AUTO", "SAME", "SPECIFY".
   With the meanings.

      - AUTO    -- automatically determine the bounds of the
                   output NDFs such that all of the input data
                   appears. This is achieved by transforming test
                   points along the current bounds so assumes
                   that the transformation will behave reasonably.

      - SAME    -- set the output NDF bounds to those of the
                   corresponding input NDFs.

      - SPECIFY -- you will specify a single set of bounds for
                   all the output NDFs. (See the LBOUND and UBOUND
                   parameters.)
   [AUTO]
TRANSFORM = TRN (Read)
   If INEXT is FALSE then this parameter specifies the
   transformation structure.  This includes the file name and the
   HDS object.  For example, DISTORT.MAPPING would use the
   TRANSFORM structure called MAPPING in the HDS file DISTORT.
   Normally the object name is TRANSFORM.  The structure must
   contain both the forward and inverse mappings. This transform
   if supplied acts on all the input NDFs.
UBOUND() = _INTEGER (Read)
   If SHAPE is "SPECIFY" then this parameter specifies the upper
   pixel-index bounds of all the output NDFs. The number of
   values should equal the maximum number of dimensions of the
   input NDFs. The suggested defaults are the upper bounds
   generated by the SHAPE="AUTO" option for the first NDF. These
   bounds are probably large enough to ensure that all the
   transformed data (of the first NDF) will appear in the output
   NDF.
   [Dynamic default]

Examples

tranndf * *-trn reset
   This transforms all the NDFs in the current directory if
   they contain suitable transformation structures in their
   extensions. It uses nearest-neighbour resampling and conserves
   the flux levels. The output NDFs are of a size such that all
   the input pixels have contributed.

tranndf curved straight linint shape=same
   As above, except linear interpolation is used, and the straight
   array uses the bounds of curved.

tranndf a119* *s inext=false transform=proj.merc shape=bounds
        lbound=[1,-20] ubound=[256,172]
   This transforms the NDFs called a119*, using the transformation
   merc in the HDS file called proj, into NDFs called a119*s.
   It uses nearest-neighbour resampling.  All the output NDFs
   have size 256 x 192 pixels and origin (1,-20).

Notes

- This application is a restricted form of the KAPPA routine
  TRANSFORMER. If additional functionality is required then
  look at TRANSFORMER.

Behaviour_of_parameters

   Most parameters retain their current value as default. The
   "current" value is the value assigned on the last run of the
   application. If the application has not been run then the
   "intrinsic" defaults, as shown in the parameter help, apply.
   The exceptions to this rule are:

      - LBOUND  -- always uses a dynamic default

      - UBOUND  -- always uses a dynamic default

      - TITLE   -- always "Output from TRANNDF"

   Retaining parameter values has the advantage of allowing you to
   define the default behaviour of the application but does mean
   that additional care needs to be taken when using the application
   after a break of sometime. The intrinsic default behaviour of
   the application may be restored by using the RESET keyword on
   the command line.

   Certain parameters (LOGTO and LOGFILE) have global values. These
   global values will always take precedence, except when an
   assignment is made on the command line.  Global values may be set
   and reset using the CCDSETUP and CCDCLEAR commands.

Authors

MJC: Malcolm J. Currie (STARLINK)

PDRAPER: Peter Draper (STARLINK)

History

 1993 March 16 (MJC):
    Original version.

 18-JUN-1993 (PDRAPER):
    Changed for use in CCDPACK pipe-line - Lists of NDFs,
    information logging etc. Restricted functionality to that which
    is used by CCDPACK (no axes information).

 19-JUL-1995 (PDRAPER):
    Removed AIF_ calls.

 6-SEP-1995 (PDRAPER):
    Updated for CCDPACK version 2.0.

Implementation_Status

   - Flux conservation can only be applied to constant-determinant
     or linear transformations.

   - The NDF components are processed by this application as
     follows:

      -  AXES, LABEL, UNITS, HISTORY, and extensions are merely
         propagated.

      -  QUALITY is not derived from the input NDF for a linearly
         interpolated NDF. The DATA and VARIANCE arrays are
         resampled.

   -  Bad pixels, including automatic quality masking, are supported.

   -  All non-complex numeric data types are supported.

   -  There can be an arbitrary number of NDF dimensions.
.endhelp
