.help pairndf Starlink ccdpack
.nf
Displays and manipulates image pairs to allow easy registration.

Usage:

   pairndf in outlist device percentiles

Description:

   This routine accepts a list of NDFs which may be aligned using
   simple offsets. In a first interactive section pairs of images
   may be selected from a palette of images (which are drawn down
   the side of the display). Passing on to a second section the
   chosen pair of images may then be manipulated by selecting a
   reference position on one and then indicating where the
   corresponding position on the second is. The reference image is
   then moved and overlaid on the second. In any overlap regions the
   image display values are averaged. If the pair of images are
   overlaid (registering them) then a third section may be entered
   in which the cursor can be used to pick out the positions of
   image features in the overlap region. The image features are then
   centroided to get accurate positions.

   You are required to choose all the pairings required to
   completely register all frames (the routine will not exit
   until enough images have been paired to allow this, and a policy
   to ensure completeness is enforced by insisting that each pair,
   except for the first, contains one previously paired image).
   When this is complete a global merger of the all the positions
   for each NDF takes place. This results in the output of one list
   of uniquely labelled positions for each NDF. These position lists
   can then be used in a routine such as REGISTER to produce the
   actual transformation between the NDFs.

Parameters:

DEVICE = DEVICE (Read)
   The name of the image display device.
   [Current image display device]
FILLFRAC = _DOUBLE (Read)
   The largest fraction of the display area which the images
   displayed in the scratch region (the part where they can be
   manipulated) may take. A value will always be in the
   range 0.05 to 0.95.
   [0.55]
IN = LITERAL (Read)
   A list of NDF names whose data are to be transformed. The NDF
   names should be separated by commas and may include wildcards.
KEEPLUT = _LOGICAL (Read)
   Whether to retain the current device look-up-table. If FALSE
   then a greyscale look-up-table is loaded. PAIRNDF loads the
   primary colours into the first few pens regardless of the
   value of this parameter.
   [TRUE]
LOGFILE = FILENAME (Read)
   Name of the CCDPACK logfile.  If a null (!) value is given for
   this parameter then no logfile will be written, regardless of
   the value of the LOGTO parameter.

   If the logging system has been initialised using CCDSETUP
   then the value specified there will be used. Otherwise, the
   default is "CCDPACK.LOG".
   [CCDPACK.LOG]
LOGTO = LITERAL (Read)
   Every CCDPACK application has the ability to log its output
   for future reference as well as for display on the terminal.
   This parameter controls this process, and may be set to any
   unique abbreviation of the following:

      -  TERMINAL  -- Send output to the terminal only

      -  LOGFILE   -- Send output to the logfile only (see the
                      LOGFILE parameter)

      -  BOTH      -- Send output to both the terminal and the
                      logfile

      -  NEITHER   -- Produce no output at all

   If the logging system has been initialised using CCDSETUP
   then the value specified there will be used. Otherwise, the
   default is "BOTH".
   [BOTH]
MAKEBIG = _LOGICAL (Read)
   If TRUE then images will be scaled to fit into the whole of
   the FILLFRAC area. If FALSE then scaling will never exceed
   one device pixel per NDF pixel. This latter option decreases
   the time needed to process images from the display palette
   into the scratch region.
   [TRUE]
MEMORY = _INTEGER (Read)
   The memory of the device which is to be used. This can take
   the values 0 and 1. 0 means the base memory and 1 the overlay.
   [0]
MSIZE = _REAL (Read)
   Determines the size of the position marker. This is set as a
   fraction of the X dimension of the display.
   [0.03]
NAMELIST = LITERAL (Read)
   The name of a file to contain the names of the output
   position lists. The names written to this file are those
   generated using the expression given to the OUTLIST parameter.
   This file may be used in an indirection expression to input
   all the position lists output from this routine into another
   routine, if the associating position lists with NDFs option is
   not being used.
   [PAIRNDF.LIS]
OUTLIST = LITERAL (Read)
   An expression which is either a list of names or expands to a
   list of names for the output position lists.

   These may be specified as list of comma separated names,
   using indirection if required, OR, as a single modification
   element (of the input names). The simplest modification
   element is the asterisk "*" which means call each of the
   output lists the same name as the corresponding input NDFs (but
   without the ".SDF" extension).
   So,
      IN > *
      OUTLIST > *
   signifies that all the NDFs in the current directory should be
   used and the output lists should have the same names.

   Other types of modification can also occur, such as,
      OUTLIST > *_objs.dat
   which means call the position lists the same as the input NDFs
   but put "_objs.dat" after the names. Replacement of a specified
   string with another in the output file names can also be used,
      outlist > *|_debias|_images.dat|
   this replaces the string "_debias" with "_images.dat" in any
   of the output names.

   If wildcarded names for the input NDFs are used then is it
   recommended that wildcards are also used for the position list
   names as the correspondence between these may be confusing.
   [*.DAT]
PALFRAC = _DOUBLE (Read)
   The fraction of display X-dimension which is reserved for the
   image palette. A value will always be in the range
   0.05 to 0.95.
   [0.25]
PERCENTILES( 2 ) = _DOUBLE (Read)
   The percentile data range to use as limits when displaying the
   images. Must be in the range 0 to 100. Using percentiles as
   display limits automatically adjusts the data ranges of the
   images to show similar information levels. This helps when
   combining the data using a mean as a crude normalisation has
   been performed.
   [2,98]
THICK = _INTEGER (Read)
   The thickness of the position marker in device pixels.
   [3]

Examples

pairndf '*'  '*.dat' xw '[1,99]'
  In this routine the positional nature of the parameters is
  shown. All the NDFs in the current directory are displayed.
  Their output positions lists have the same name as the NDFs
  except that they have a file type of .dat. The images are 
  displayed using the percentile limits 1,99 which shows bright 
  detail well.

pairndf msize=0.1 thick=7
   In this example the cross which is used to identify the
   image features is made very large and thick.

pairndf fillfrac=0.75 keeplut palfrac=0.15
   The parameters used in this example will make the images
   displayed in the scratch region larger than the default. This
   can be useful when the images have a long and a short side as
   a scale factor is chosen which maps one of the image sides to
   the scratch side exactly so images can be scaled and still be
   all visible. KEEPLUT keeps the look-up-table loaded in the
   current device (say a colour one). Reducing PALFRAC to 0.15
   makes the scratch display surface larger but has the
   disadvantage that the images in the palette are small (perhaps
   too small to identify image features, but this needn't be a
   problem as images may be drawn into the scratch region - for
   inspection side-by-side - during the pair selection phase).

Notes

- Interactive sections.

  There are three distinct sections in PAIRNDF. In the first
  section a pair of images should be chosen from the palette.
  Choosing an image is performed by simply placing the cursor on
  the image and pressing the left-hand button. to select an image
  for display on the left and the right button to display an
  image on the right. Two images must be chosen before a
  progression to the next section is allowed.  When an image is
  chosen it is rescaled and displayed in the scratch region.
  During the first pass any two images may be chosen,
  subsequently at least one image which has already been chosen
  (and successfully processed) must be used (you may of course
  select two processed images if you like). This ensures that
  the final registration is complete. Images which have been
  processed are probably outlined in green. You are not
  restricted to the first pair of images chosen - just keep
  pointing at images you want to expand into the scratch region
  until you have a pair with image features in common.

  After selecting the pair of images you want to register you must
  pass on to a second stage, this is entered by pressing the
  right-hand button, the title "Align the images" will then
  appear. These two images may now be moved. This is achieved by
  first selecting a reference point on one of the images (say a
  star which is clearly visible on both images) then moving the
  cursor onto it and pressing the left-hand button (accuracy is
  not critical as positions will be centroided later, but you can
  zoom in on a feature). Next move the cursor to the corresponding
  image feature on the second image and press the centre
  button. The routine will now move the reference image onto the
  new position. In areas where the images overlap a mean is taken.

  The final interactive section is used to select the positions of
  image features in the overlap regions. These are selected by
  moving the cursor onto them and pressing the left-hand button.
  When you have selected as many image features as you require
  pressing the right-hand button exits this section. The features
  (on both images) are then centroided. If enough information has
  now been given to register all the frames then the routine
  passes out of the interaction session and determines the
  registration.

- X windows display.

  Using keyboard I and O keys it is possible to zoom-in and
  zoom-out. The arrow keys allow the memory to be scrolled,
  pressing the shift key at the same time increases the rate of
  scroll. The C key performs a quick re-centre, cancelling any
  zoom and scroll. The Q key aborts the routine.

- NDF extension items.

  On exit the CURRENT_LIST items in the CCDPACK extensions
  (.MORE.CCDPACK) of the input NDFs are set to the names of the
  appropriate output lists. These items will be used by other
  CCDPACK position list processing routines to automatically
  access the lists.

- Output position list format.

  CCDPACK format - Position lists in CCDPACK are formatted files
  whose first three columns are interpreted as the following.

     - Column 1: an integer identifier

     - Column 2: the X position

     - Column 3: the Y position

  The column one value must be an integer and is used to identify
  positions which may have different locations but are to be
  considered as the same point. Comments may be included in the
  file using the characters # and !. Columns may be separated by
  the use of commas or spaces.

Behaviour_of_parameters

   All parameters retain their current value as default. The
   "current" value is the value assigned on the last run of the
   application. If the application has not been run then the
   "intrinsic" defaults, as shown in the parameter help, apply.

   Retaining parameter values has the advantage of allowing you to
   define the default behaviour of the application.  The intrinsic
   default behaviour of the application may be restored by using the
   RESET keyword on the command line.

   Certain parameters (LOGTO and LOGFILE) have global values. These
   global values will always take precedence, except when an
   assignment is made on the command line.  Global values may be set
   and reset using the CCDSETUP and CCDCLEAR commands.

   The DEVICE parameter also has a global association. This is not
   controlled by the usual CCDPACK mechanisms, instead it works in
   co-operation with KAPPA (SUN/95) image display/control routines.

Authors

PDRAPER: Peter Draper (STARLINK - Durham University)

History

 5-FEB-1993 (PDRAPER):
    Original version.

 6-OCT-1995 (PDRAPER):
    Updated for CCDPACK version 2.0.

Implementation_Status

   - Supports Bad pixel values and all non-complex data types.
.endhelp
