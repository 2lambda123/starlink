package ccdpack {

   executable ccdpack_nag {
#+
#  Name:
#     NAGMAKEMOS.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     RFWS: R.F. Warren-Smith (STARLINK, RAL)
#     {enter_new_authors_here}

#  History:
#     26-FEB-1992 (RFWS):
#        Original version.
#     {enter_changes_here}

#-

      action nagmakemos {

         helplib {$CCDPACK_HELP}

         parameter alpha {
                          # Trimming fraction
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 0.2
            prompt {Trimming fraction}
            helpkey *
          }

         parameter cmpvar {
                           # Use variance during inter-comparison?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use variance during inter-comparison?}
            helpkey *
          }

         parameter genvar {
                           # Generate output variance information?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Generate output variance information?}
            helpkey *
          }

         parameter in {
                       # List of input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter listin {
                           # List input NDFs?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {List input NDF names?}
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            default CCDPACK.LOG
            prompt {Logfile name [G]}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            default BOTH
            prompt {Write output to (Logfile,Terminal,Neither,Both) [G]}
            helpkey *
          }

         parameter max {
                        # Maximum value for data combination
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Maximum data value}
            helpkey *
          }

         parameter maxit {
                          # Maximum number of inter-comparison iterations
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 20
            prompt {Maximum number of inter-comparison iterations}
            helpkey *
          }

         parameter method {
                           # Data combination method
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MEDIAN
            prompt {Data combination method}
            helpkey *
          }

         parameter min {
                        # Minimum value for data combination
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Minimum data value}
            helpkey *
          }

         parameter modify {
                           # Modify input NDFs?
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Modify input NDFs?}
            helpkey *
          }

         parameter niter {
                          # Number of mode refining iterations
            type _INTEGER
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 7
            prompt {Number of mode refining iterations}
            helpkey *
          }

         parameter out {
                        # Output mosaic NDF
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->global.data_array
            prompt {Output mosaic NDF}
            helpkey *
          }

         parameter optov {
                          # Optimum number of overlaps per NDF
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Optimum number of overlaps per NDF}
            helpkey *
          }

         parameter preserve {
                             # Preserve input data type?
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_preser
            default TRUE
            prompt {Preserve input data type [G]}
            helpkey *
          }

         parameter ref {
                        # Reference NDF
            type _CHAR
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Reference NDF}
            helpkey *
          }

         parameter scale {
                          # Adjust scale-factors?
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Adjust scale-factors?}
            helpkey *
          }

         parameter sigmas {
                           # Number of standard deviations for clipping
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 4.0
            prompt {Clipping limit (standard deviations)}
            helpkey *
          }

         parameter skysup {
                           # Sky noise suppression factor
            type _REAL
            access READ
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default 10.0
            prompt {Sky noise suppression factor}
            helpkey *
          }

         parameter title {
                          # Title for output mosaic NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from MAKEMOS}
            prompt {Title for output mosaic}
            helpkey *
          }

         parameter tols {
                         # Scale-factor accuracy tolerance
            type _REAL
            access READ
            vpath CURRENT DYNAMIC DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default 0.001
            prompt {Fractional scale-factor tolerance}
            helpkey *
          }

         parameter tolz {
                         # Zero-point accuracy tolerance
            type _REAL
            access READ
            vpath CURRENT DYNAMIC DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default 0.05
            prompt {Zero-point tolerance}
            helpkey *
          }

         parameter usevar {
                           # Use variance during data combination?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use variance during data combination?}
            helpkey *
          }

         parameter weights {
                            # Weighting factors for input NDFs
            type _REAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {NDF weighting factors}
            helpkey *
          }

         parameter zero {
                         # Adjust zero-points?
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Adjust zero-points?}
            helpkey *
          }

      }
# @(#)nagmakemos.ifl   1.2   96/10/16 14:01:36   97/06/16 15:28:56
   }


   executable ccdpack_red {
#+
#  Name:
#     MAKEBIAS.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     25-3-1991 (PDRAPER):
#     	 Original version.
#     4-JUL-1991 (PDRAPER):
#     	 Added associations and help library specifications.
#     20-AUG-1991 (PDRAPER):
#     	 Added GENVAR parameter.
#     2-FEB-1994 (PDRAPER):
#     	 Added KEEPIN, USEEXT already present.
#     {enter_further_changes_here}

#-

      action makebias {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # Input NDF 1
            position 1
            type LITERAL
                        # string of NDFs
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter out {
                        # Output NDF may use IRG type expressions
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Output NDF}
            association ->global.ccdpack_bias
            helpkey *
          }

         parameter rnoise {
                           # Readout Noise (ADU)
            position 3
            type _DOUBLE
            access READ
            vpath GLOBAL DYNAMIC CURRENT DEFAULT
            ppath GLOBAL DYNAMIC CURRENT DEFAULT
            default 0.0
            prompt {Readout noise (ADUs) [G]}
            association <-global.ccdpack_rnoise
            helpkey *
          }

         parameter method {
                           # Combination method
            position 4
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MEDIAN
            prompt {Data combination method}
            helpkey *
          }

         parameter genvar {
                           # Controls whether variances are
				 # generated
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_genvar
            default FALSE
            prompt {Do you want to generate a variance component [G]}
            helpkey *
          }

         parameter useext {
                           # Controls whether extension is used
				 # for getting values.
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_useext
            default FALSE
            prompt {Use NDF extension information [G]}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter alpha {
                          # Trimming fraction
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.2
            prompt {Trim fraction }
            helpkey *
          }

         parameter sigmas {
                           # Number of sigmas for clipping (MODE + SIGMA)
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 4.0
            prompt {Clipping limit (standard deviations)}
            helpkey *
          }

         parameter niter {
                          # Number of refining iterations (MODE)
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 7
            prompt {Number of clipping iterations}
            helpkey *
          }

         parameter min {
                        # Minimum value in combination
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -100.0
            prompt {Minimum allowed value}
            helpkey *
          }

         parameter max {
                        # Minimum value in combination
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 100.0
            prompt {Maximum allowed value}
            helpkey *
          }

         parameter zero {
                         # Zero output array
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Make average of output data zero}
            helpkey *
          }

         parameter minpix {
                           # Minimum number of contributing pixels
            type _INTEGER
            access READ
            vpath CURRENT DYNAMIC DEFAULT PROMPT
            ppath CURRENT DYNAMIC DEFAULT
            default 1
            prompt {Minimum number of contributing pixels per output pixel}
            helpkey *
          }

         parameter preserve {
                             # Preserve the input data type
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT PROMPT
            ppath GLOBAL CURRENT DEFAULT
            default TRUE
            association <-global.ccdpack_preser
            prompt {Preserve input NDF data type [G]}
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from MAKEBIAS}
            prompt {Title for the output NDF}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            association <-global.ccdpack_logfile
            helpkey *
          }

      }
# @(#)makebias.ifl	2.13     9/9/96     2
#+
#  Name:
#     DEBIAS.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     1-MAY-1991 (PDRAPER):
#        Original version.
#     4-JUL-1991 (PDRAPER):
#     	 Added help library info and associations.
#     21-AUG-1991 (PDRAPER):
#     	 Added GENVAR parameter.
#     28-JAN-1994 (PDRAPER):
#     	 Added USEEXT, GETBIAS and GETMASK
#     2-FEB-1994 (PDRAPER):
#     	 Added KEEPIN parameter.
#     {enter_further_changes_here}

#-

      action debias {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # List of input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter out {
                        # List of Output NDF
            position 2
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of output NDFs}
            helpkey *
          }

         parameter bias {
                         # Bias NDF
            position 3
            type LITERAL
            access READ
            vpath PROMPT GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            default !
            association <-global.ccdpack_bias
            prompt {Master bias NDF}
            helpkey *
          }

         parameter bounds {
                           # Pixel indices of bias strips
            position 4
            type _INTEGER
            access READ
            vpath GLOBAL PROMPT CURRENT
            ppath GLOBAL CURRENT
            association <-global.ccdpack_bounds
            prompt {Pixel indices of bias strips (in pairs) [G]}
            helpkey *
            size *
          }

         parameter rnoise {
                           # The readout noise
            position 5
            type _DOUBLE
            access READ
            vpath GLOBAL CURRENT DYNAMIC DEFAULT
            ppath GLOBAL CURRENT DYNAMIC DEFAULT
            default 1.0
            association <-global.ccdpack_rnoise
            prompt {Readout noise (ADUs) [G]}
            helpkey *
          }

         parameter adc {
                        # The analogue to digital conversion
				 # factor
            position 6
            type _DOUBLE
            access READ
            vpath GLOBAL CURRENT DYNAMIC DEFAULT
            ppath GLOBAL CURRENT DYNAMIC DEFAULT
            default 1.0
            association <-global.ccdpack_adc
            prompt {Number of electrons per ADU [G]}
            helpkey *
          }

         parameter mask {
                         # Mask NDF
            position 7
            type LITERAL
            access READ
            vpath GLOBAL PROMPT CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            default !
            association <-global.ccdpack_mask
            prompt {Mask data file [G]}
            helpkey *
          }

         parameter useext {
                           # Controls whether extension is used
                                 # for getting values.
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_useext
            default FALSE
            prompt {Use NDF extension information [G]}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter getbias {
                            # Controls whether an attempt is made
				 # to get a master bias frame or not.
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Get a master bias NDF via BIAS parameter}
            helpkey *
          }

         parameter getmask {
                            # Controls whether an attempt is made
				 # to get a mask or not.
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Get a defect mask via MASK parameter}
            helpkey *
          }

         parameter genvar {
                           # Whether variance generation is to occur
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_genvar
            default FALSE
            prompt {Do you want to generate variance estimates [G]}
            helpkey *
          }

         parameter offset {
                           # Do you want bias scaling to zeros
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Offset the bias values to zero}
            helpkey *
          }

         parameter direction {
                              # Readout direction
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_direct
            default X
            prompt {Readout direction ( X or Y ) [G]}
            helpkey *
          }

         parameter smode {
                          # The interpolation mode
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default CONSTANT
            prompt {Mode to fit data (Linear or Constant)}
            helpkey *
          }

         parameter fmode {
                          # The interpolation method
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default LINE
            prompt {Fit type (Plane or Line or Global)}
            helpkey *
          }

         parameter cmode {
                          # Clean up or weighting ?
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default BOX
            prompt {Clean up mode (Weight,Box or Sigma)}
            helpkey *
          }

         parameter boxsize {
                            # The half side of box for smooothing
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 15 15
            prompt {Box side sizes for smoothing bias strips }
            helpkey *
            size *
          }

         parameter nsigma {
                           # Number of sigma to clip at.
            type _REAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 4.0
            prompt {Number of sigmas to clip at}
            helpkey *
          }

         parameter wmode {
                          # The weighting mode
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default LINEAR
            prompt {Weighting mode (Linear, Exp or None)}
            helpkey *
          }

         parameter preserve {
                             # Whether to preserve input data type
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_preser
            default TRUE
            prompt {Do you want to preserve the input type [G]}
            helpkey *
          }

         parameter usecon {
                           # Whether to use user supplied global
			     # zero point
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Do you want to supply a global zero level}
            helpkey *
          }

         parameter zero {
                         # User supplied global zero point
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DYNAMIC DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default 0.0
            prompt {Global zero point value}
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from DEBIAS}
            prompt {Title for the output NDFs}
            helpkey *
          }

         parameter logto {
                          # Log output to?
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter setbad {
                           # Controls how the values are set BAD
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Set output pixels BAD}
            helpkey *
          }

         parameter badbits {
                            # BADBITS mask value
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1
            range 1 255
            prompt {BADBITS mask value}
            helpkey *
          }

         parameter expand {
                           # Whether to expand input data to
                                 # electrons or not
            type _LOGICAL
            access READ
            # Dynamic default set for different data types (not IRAF)
            vpath CURRENT DYNAMIC DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default TRUE
            prompt {Convert input ADUs to electrons on output}
            helpkey *
          }

         parameter saturate {
                             # Whether saturation will occur
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            default FALSE
            prompt {Look for saturated data [G]}
            association <-global.ccdpack_satur
            helpkey *
          }

         parameter setsat {
                           # Flag saturation with a user defined value
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            default FALSE
            prompt {Set saturated pixels to the saturation value [G]}
            association <-global.ccdpack_setsat
            helpkey *
          }

         parameter saturation {
                               # Saturation value
            type _DOUBLE
            access READ
            vpath GLOBAL CURRENT PROMPT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            default 1.0D6
            prompt {Saturation value [G]}
            association <-global.ccdpack_satval
            helpkey *
          }

         parameter deferred {
                             # Deferred charge value
            type _DOUBLE
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            default 0.0
            association <-global.ccdpack_defer
            prompt {Deferred charge (ADUs) [G]}
            helpkey *
          }

         parameter extent {
                           # Extent of useful CCD area
            type _INTEGER
            access READ
            vpath GLOBAL CURRENT PROMPT DYNAMIC
            ppath GLOBAL CURRENT DYNAMIC
            association <-global.ccdpack_extent
            prompt {Useful CCD region (xmin,xmax,ymin,ymax) [G]}
            helpkey *
            size *
          }

         parameter fixorigin {
                              # Whether to set origin off output NDFs
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Set origin of output NDFs to 1,1}
            helpkey *
          }

      }
# @(#)debias.ifl	2.17     10/21/95     2
#+
#  Name:
#     MAKECAL.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     25-3-1991 (PDRAPER):
#     	 Original version.
#     4-JUL-1991 (PDRAPER):
#     	 Added log file association and helpkeys.
#     29-SEP-1993 (PDRAPER):
#     	 Added TYPE parameter.
#     2-FEB-1994 (PDRAPER):
#     	 Added KEEPIN parameter (USEEXT already present).
#     {enter_further_changes_here}

#-

      action makecal {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # List of Input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter expose {
                           # List of exposure factors
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Input NDF exposure times}
            helpkey *
          }

         parameter out {
                        # OUTPUT NDF
            position 3
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT
            ppath CURRENT
            association ->global.ccdpack_cal
            prompt {Output NDF name}
            helpkey *
          }

         parameter method {
                           # Combination mode
            position 4
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MEDIAN
            prompt {Data combination method}
            helpkey *
          }

         parameter useext {
                           # Controls whether extension is used
                                 # for getting values.
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_useext
            default FALSE
            prompt {Use NDF extension information [G]}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter type {
                         # Frame types of input NDFs
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default NONE
            prompt {Frame type of input NDFs (NONE,DARK,FLASH)}
            helpkey *
          }

         parameter alpha {
                          # Trimming fraction
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.2
            prompt {Trim fraction }
            helpkey *
          }

         parameter sigmas {
                           # Number of sigmas for clipping (MODE + SIGMA)
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 4.0
            prompt {Clipping limit (standard deviations)}
            helpkey *
          }

         parameter niter {
                          # Number of refining iterations (MODE)
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Number of clipping iterations}
            helpkey *
          }

         parameter min {
                        # Minimum value in combination
            type _REAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Minimum allowed value}
            helpkey *
          }

         parameter max {
                        # Minimum value in combination
            type _REAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Maximum allowed value}
            helpkey *
          }

         parameter minpix {
                           # Minimum number of contributing pixels
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Minimum number of contributing pixels per output pixel}
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from MAKECAL}
            prompt {Title for the output NDF}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }
# @(#)makecal.ifl	2.12     9/9/96     2
#+
#  Name:
#     CALCOR.IFL
#
#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     30-MAY-1991 (PDRAPER):
#     	 Original Version
#     4-JUL-1991 (PDRAPER):
#     	 Added associations and helpkey info.
#     2-FEB-1994 (PDRAPER):
#     	 Added KEEPIN parameter (USEEXT and TYPE already present)
#     {enter_further_changes_here}

#-

      action calcor {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # List of input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter out {
                        # Output NDF
            position 2
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of output NDFs}
            helpkey *
          }

         parameter cal {
                        # Calibration NDF
            position 3
            type LITERAL
            access READ
            vpath PROMPT GLOBAL CURRENT
            ppath GLOBAL CURRENT
            association <-global.ccdpack_cal
            prompt {NDF containing the Dark or Flash calibration data}
            helpkey *
          }

         parameter expose {
                           # the exposure factor
            position 4
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Exposure times for input NDFs}
            helpkey *
          }

         parameter useext {
                           # Controls whether extension is used
                                 # for getting values.
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_useext
            default FALSE
            prompt {Use NDF extension information [G]}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter type {
                         # Frame types of input NDFs
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default NONE
            prompt {Frame type of input NDFs (NONE,DARK,FLASH)}
            helpkey *
          }

         parameter preserve {
                             # Whether to preserve input data type
            position 5
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_preser
            default TRUE
            prompt {Do you want to preserve the input type [G]}
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            position 6
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from CALCOR}
            prompt {Title for the output NDF}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter setsat {
                           # Whether saturation has occurred
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Saturated data set to a non-BAD value}
            helpkey *
          }

         parameter saturation {
                               # Saturation value
            type _DOUBLE
            access READ
            vpath CURRENT PROMPT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0D6
            prompt {Saturation value}
            helpkey *
          }

      }
# @(#)calcor.ifl	2.8     9/11/95     2
#+
#  Name:
#     MAKEFLAT.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     8-5-1991 (PDRAPER):
#     	 Original version.
#     4-JUL-1991 (PDRAPER):
#     	 Added associations and helpkey info.
#     2-FEB-1994 (PDRAPER):
#     	 Added KEEPIN parameter.
#     29-JUL-1996 (PDRAPER):
#        Added CLEAN parameter.
#     {enter_further_changes_here}

#-

      action makeflat {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # Names of the input NDFs.
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter out {
                        # Output NDF
            position 2
            type LITERAL
            access WRITE
            vpath PROMPT
            ppath CURRENT
            prompt {Output NDF name }
            association ->global.ccdpack_flat
            helpkey *
          }

         parameter method {
                           # Combination mode
            position 3
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MEDIAN
            prompt {Data combination method}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter alpha {
                          # Trimming fraction
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.2
            prompt {Trim fraction }
            helpkey *
          }

         parameter sigmas {
                           # Number of sigmas for clipping (MODE + SIGMA)
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 4.0
            prompt {Clipping limit (standard deviations)}
            helpkey *
          }

         parameter niter {
                          # Number of refining iterations (MODE)
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Number of clipping iterations}
            helpkey *
          }

         parameter min {
                        # Minimum value in combination
            type _REAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Minimum allowed value}
            helpkey *
          }

         parameter max {
                        # Minimum value in combination
            type _REAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Maximum allowed value}
            helpkey *
          }

         parameter minpix {
                           # Minimum number of contributing pixels
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Minimum number of contributing pixels per output pixel}
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from MAKEFLAT}
            prompt {Title for the output NDF}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter clean {
                          #  Whether to smooth & detect defects
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Clean input images of defects}
            helpkey *
          }

         parameter gamma {
                          # Number of sigmas to reject data
            type _REAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3.0
            prompt {Number of standard deviations to reject at}
            helpkey *
          }

         parameter iter {
                         # Number of clipping (GAMMA) rejecting iterations
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Number of rejecting iterations}
            helpkey *
          }

         parameter boxsize {
                            # The side of box for smooothing
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 15 15
            prompt {Sizes of box filter sides}
            helpkey *
            size *
          }

      }
# @(#)makeflat.ifl	2.12     7/31/96     2
#+
#  Name:
#     FLATCOR.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     14-MAY-1991 (PDRAPER):
#     	 Original version.
#     4-JUL-1991 (PDRAPER):
#     	 Added associations and helpkey info.
#     2-FEB-1994 (PDRAPER):
#     	 Added KEEPIN parameter.
#     {enter_further_changes_here}

#-

      action flatcor {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # Input NDF
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of input NDFs}
            helpkey *
          }

         parameter out {
                        # Output NDF
            position 2
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of output NDFs}
            helpkey *
          }

         parameter flat {
                         # Flatfield NDF
            position 3
            type LITERAL
            access READ
            vpath PROMPT GLOBAL CURRENT
            ppath GLOBAL CURRENT
            association <-global.ccdpack_flat
            prompt {Flatfield NDF}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter preserve {
                             # Whether to preserve input data type
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_preser
            default TRUE
            prompt {Do you want to preserve the input type [G]}
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from FLATCOR}
            prompt {Title for the output NDF}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # Log file name
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter setsat {
                           # Whether saturation has occurred
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Has saturated data been set to a non-BAD value}
            helpkey *
          }

         parameter saturation {
                               # Saturation value
            type _DOUBLE
            access READ
            vpath CURRENT PROMPT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0D6
            prompt {Saturation value}
            helpkey *
          }

      }
# @(#)flatcor.ifl	2.7     9/15/95     2
   }

   executable ccdpack_reg {
#+
#  Name:
#     FINDCENT.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     9-JUL-1992 (PDRAPER):
#     	 Original version.
#     8-MAR-1993 (PDRAPER):
#        Added new descriptions.
#     {enter_changes_here}

#-

      action findcent {

         helplib {$CCDPACK_HELP}

         parameter ndfnames {
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_ndfnam
            default TRUE
            prompt {Position list names are located in NDF extensions [G]}
            helpkey *
          }

         parameter in {
                       # Input NDF names
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {Input NDF names}
            helpkey *
          }

         parameter outlist {
                            # Input list of positions
            position 2
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default *.cent
            prompt {Output position list names}
            helpkey *
          }

         parameter inlist {
                           # Input list of positions
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Input position list names}
            helpkey *
          }

         parameter isize {
                          # Search box size
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 9
            prompt {Size of search box}
            helpkey *
          }

         parameter maxshift {
                             # Maximum shift in feature position
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 5.5D0
            prompt {Maximum shift in position}
            helpkey *
          }

         parameter maxiter {
                            # Maximum number of iterations
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Maximum number of refining iterations}
            helpkey *
          }

         parameter toler {
                          # Required tolerance
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.05D0
            prompt {Positional tolerance in centroid}
            helpkey *
          }

         parameter positive {
                             # Sign of features
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Features have positive signal}
            helpkey *
          }

         parameter namelist {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FINDCENT.LIS
            prompt {Output filename listing}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }
# @(#)findcent.ifl	2.1     11/30/93     2
#+
#  Name:
#     IDICURS.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     8-JUL-1992 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action idicurs {

         helplib {$CCDPACK_HELP}

         parameter outlist {
                            # Name of output list
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default IDICURS.LIS
            prompt {Filename for output list}
            helpkey *
          }

         parameter device {
                           # Name of the device.
            position 2
            type DEVICE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <->GLOBAL.IMAGE_DISPLAY
            default xwindows
            prompt {X display device}
            helpkey *
          }

         parameter in {
                       # NDFs to have extensions updated
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {List of NDFs to associate with positions}
            helpkey *
          }

         parameter keeplut {
                            # Keep current look-up-table?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Keep the current Look-Up-Table}
            helpkey *
          }

         parameter scroll {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Enable scrolling when zoomed}
            helpkey *
          }

         parameter arrows {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Use keyboard arrows for controlling scroll}
            helpkey *
          }

         parameter colour {
                           # Marker colour
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            range 0 4
            prompt {Marker colour index (0-4)}
            helpkey *
          }

         parameter msize {
                          # Size of marker as fraction of display
                                 # width
            type _REAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.03
            prompt {Relative size of marker (0-1)}
            helpkey *
          }

         parameter thick {
                          # Line thickness
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Line thickness}
            helpkey *
          }

         parameter memory {
                           # Memory id
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0
            range 0 1
            prompt {Memory id}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }
# @(#)idicurs.ifl	2.2     10/27/95     2
#+
#  Name:
#     FINDOBJ.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     22-OCT-1992 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action findobj {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # Input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {Name of input NDFs}
            helpkey *
          }

         parameter minpix {
                           # Minimum number of pixels per group
            position 2
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 6
            prompt {Minimum number of pixels per group}
            helpkey *
          }

         parameter outlist {
                            # Output position file list.
            position 3
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default *.dat
            prompt {Results file names}
            helpkey *
          }

         parameter namelist {
            type LITERAL
            access WRITE
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FINDOBJ.LIS
            prompt {Name of output filenames listing}
          }

         parameter thresh {
                           # Threshold to use for detecting objects
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC CURRENT
            ppath DYNAMIC CURRENT
            prompt {Detection threshold}
            helpkey *
          }

         parameter autothresh {
                             # Whether autothreshold values are used or not
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use automatic threshold values}
            helpkey *
          }

         parameter binfrac {
                            # Fraction of total counts in one
				     # bin
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 2.5
            prompt {Fraction of counts in one bin (percent)}
            helpkey *
          }

         parameter oversamp {
                             # Oversampling factor
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 5
            prompt {Histogram oversampling factor}
            helpkey *
          }

         parameter useper {
                           # Whether to use percentile for
                           # threshold estimation or not
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use percentiles to estimate threshold }
            helpkey *
          }

         parameter percentile {
                               # Percentile for threshold estimate
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Percentile for detection threshold}
            default 96.0
            helpkey *
          }

         parameter nsigma {
                           # Number of sigmas above background
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Standard deviations above detection threshold}
            default 5.0
            helpkey *
          }

         parameter touch {
                          # Whether to pixel groups may touch the
                          # edges of the array
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {May pixel groups touch the edges of array}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }
# @(#)findobj.ifl	2.1     11/30/93     2
#+
#  Name:
#     REGISTER.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     10-JUL-1992 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action register {

         helplib {$CCDPACK_HELP}

         parameter inlist {
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {Names of position list files}
            helpkey *
          }

         parameter fittype {
                            # Fittype parameter
            position 2
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 5
            range 1 6
            prompt {Type of fit to be performed (1-6) }
            helpkey *
          }

         parameter refpos {
            position 3
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Position of reference set}
            helpkey *
          }

         parameter outref {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Name of extended reference set}
            default !
            helpkey *
          }

         parameter placein {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default NDF
            prompt {Store transformation structures in}
            helpkey *
          }

         parameter toler {
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.001D0
            prompt {Convergence tolerance}
            helpkey *
          }

         parameter ndfnames {
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_ndfnam
            prompt {Position list names in NDF extensions [G]}
            default TRUE
            helpkey *
          }

         parameter in {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of NDFs to contain transforms}
            helpkey *
          }

         parameter trfile {
            type TRFILE
            access WRITE
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Name of container file to store transforms}
            helpkey *
          }

         parameter xfor {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Forward X transformation}
            helpkey *
          }

         parameter xinv {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Inverse X transformation}
            helpkey *
          }

         parameter yfor {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Forward Y transformation}
            helpkey *
          }

         parameter yinv {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Inverse Y transformation}
            helpkey *
          }

         parameter full {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Perform a full transformation}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter classify {
                             # Add a classification structure
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Add classifications}
            helpkey *
          }

         parameter class {
                          # Classifications
            type _CHAR
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Transform classification string}
            helpkey *
          }

         parameter fa {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fb {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fc {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fd {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fe {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter ff {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fg {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fh {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fi {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fj {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fk {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fl {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fm {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fn {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fo {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fp {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fq {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fr {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fs {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter ft {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fu {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fv {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fw {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fx {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fy {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }

         parameter fz {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey REGISTER parameters FA-FZ
          }


         parameter pa {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pb {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pc {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pd {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pe {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pf {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pg {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter ph {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pi {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT {}
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pj {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pk {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pl {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pm {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pn {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter po {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pp {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pq {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pr {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter ps {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pt {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pu {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pv {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pw {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter px {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter py {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

         parameter pz {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0d0
            prompt {Initial guess at parameter value}
            helpkey REGISTER parameters PA-PZ
          }

      }
# @(#)register.ifl	2.1     11/30/93     2
#+
#  Name:
#     TRANLIST.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     23-JUL-1992 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action tranlist {

         helplib {$CCDPACK_HELP}

         parameter inlist {
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {Names of input position lists}
            helpkey *
          }

         parameter outlist {
            position 2
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Names for output lists}
            helpkey *
          }

         parameter trtype {
            position 3
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default COEFF
            prompt {Transformation type}
            helpkey *
          }

         parameter ndfnames {
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_ndfnam
            default TRUE
            prompt {Position list names in NDF extensions [G]}
            helpkey *
          }

         parameter inext {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Locate transform structure in NDF extensions}
            helpkey *
          }

         parameter namelist {
            type LITERAL
            access WRITE
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRANLIST.LIS
            prompt {Name of output filenames listing}
          }

         parameter tr {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0 1 0 0 0 1
            prompt {Linear transformation coefficients (6)}
            helpkey *
            size *
          }

         parameter xfor {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {X mapping expression}
            helpkey *
          }

         parameter yfor {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Y mapping expression}
            helpkey *
          }

         parameter transform {
            type TRN
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Transformation structure}
            helpkey *
          }

         parameter forward {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use forward transformation}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter pa {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pb {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pc {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pd {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pe {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pf {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pg {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter ph {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pi {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3.14159265359D0
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pj {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pk {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pl {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pm {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pn {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter po {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pp {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pq {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pr {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter ps {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pt {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pu {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pv {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pw {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter px {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter py {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter pz {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey TRANLIST parameters PA-PZ
          }

         parameter fa {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fb {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fc {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fd {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fe {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter ff {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fg {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fh {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fi {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fj {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fk {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fl {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fm {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fn {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fo {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fp {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fq {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fr {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fs {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter ft {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fu {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fv {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fw {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fx {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fy {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

         parameter fz {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey TRANLIST parameters FA-FZ
          }

      }
# @(#)tranlist.ifl	2.1     11/30/93     2
#+
#  Name:
#     PLOTLIST.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     24-SEP-1992 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action plotlist {

         helplib {$CCDPACK_HELP}

         parameter inlist {
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {Input list}
            helpkey *
          }

         parameter ndfnames {
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_ndfnam
            default TRUE
            prompt {Position list names in NDF extensions [G]}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter msize {
            type _REAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 2.5
            prompt {Marker size (multiple of default)}
            helpkey *
          }

         parameter mtype {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 2
                     # plus sign
            prompt {Marker type (0-31) -ve uses ids}
            helpkey *
          }

         parameter palnum {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
                     # Green
            prompt {Pen number}
            helpkey *
          }

         parameter thick {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1
                     # Green
            prompt {Thickness of markers}
            helpkey *
          }

         parameter clear {
            access READ
            type _LOGICAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Clear display device}
            helpkey *
          }

         parameter device {
            position 2
            access READ
            vpath PROMPT GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <->GLOBAL.GRAPHICS_DEVICE
            default xwindows
            ptype DEVICE
            prompt {Name of device}
            helpkey *
          }

      }
# @(#)plotlist.ifl	2.1     11/30/93     2
#+
#  Name:
#     FINDOFF.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     10-SEP-1992 (PDRAPER):
#     	 Original version.
#     29-SEP-1992 (PDRAPER):
#     	 Now FINDOFF.
#     {enter_further_changes_here}

#-

      action findoff {

         helplib {$CCDPACK_HELP}

         parameter inlist {
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {Names of position lists}
            helpkey *
          }

         parameter error {
            position 2
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0
            prompt {Error in positions}
            helpkey *
          }

         parameter outlist {
            position 3
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Names for output position lists}
            helpkey *
          }

         parameter ndfnames {
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_ndfnam
            default TRUE
            prompt {Position list names in NDF extensions [G]}
            helpkey *
          }

         parameter fast {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Perform FAST algorithm}
            helpkey *
          }

         parameter failsafe {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Perform SLOW algorithm if FAST fails}
            helpkey *
          }

         parameter namelist {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FINDOFF.LIS
            prompt {Name of output filenames listing}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter complete {
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.5D0
            prompt {Minimum completeness level}
            helpkey *
          }

         parameter usecomp {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use completeness as weight}
            helpkey *
          }

         parameter minsep {
            type _DOUBLE
            access READ
            vpath CURRENT DYNAMIC DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default 5.0
            prompt {Minimum distance between positions}
            helpkey *
          }

         parameter minmatch {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Minimum number of positions required for match}
            helpkey *
          }

      }
# @(#)findoff.ifl	2.3     2/14/96     2
#+
#  Name:
#     PAIRNDF.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK - Durham University)
#     {enter_new_authors_here}

#  History:
#     9-FEB-1993 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action pairndf {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # Input list of NDF names
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of NDFs}
            helpkey *
          }

         parameter outlist {
                            # Names of output lists
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Names for output lists}
            default *.DAT
            helpkey *
          }

         parameter device {
                           # Name of IDI device
            position 3
            ptype DEVICE
            access READ
            vpath PROMPT GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <->GLOBAL.IMAGE_DISPLAY
            default xwindows
            prompt {Name of display device}
            helpkey *
          }

         parameter percentiles {
                                # Percentage histogram range
            position 4
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 2 98
            prompt {Display percentiles}
            helpkey *
            size *
          }

         parameter palfrac {
                            # Fraction of display surface used
            type _DOUBLE
                        #	for palette (X)
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.25D0
            prompt {Fraction of display surface for palette}
            helpkey *
          }

         parameter fillfrac {
                             # Fraction of scratch area which an
				 # image may fill.
            type _DOUBLE
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0.55D0
            prompt {Fraction of scratch area for displayed image}
            helpkey *
          }

         parameter keeplut {
                            # Keep current look-up-table?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Keep the current Look-Up-Table}
            helpkey *
          }

         parameter makebig {
                            # Make images big enough to fill area aways
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Make images as big as possible}
            helpkey *
          }

         parameter msize {
                          # Size of marker as fraction of display width
            type _REAL
            access READ
            vpath CURRENT DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default 0.03
            prompt {Relative size of feature marker (0-1)}
            helpkey *
          }

         parameter thick {
                          # Line thickness
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Feature marker thickness}
            helpkey *
          }

         parameter memory {
                           # Memory id
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0
            range 0 1
            prompt {Memory id}
            helpkey *
          }

         parameter namelist {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default PAIRNDF.LIS
            prompt {Output filenames list}
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }

# @(#)pairndf.ifl	2.1     11/30/93     2
#+
#  Name:
#     CCDEDIT.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK - Durham University)
#     {enter_new_authors_here}

#  History:
#     14-JUN-1993 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action ccdedit {

         helplib {$CCDPACK_HELP}

         parameter mode {
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default ALIST
            prompt {Editing mode (ALIST,ERASE,TRANSFORM,INVERT)}
            helpkey *
          }

         parameter in {
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of NDFs}
            helpkey *
          }

         parameter inlist {
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {Names of position lists to associate}
            helpkey *
          }

         parameter trtype {
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default COEFF
            prompt {Transformation type}
            helpkey *
          }

         parameter name {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Name of extension component}
            helpkey *
          }

         parameter tr {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 0 1 0 0 0 1
            prompt {Linear transformation coefficients (6)}
            helpkey *
            size *
          }

         parameter fittype {
                            # Fittype parameter
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 5
            range 1 5
            prompt {Type of linear transform (1-5) }
            helpkey *
          }

         parameter transform {
            type TRN
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Transformation structure}
            helpkey *
          }

         parameter xfor {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Expression for X forward mapping}
            helpkey *
          }

         parameter yfor {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Expression for Y forward mapping}
            helpkey *
          }

         parameter xinv {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Expression for X inverse mapping}
            helpkey *
          }

         parameter yinv {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Expression for Y inverse mapping}
            helpkey *
          }

         parameter classify {
                             # Add a classification structure
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Add classifications}
            helpkey *
          }

         parameter class {
            type _CHAR
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Transformation classifications}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter pa {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pb {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pc {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pd {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pe {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pf {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pg {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter ph {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pi {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3.14159265359D0
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pj {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pk {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pl {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pm {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pn {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter po {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pp {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pq {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pr {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter ps {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pt {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pu {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pv {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pw {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter px {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter py {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter pz {
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Constant value}
            helpkey CCDEDIT parameters PA-PZ
          }

         parameter fa {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fb {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fc {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fd {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fe {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter ff {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fg {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fh {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fi {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fj {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fk {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fl {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fm {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fn {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fo {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fp {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fq {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fr {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fs {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter ft {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fu {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fv {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fw {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fx {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fy {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

         parameter fz {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Sub-expression}
            helpkey CCDEDIT parameters FA-FZ
          }

      }
# @(#)ccdedit.ifl	2.2     9/12/95     2
#+
#  Name:
#     MAKEMOS.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     RFWS: R.F. Warren-Smith (STARLINK, RAL)
#     {enter_new_authors_here}

#  History:
#     26-FEB-1992 (RFWS):
#        Original version.
#     {enter_changes_here}

#-

      action makemos {

         helplib {$CCDPACK_HELP}

         parameter alpha {
                          # Trimming fraction
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 0.2
            prompt {Trimming fraction}
            helpkey *
          }

         parameter cmpvar {
                           # Use variance during inter-comparison?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use variance during inter-comparison?}
            helpkey *
          }

         parameter genvar {
                           # Generate output variance information?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Generate output variance information?}
            helpkey *
          }

         parameter in {
                       # List of input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter listin {
                           # List input NDFs?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {List input NDF names?}
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            default CCDPACK.LOG
            prompt {Logfile name [G]}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            default BOTH
            prompt {Write output to (Logfile,Terminal,Neither,Both) [G]}
            helpkey *
          }

         parameter max {
                        # Maximum value for data combination
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Maximum data value}
            helpkey *
          }

         parameter maxit {
                          # Maximum number of inter-comparison iterations
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 20
            prompt {Maximum number of inter-comparison iterations}
            helpkey *
          }

         parameter method {
                           # Data combination method
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MEDIAN
            prompt {Data combination method}
            helpkey *
          }

         parameter min {
                        # Minimum value for data combination
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Minimum data value}
            helpkey *
          }

         parameter modify {
                           # Modify input NDFs?
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Modify input NDFs?}
            helpkey *
          }

         parameter niter {
                          # Number of mode refining iterations
            type _INTEGER
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 7
            prompt {Number of mode refining iterations}
            helpkey *
          }

         parameter out {
                        # Output mosaic NDF
            position 2
            type NDF
            access WRITE
            vpath PROMPT
            association ->global.data_array
            prompt {Output mosaic NDF}
            helpkey *
          }

         parameter optov {
                          # Optimum number of overlaps per NDF
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 3
            prompt {Optimum number of overlaps per NDF}
            helpkey *
          }

         parameter preserve {
                             # Preserve input data type?
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_preser
            default TRUE
            prompt {Preserve input data type [G]}
            helpkey *
          }

         parameter ref {
                        # Reference NDF
            type _CHAR
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Reference NDF}
            helpkey *
          }

         parameter scale {
                          # Adjust scale-factors?
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Adjust scale-factors?}
            helpkey *
          }

         parameter sigmas {
                           # Number of standard deviations for clipping
            type _REAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default 4.0
            prompt {Clipping limit (standard deviations)}
            helpkey *
          }

         parameter skysup {
                           # Sky noise suppression factor
            type _REAL
            access READ
            vpath DYNAMIC DEFAULT
            ppath DYNAMIC DEFAULT
            default 10.0
            prompt {Sky noise suppression factor}
            helpkey *
          }

         parameter title {
                          # Title for output mosaic NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from MAKEMOS}
            prompt {Title for output mosaic}
            helpkey *
          }

         parameter tols {
                         # Scale-factor accuracy tolerance
            type _REAL
            access READ
            vpath CURRENT DYNAMIC DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default 0.001
            prompt {Fractional scale-factor tolerance}
            helpkey *
          }

         parameter tolz {
                         # Zero-point accuracy tolerance
            type _REAL
            access READ
            vpath CURRENT DYNAMIC DEFAULT
            ppath CURRENT DYNAMIC DEFAULT
            default 0.05
            prompt {Zero-point tolerance}
            helpkey *
          }

         parameter usevar {
                           # Use variance during data combination?
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Use variance during data combination?}
            helpkey *
          }

         parameter weights {
                            # Weighting factors for input NDFs
            type _REAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {NDF weighting factors}
            helpkey *
          }

         parameter zero {
                         # Adjust zero-points?
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Adjust zero-points?}
            helpkey *
          }

      }
# @(#)makemos.ifl	2.1     11/30/93     2
#+
#  Name:
#     TRANNDF.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     MJC: Malcolm J. Currie (STARLINK)
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     1993 March 16 (MJC):
#     	 Original version.
#     1993 March 25 (MJC):
#     	 Added LCOORD, UCOORD, LBOUND, and UBOUND. Revised SHAPE.
#	 Removed SAME.
#     18-JUN-1993 (PDRAPER):
#     	 Changed to TRANNDF.
#     {enter_further_changes_here}

#-

      action tranndf {

         helplib {$CCDPACK_HELP}

         parameter conserve {
                             # Conserve flux
            type _LOGICAL
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            prompt {Conserve flux?}
            helpkey *
            default TRUE
          }

         parameter in {
                       # Input NDF
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of NDFs}
            helpkey *
          }

         parameter out {
                        # Output NDF
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            association ->global.data_array
            prompt {Output NDF}
            helpkey *
          }

         parameter method {
                           # Resampling method
            position 3
            type LITERAL
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Re-sampling method}
            helpkey *
            default Nearest
          }

         parameter shape {
                          # How to shape output NDFs
            type LITERAL
            access READ
            ppath CURRENT DEFAULT
            vpath CURRENT DEFAULT
            default AUTO
            prompt {Method used to get bounds of output NDFs}
            helpkey *
          }

         parameter inext {
                          # Get transformation structures from NDFs
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Locate transform structure in NDF extensions}
            helpkey *
          }

         parameter lbound {
                           # Lower bounds of output NDFs
            type _DOUBLE
            vpath DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            prompt {Lower bounds of the output NDFs}
            helpkey *
            size *
          }

         parameter ubound {
                           # Upper bound of output NDFs
            type _DOUBLE
            vpath DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            prompt {Upper bounds of the output NDFs}
            helpkey *
            size *
          }

         parameter transform {
                              # Transformation structure
            access READ
            type TRN
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Transformation structure}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            type LITERAL
            access READ
            vpath DEFAULT {PROMPT }
            ppath CURRENT DEFAULT
            default {Output from TRANNDF}
            prompt {Title for the output NDFs}
            helpkey *
          }

      }
# @(#)tranndf.ifl	2.1     11/30/93     2
   }


   executable ccdpack_res {
#+
#  Name:
#     CCDSETUP.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     1-JUL-1991 (PDRAPER):
#     	 Original version.
#     4-JUL-1991 (PDRAPER):
#        Added helpkey info.
#     15-JAN-1992 (PDRAPER):
#        Added GENVAR changed prompts.
#     21-AUG-1993 (PDRAPER):
#        Added NDFNAMES.
#     14-SEP-1993 (PDRAPER):
#     	 Added RESTORE and SAVE options. Added DYNAMIC ppaths for
#	 parameters which are restored.
#     28-JAN-1994 (PDRAPER):
#     	 Added saturation stuff.
#     {enter_further_changes_here}

#-

      action ccdsetup {

         helplib {$CCDPACK_HELP}

         parameter restore {
                            # Use a restoration file
            type _LOGICAL
            access READ
            vpath PROMPT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Use a setup restoration file}
            helpkey *
          }

         parameter restorefile {
                                # Name of restoration file
            type LITERAL
            access READ
            vpath PROMPT DEFAULT
            ppath CURRENT DEFAULT
            default CCDPACK_SETUP.DAT
            prompt {Setup restoration file}
            helpkey *
          }

         parameter adc {
                        # The analogue to digital conversion
                                 # factor
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Number of electrons per ADU}
            association <->global.ccdpack_adc
            helpkey *
          }

         parameter bounds {
                           # Pixel indices of bias strips
            type _INTEGER
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            prompt {Pixel indices of bias strips (in pairs)}
            association <->global.ccdpack_bounds
            default !
            helpkey *
            size *
          }

         parameter rnoise {
                           # The readout noise
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Readout noise (ADUs)}
            association <->global.ccdpack_rnoise
            helpkey *
          }

         parameter mask {
                         # Mask NDF
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Mask data file}
            association <->global.ccdpack_mask
            helpkey *
          }

# Full name of the mask NDF. Used to write out to global file.
         parameter maskname {
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Private parameter}
            association ->global.ccdpack_mask
            default 0.0
          }

         parameter direction {
                              # Readout direction
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default "X"
            prompt {Readout direction (X or Y)}
            association <->global.ccdpack_direct
            helpkey *
          }

         parameter deferred {
                             # Deferred charge value
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Deferred charge (ADUs)}
            association <->global.ccdpack_defer
            helpkey *
          }

         parameter extent {
                           # Extent of useful CCD area
            type _INTEGER
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            prompt {Useful CCD region (xmin,xmax,ymin,ymax)}
            default !
            association <->global.ccdpack_extent
            helpkey *
            size *
          }

         parameter logto {
                          # Log output to ?
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            association <->global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both)}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            prompt {logfile name}
            association <->global.ccdpack_logfile
            default CCDPACK.LOG
            helpkey *
          }

         parameter preserve {
                             # Whether to preserve input data type
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default TRUE
            association <->global.ccdpack_preser
            prompt {Do you want to preserve your input data types}
            helpkey *
          }

         parameter genvar {
                           # Whether to generate variances or not
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default TRUE
            association <->global.ccdpack_genvar
            prompt {Do you want to generate variance estimates}
            helpkey *
          }

         parameter ndfnames {
                             # Whether positions list are associated
				 # with NDFs
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default TRUE
            prompt {Associate position lists with NDF names}
            association <->global.ccdpack_ndfnam
            helpkey *
          }

         parameter save {
                         # Whether to save CCD parameters or not
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Save CCD parameters for future restoration}
            helpkey *
          }

         parameter savefile {
                             # Name of the file to save parameters
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default CCDPACK_SETUP.DAT
            prompt {File to store CCD parameters}
            helpkey *
          }

         parameter saturate {
                             # Look for saturated values
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default FALSE
            prompt {Look for saturated pixels}
            association <->global.ccdpack_satur
            helpkey *
          }

         parameter saturation {
                               # The saturation value.
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default 1.0D6
            prompt {Saturation value}
            association <->global.ccdpack_satval
            helpkey *
          }

         parameter setsat {
                           # Whether to set saturated pixels to
				 # the saturation value or not.
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default FALSE
            prompt {Set saturated pixels to saturation value}
            association <->global.ccdpack_setsat
            helpkey *
          }

      }
# @(#)ccdsetup.ifl	2.15     6/4/97     2
#+
#  Name:
#     CCDCLEAR.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     5-JUL-1991 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action ccdclear {

         helplib {$CCDPACK_HELP}

         parameter byname {
                           # Mode of operation
            position 1
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Clear parameters by specific name}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The CCDPACK log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            prompt {Name of CCDPACK logfile [G]}
            association <-global.ccdpack_logfile
            default CCDPACK.LOG
            helpkey *
          }

         parameter names {
                          # Name of parameters to clear
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Parameter names}
            helpkey *
          }

      }
# @(#)ccdclear.ifl	2.1     11/30/93     2
#+
#  Name:
#     CCDNOTE.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     11-JUL-1991 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action ccdnote {

         helplib {$CCDPACK_HELP}

         parameter note {
                         # Note to enter into log file.
            position 1
            type LITERAL
            access READ
            vpath PROMPT
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

      }
# @(#)ccdnote.ifl	2.1     11/30/93     2
#+
#  Name:
#     CCDSHOW.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     5-JUL-1991 (PDRAPER):
#     	 Original version.
#     28-JAN-1994 (PDRAPER):
#     	 Added saturation extensions.
#     {enter_further_changes_here}

#-

      action ccdshow {

         helplib {$CCDPACK_HELP}

         parameter logto {
                          # Log output to ?
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            prompt {logfile name [G]}
            association <-global.ccdpack_logfile
            default CCDPACK.LOG
            helpkey *
          }

         parameter logtod {
                           # Dummy version of LOGTO to get just the global value.
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            prompt {Private parameter [G]}
            association <-global.ccdpack_logto
            default !
          }

         parameter logfiled {
                             # Dummy version of LOGFILE to get just
				 # the global value.
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            prompt {Private parameter [G]}
            association <-global.ccdpack_logfile
            default !
          }

         parameter adc {
                        # The analogue to digital conversion factor
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_adc
          }

         parameter bounds {
                           # Pixel indices of bias strips
            type _INTEGER
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            association <-global.ccdpack_bounds
            default !
            size *
          }

         parameter rnoise {
                           # The readout noise
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_rnoise
          }

         parameter mask {
                         # Mask NDF
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_mask
          }

         parameter flat {
                         # flatfield
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_flat
          }

         parameter bias {
                         # Master bias
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_bias
          }

         parameter cal {
                        # Master calibration NDF
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_cal
          }

         parameter direction {
                              # Readout direction
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_direct
          }

         parameter deferred {
                             # Deferred charge value
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_defer
          }

         parameter extent {
                           # Extent of useful CCD area
            type _INTEGER
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_extent
            size *
          }

         parameter preserve {
                             # Whether to preserve input data type
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_preser
          }

         parameter genvar {
                           # Whether to generate variances or not
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_genvar
          }

         parameter ndfnames {
                             # Whether positions list are associated
				 # with NDFs
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_ndfnam
          }

         parameter saturate {
                             # Look for saturated values
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_satur
          }

         parameter saturation {
                               # The saturation value.
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_satval
          }

         parameter setsat {
                           # Whether to set saturated pixels to
				 # the saturation value or not.
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_setsat
          }

      }
# @(#)ccdshow.ifl	2.7     9/12/95     2
#+
#  Name:
#     CCDNDFAC.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK - Durham University)
#     {enter_new_authors_here}

#  History:
#     10-JUN-1993 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action ccdndfac {

         helplib {$CCDPACK_HELP}

         parameter namelist {
            position 1
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default CCDNDFAC.LIS
            prompt {Name of output file for NDF namelist}
          }

         parameter echo {
                         # Echo NDF names
            position 2
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Echo NDF names to user}
            helpkey *
          }

         parameter maxndf {
                           # Maximum number of NDFs that may be accessed.
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Maximum number of NDFs to access}
            helpkey *
          }

         parameter in {
                       # Single input group
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {List of NDFs}
            default !
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }
# @(#)ccdndfac.ifl	2.1     11/30/93     2
#+
#  Name:
#     CCDGENERATE.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     2-JUL-1992 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action ccdgenerate {

         helplib {$CCDPACK_HELP}

         parameter file {
                         # Name of input list
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List containing object positions etc.}
            helpkey *
          }

         parameter nseq {
                         # Number of test sequences to create
            position 2
            type _INTEGER
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 5
            range 1 26
            prompt {How many data sequences do you want}
            helpkey *
          }

         parameter ubnds {
            type _INTEGER
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Upper bounds}
            helpkey *
            size *
          }

         parameter type {
            type _CHAR
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default .sdf
            prompt {Output data type}
            helpkey *
          }

         parameter lbnds {
            type _INTEGER
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Lower bounds}
            helpkey *
            size *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }
# @(#)ccdgenerate.ifl	2.2     6/2/97     2
#+
#  Name:
#     PICINFO.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     29-SEP-1995 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action picinfo {

         parameter device {
            position 1
            access READ
            vpath PROMPT GLOBAL CURRENT PROMPT
            ppath GLOBAL CURRENT DEFAULT
            association <->GLOBAL.GRAPHICS_DEVICE
            default xwindows
            ptype DEVICE
            prompt {Name of device}
          }

      }
# @(#)picinfo.ifl   1.1   95/09/29 11:12:36   97/06/16 15:29:39
#+
#  Name:
#     IMPORT.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     8-DEC-1993 (PDRAPER):
#     	 Original version.
#     {enter_further_changes_here}

#-

      action import {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # List of Input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter table {
                          # Import control table
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default import.tab
            prompt {Import control table}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter namelist {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Input NDF name list}
          }


      }
# @(#)import.ifl	1.7     9/22/95     1
#+
#  Name:
#     PRESENT.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     17-FEB-1992 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action present {

         helplib {$CCDPACK_HELP}

         parameter simple {
                           # Whether input NDF names specified in one.
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Do input NDFs already have frame types}
            helpkey *
          }

         parameter multientry {
                               # Whether input group also has NDF
				 # types and factors.
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Does input list contain frame types and factors}
            helpkey *
          }

         parameter in {
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default *
            prompt {List of NDF names}
            helpkey *
          }

         parameter modify {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Modify existing extension items}
            helpkey *
          }

         parameter bias {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Bias frame names}
            helpkey *
          }

         parameter target {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Target frame names}
            helpkey *
          }

         parameter dark {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Dark frame names}
            helpkey *
          }

         parameter flash {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Pre-flash frame names}
            helpkey *
          }

         parameter flat {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Flatfield names}
            helpkey *
          }

         parameter masterbias {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Name of master bias}
            helpkey *
          }

         parameter masterdark {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Name of master dark}
            helpkey *
          }

         parameter masterflash {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Name of master flash}
            helpkey *
          }

         parameter masterflat {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Master flatfield names}
            helpkey *
          }

         parameter adddark {
            type _LOGICAL
            access READ
            vpath DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default FALSE
            prompt {Add dark exposure times to NDFs}
            helpkey *
          }

         parameter addflash {
            type _LOGICAL
            access READ
            vpath DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default FALSE
            prompt {Add pre-flash exposure times to NDFs}
            helpkey *
          }

         parameter ftype {
                          # Frame type parameter
            type LITERAL
            access READ
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Frame type}
            helpkey *
          }

         parameter filter {
                           # Frame type parameter
            type LITERAL
            access READ
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Filter type}
            helpkey *
          }

         parameter adc {
                        # The analogue to digital conversion
                                 # factor
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            prompt {Number of electrons per ADU [G]}
            association <-global.ccdpack_adc
            helpkey *
          }

         parameter bounds {
                           # Pixel indices of bias strips
            type _INTEGER
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            prompt {Pixel indices of bias strips (in pairs) [G]}
            association <-global.ccdpack_bounds
            default !
            helpkey *
            size *
          }

         parameter rnoise {
                           # The readout noise
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            prompt {Readout noise (ADUs) [G]}
            association <-global.ccdpack_rnoise
            helpkey *
          }

         parameter biasvalue {
                              # Bias zero point value
            type _DOUBLE
            access READ
            vpath PROMPT DEFAULT
            ppath DEFAULT
            default !
            prompt {Nominal bias value (ADUs)}
            association <-global.ccdpack_biasval
            helpkey *
          }

         parameter saturation {
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            prompt {Data saturation value (ADUs) [G]}
            association <-global.ccdpack_satval
            helpkey *
          }

         parameter direction {
                              # Readout direction
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            prompt {Readout direction (X or Y) [G]}
            association <-global.ccdpack_direct
            helpkey *
          }

         parameter deferred {
                             # Deferred charge value
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            prompt {Deferred charge (ADUs) [G]}
            association <-global.ccdpack_defer
            helpkey *
          }

         parameter extent {
                           # Extent of useful CCD area
            type _INTEGER
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            prompt {Useful CCD region (xmin,xmax,ymin,ymax) [G]}
            default !
            association <-global.ccdpack_extent
            helpkey *
            size *
          }

         parameter darktime {
                             # Frame dark time
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Dark count exposure time}
            helpkey *
          }

         parameter flashtime {
                              # Frame pre-flash exposure time
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Pre-flash exposure time}
            helpkey *
          }

         parameter logto {
                          # Log output to ?
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            prompt {logfile name [G]}
            association <-global.ccdpack_logfile
            default CCDPACK.LOG
            helpkey *
          }

         parameter namelist {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Input NDF name list}
          }

         parameter onefilter {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Use one filter type}
            helpkey *
          }

         parameter onedarktime {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Use one dark count exposure time}
            helpkey *
          }

         parameter oneflashtime {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Use one pre-flash exposure time}
            helpkey *
          }

         parameter zeroed {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Does the MASTER_BIAS frame have a mean of zero}
            helpkey *
          }

         parameter masters {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Do you have some master calibration frames}
            helpkey *
          }

      }
# @(#)present.ifl	1.18     11/15/95     1
#+
#  Name:
#     SCHEDULE.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     {enter_new_authors_here}

#  History:
#     20-FEB-1992 (PDRAPER):
#     	 Original version.
#     {enter_further_changes_here}

#-

      action schedule {

         helplib {$CCDPACK_DIR}

         parameter in {
                       # Input NDFs list
            position 1
            type LITERAL
            access READ
            vpath PROMPT GLOBAL DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            default *
            association <-global.ccdpack_ndflist
            prompt {Names of input NDFs}
            helpkey *
          }

         parameter script {
                           # Reduction script name
            position 2
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default schedule
            prompt {Name of output script}
            helpkey *
          }

         parameter stype {
                          # Reduction script type
            position 3
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default csh
            prompt {Type of output script}
            helpkey *
          }

         parameter debias {
                           # Type of debiassing to perform
            type _INTEGER
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Debiassing method}
            helpkey *
          }

         parameter exelogfile {
                               # logfile name if executing now.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default schedule.log
            prompt {Name of output script}
            helpkey *
          }

         parameter interp {
                           # Type of interpolation performed
            type _INTEGER
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Interpolation method}
            helpkey *
          }

         parameter spacesave {
                              # How to save disk space
            type LITERAL
            access READ
            vpath PROMPT DEFAULT
            ppath DEFAULT
            default none
            prompt {Save disk space (none,some,lots)}
            helpkey *
          }

         parameter execute {
                            # Whether to execute the command
				 # procedure or not.
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Execute the command procedure}
            helpkey *
          }

         parameter irflats {
                            # Flatfields may be TARGETS!
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Using TARGETS as possible flatfields}
            helpkey *
          }

         parameter masterbias {
                               # Name of master bias NDF
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MASTER_BIAS
            prompt {Name of master bias NDF}
            helpkey *
          }

         parameter masterdark {
                               # Name of master dark NDF
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MASTER_DARK
            prompt {Name of master dark NDF}
            helpkey *
          }

         parameter masterflash {
                                # Name of master flash NDF
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MASTER_FLASH
            prompt {Name of master pre-flash NDF}
            helpkey *
          }

         parameter masterflat {
                               # Prefix of master flat names
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default MASTER_FLAT
            prompt {Prefix name for master flats NDF}
            helpkey *
          }

         parameter debiasext {
                              # modification applied to NDF names
				 # output from DEBIAS
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -db
            prompt {Extension of names output from DEBIAS}
            helpkey *
          }

         parameter darkext {
                            # modification applied to NDF names
				 # output from CALCOR dark.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -dk
            prompt {Extension of names output after dark correction}
            helpkey *
          }

         parameter flashext {
                             # modification applied to NDF names
				 # output from CALCOR flash.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -fls
            prompt {Extension of names output after flash correction}
            helpkey *
          }

         parameter flatext {
                            # modification applied to NDF names
				 # output from FLATCOR.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -flt
            prompt {Extension of names output after flatfielding}
            helpkey *
          }

         parameter logto {
                          # Log output to ?
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            prompt {logfile name [G]}
            association <-global.ccdpack_logfile
            default CCDPACK.LOG
            helpkey *
          }

      }
# @(#)schedule.ifl	1.12     11/13/95     1
      action ccdimp {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # NDF to be modified
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath CURRENT
            prompt {Data structure to modify}
            helpkey *
          }

         parameter table {
                          # Keyword translation table
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS keyword translation table}
            helpkey *
          }

      }
# @(#)ccdimp.ifl   1.1   97/03/13 10:10:37   97/06/16 15:25:18
      action ccdexp {

         helplib {$CCDPACK_HELP}

         parameter in {
                       # NDF to be modified
            position 1
            type NDF
            access UPDATE
            vpath PROMPT
            ppath GLOBAL CURRENT
            prompt {Image data}
            helpkey *
          }

         parameter table {
                          # Keyword translation table
            position 2
            type FILENAME
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS keyword translation table}
            helpkey *
          }

      }
# @(#)ccdexp.ifl   1.1   97/03/13 10:10:36   97/06/16 15:25:12
   }


   executable ccdpack_scr {
#+
#  Name:
#     REDUCE.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK - Durham University)
#     {enter_new_authors_here}

#  History:
#     4-JUN-1997 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action reduce {

         helplib {$CCDPACK_HELP}

         parameter choice {
            type _CHAR
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default VIEW
            prompt {Continue or Select or View a file}
            helpkey *
          }

         parameter clear {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Clear existing global parameters}
            helpkey *
          }

         parameter index {
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Index of file}
            helpkey *
          }

         parameter known {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Inspect the known detectors}
            helpkey *
          }

         parameter manual {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Will you set frame types yourself}
            helpkey *
          }

         parameter restore {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Do you want to use a restoration file}
            helpkey *
          }

         parameter restorefile {
            type _CHAR
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default CCDPACK_SETUP.DAT
            prompt {Name of restoration file}
            helpkey *
          }

         parameter setgeom {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Do you want to define your CCD geometry}
            helpkey *
          }

         parameter table {
            type _CHAR
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default import.tab
            prompt {Import control table}
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

         parameter continue {
            type _LOGICAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default TRUE
          }

         parameter in {
                       # List of Input NDFs
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

#  These are IMPORTs parameters

         parameter debias {
                           # Type of debiassing to perform
            type _INTEGER
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Debiassing method}
            helpkey IMPORT PARAMETERS DEBIAS
          }

         parameter interp {
                           # Type of interpolation performed
            type _INTEGER
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Interpolation method}
            helpkey IMPORT PARAMETERS INTERP
          }

         parameter spacesave {
                              # How to save disk space
            type LITERAL
            access READ
            vpath PROMPT DEFAULT
            ppath DEFAULT
            default none
            prompt {Save disk space (none,some,lots)}
            helpkey IMPORT PARAMETERS SPACESAVE
          }


#  These are CCDSETUP's parameters.

         helplib {$CCDPACK_HELP}

         parameter adc {
                        # The analogue to digital conversion
                                 # factor
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Number of electrons per ADU}
            association <->global.ccdpack_adc
            helpkey *
          }

         parameter bounds {
                           # Pixel indices of bias strips
            type _INTEGER
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            prompt {Pixel indices of bias strips (in pairs)}
            association <->global.ccdpack_bounds
            default !
            helpkey *
            size *
          }

         parameter rnoise {
                           # The readout noise
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Readout noise (ADUs)}
            association <->global.ccdpack_rnoise
            helpkey *
          }

         parameter mask {
                         # Mask NDF
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Mask data file}
            association <->global.ccdpack_mask
            helpkey *
          }

# Full name of the mask NDF. Used to write out to global file.
         parameter maskname {
            type LITERAL
            access WRITE
            vpath DEFAULT
            prompt {Private parameter}
            association ->global.ccdpack_mask
            default 0.0
          }

         parameter direction {
                              # Readout direction
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Readout direction (X or Y)}
            association <->global.ccdpack_direct
            helpkey *
          }

         parameter deferred {
                             # Deferred charge value
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default !
            prompt {Deferred charge (ADUs)}
            association <->global.ccdpack_defer
            helpkey *
          }

         parameter extent {
                           # Extent of useful CCD area
            type _INTEGER
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            prompt {Useful CCD region (xmin,xmax,ymin,ymax)}
            default !
            association <->global.ccdpack_extent
            helpkey *
            size *
          }

         parameter preserve {
                             # Whether to preserve input data type
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default TRUE
            association <->global.ccdpack_preser
            prompt {Do you want to preserve your input data types}
            helpkey *
          }

         parameter genvar {
                           # Whether to generate variances or not
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default TRUE
            association <->global.ccdpack_genvar
            prompt {Do you want to generate variance estimates}
            helpkey *
          }

         parameter ndfnames {
                             # Whether positions list are associated
				 # with NDFs
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default TRUE
            prompt {Associate position lists with NDF names}
            association <->global.ccdpack_ndfnam
          }

         parameter save {
                         # Whether to save CCD parameters or not
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Save CCD parameters for future restoration}
            helpkey *
          }

         parameter savefile {
                             # Name of the file to save parameters
            type LITERAL
            access WRITE
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default CCDPACK_SETUP.DAT
            prompt {File to store CCD parameters}
            helpkey *
          }

         parameter saturate {
                             # Look for saturated values
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default FALSE
            prompt {Look for saturated pixels}
            association <->global.ccdpack_satur
          }

         parameter biasvalue {
                              # Bias zero point value
            type _DOUBLE
            access READ
            vpath DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Nominal bias value (ADUs)}
            association <-global.ccdpack_biasval
            helpkey *
          }

         parameter saturation {
                               # The saturation value.
            type _DOUBLE
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default 1.0D6
            prompt {Saturation value}
            association <->global.ccdpack_satval
          }

         parameter setsat {
                           # Whether to set saturated pixels to
				 # the saturation value or not.
            type _LOGICAL
            access READ
            vpath PROMPT DYNAMIC GLOBAL CURRENT DEFAULT
            ppath DYNAMIC GLOBAL CURRENT DEFAULT
            default FALSE
            prompt {Set saturated pixels to saturation value}
            association <->global.ccdpack_setsat
          }

#  Present parameters

         parameter simple {
                           # Whether input NDF names specified in
				 # one.
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Do input NDFs already have frame types}
            helpkey *
          }

         parameter multientry {
                               # Whether input group also has NDF
				 # types and factors.
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Does input list contain frame types and factors}
            helpkey *
          }

         parameter modify {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default TRUE
            prompt {Modify existing extension items}
            helpkey *
          }

         parameter bias {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Bias frame names}
            helpkey *
          }

         parameter target {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Target frame names}
            helpkey *
          }

         parameter dark {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Dark frame names}
            helpkey *
          }

         parameter flash {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Pre-flash frame names}
            helpkey *
          }

         parameter flat {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Flatfield names}
            helpkey *
          }

         parameter masterbias {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Name of master bias}
            helpkey *
          }

         parameter masterdark {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Name of master dark}
            helpkey *
          }

         parameter masterflash {
            type READ
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Name of master flash}
            helpkey *
          }

         parameter masterflat {
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT DEFAULT
            default !
            prompt {Master flatfield names}
            helpkey *
          }

         parameter adddark {
            type _LOGICAL
            access READ
            vpath DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default FALSE
            prompt {Add dark exposure times to NDFs}
            helpkey *
          }

         parameter addflash {
            type _LOGICAL
            access READ
            vpath DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default FALSE
            prompt {Add pre-flash exposure times to NDFs}
            helpkey *
          }

         parameter ftype {
                          # Frame type parameter
            type LITERAL
            access READ
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Frame type}
            helpkey *
          }

         parameter filter {
                           # Frame type parameter
            type LITERAL
            access READ
            vpath PROMPT
            ppath DYNAMIC CURRENT
            prompt {Filter type}
            helpkey *
          }

         parameter darktime {
                             # Frame dark time
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Dark count exposure time}
            helpkey *
          }

         parameter flashtime {
                              # Frame pre-flash exposure time
            type _DOUBLE
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default !
            prompt {Pre-flash exposure time}
            helpkey *
          }

         parameter onefilter {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Use one filter type}
            helpkey *
          }

         parameter onedarktime {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Use one dark count exposure time}
            helpkey *
          }

         parameter oneflashtime {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Use one pre-flash exposure time}
            helpkey *
          }

         parameter zeroed {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Does the MASTER_BIAS frame have a mean of zero}
            helpkey *
          }

         parameter masters {
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default FALSE
            prompt {Do you have some master calibration frames}
            helpkey *
          }

#  Import parameters

         parameter namelist {
            type LITERAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default !
            prompt {Input NDF name list}
          }

#  Schedule parameters

         parameter script {
                           # Reduction script name
            type LITERAL
            access READ
            vpath PROMPT DYNAMIC CURRENT DEFAULT
            ppath DYNAMIC CURRENT DEFAULT
            default schedule
            prompt {Name of output script}
            helpkey *
          }

         parameter stype {
                          # Reduction script type
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default csh
            prompt {Type of output script}
            helpkey *
          }

         parameter exelogfile {
                               # logfile name if executing now.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default schedule.log
            prompt {Name of output script}
            helpkey *
          }

         parameter execute {
                            # Whether to execute the command
				 # procedure or not.
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Execute the command procedure}
            helpkey *
          }

         parameter irflats {
                            # Flatfields may be TARGETS!
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Using TARGETS as possible flatfields}
            helpkey *
          }

         parameter debiasext {
                              # modification applied to NDF names
				 # output from DEBIAS
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -db
            prompt {Extension of names output from DEBIAS}
            helpkey *
          }

         parameter darkext {
                            # modification applied to NDF names
				 # output from CALCOR dark.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -dk
            prompt {Extension of names output after dark correction}
            helpkey *
          }

         parameter flashext {
                             # modification applied to NDF names
				 # output from CALCOR flash.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -fls
            prompt {Extension of names output after flash correction}
            helpkey *
          }

         parameter flatext {
                            # modification applied to NDF names
				 # output from FLATCOR.
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default -flt
            prompt {Extension of names output after flatfielding}
            helpkey *
          }

#  CCDclear parameters

         parameter byname {
                           # Mode of operation
            position 1
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt {Clear parameters by specific name}
            helpkey *
          }

         parameter names {
                          # Name of parameters to clear
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Parameter names}
            helpkey *
          }

      }
#+
#  Name:
#     CCDALIGN.IFL

#  Type of Module:
#     ADAM A-task parameter interface.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK - Durham University)
#     {enter_new_authors_here}

#  History:
#     20-MAY-1997 (PDRAPER):
#     	 Original version.
#     {enter_changes_here}

#-

      action ccdalign {

         helplib {$CCDPACK_HELP}

         parameter device {
                           # Name of display device.
            position 1
            type DEVICE
            access READ
            vpath PROMPT GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <->GLOBAL.IMAGE_DISPLAY
            default xw
            prompt {Name of display device}
            helpkey *
          }

         parameter percentiles {
                                # Percentage histogram range
            position 2
            type _REAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 2 98
            prompt {Display percentiles}
            helpkey *
            size *
          }

         parameter in {
                       # Single input group
            type LITERAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {List of NDFs}
            default !
            helpkey *
            repeated
          }

         parameter hardcopy {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Do you want a hardcopy of the image display}
            default TRUE
            helpkey *
          }

         parameter harddev {
            type _CHAR
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Hardcopy device}
            default ps_p
            helpkey *
          }

         parameter printcmd {
            type _CHAR
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Command to use to print snapshot.ps}
            default {lpr snapshot.ps}
            helpkey *
          }

         parameter continue {
            type _LOGICAL
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Continue processing}
            default FALSE
            helpkey *
          }

         parameter fittype {
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 1
            prompt {Transformation type}
            range 1 5
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both) [G]}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt {Logfile name [G]}
            default CCDPACK.LOG
            helpkey *
          }

      }

      action runxreduce {
      }
   }
}
