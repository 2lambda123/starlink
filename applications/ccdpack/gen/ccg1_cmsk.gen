      SUBROUTINE CCG1_CMSK<T>( MASK, NPIX, VALUE, ARRAY, STATUS )
*+
*  Name:
*     CCG1_CMSK

*  Purpose:
*     Converts an ARD mask to an invalid mask.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL CCG1_CMSK( MASK, NPIX, VALUE, ARRAY, STATUS )

*  Description:
*     The routine looks at all values in the integer array MASK, when it
*     encounters a value greater than zero it sets the corresponding value 
*     in ARRAY to BAD.

*  Arguments:
*     MASK( NPIX ) = INTEGER (Given)
*        The ARD mask
*     NPIX = INTEGER (Given)
*        Number of entries in MASK and ARRAY.
*     VALUE = DOUBLE PRECISION (Given)
*        Value for elements of ARRAY that are not BAD on output.
*     ARRAY( NPIX ) = <COMM> (Returned)
*        Output mask with BAD values set where MASK is non-zero.
*     STATUS = INTEGER (Given and Returned)
*        The global status.

*  Copyright:
*     Copyright (C) 1991 Science & Engineering Research Council.
*     Copyright (C) 1995, 2004 Central Laboratory of the Research
*     Councils. All Rights Reserved.

*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either version 2 of
*     the License, or (at your option) any later version.
*
*     This program is distributed in the hope that it will be
*     useful, but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 51 Franklin Street,Fifth Floor, Boston, MA
*     02110-1301, USA

*  Authors:
*     PDRAPER: Peter Draper (STARLINK)
*     BRADC: Brad Cavanagh (JAC)
*     {enter_new_authors_here}

*  History:
*     25-OCT-1991 (PDRAPER):
*        Original version.
*     5-SEP-1995 (PDRAPER):
*        Convert to ARD format MASKs.
*     04-OCT-2004: BRADC):
*        No longer use NUM_ERROR
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-

*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants
      INCLUDE 'PRM_PAR'          ! Primdat BAD values

*  Arguments Given:
      INTEGER NPIX
      INTEGER MASK( NPIX )
      DOUBLE PRECISION VALUE

*  Arguments Returned:
      <TYPE> ARRAY( NPIX )

*  External References:
      EXTERNAL NUM_WASOK
      LOGICAL NUM_WASOK          ! Was numeric operation ok?

      <TYPE> VAL_DTO<T>
      EXTERNAL VAL_DTO<T>        ! Converts double precision to ARRAY type.

*  Status:
      INTEGER STATUS             ! Global status

*  Local Variables:
      INTEGER I                  ! Loop variable
      <TYPE> LOCVAL              ! This type VALUE.

*.

*  Check inherited global status.
      IF ( STATUS .NE. SAI__OK ) RETURN

*  Convert input constant to ARRAY data type.
      LOCVAL = VAL_DTO<T>( .TRUE., VALUE, STATUS )
      IF ( STATUS .EQ. SAI__OK ) THEN

*  Loop for all input MASK elements setting ARRAY BAD when MASK is 
*  greater than zero .
         DO 1  I = 1, NPIX
            IF ( MASK( I ) .GT. 0 ) THEN
               ARRAY( I ) = VAL__BAD<T>
            ELSE
               ARRAY( I ) = LOCVAL
            END IF
 1       CONTINUE
      ELSE

*  report error.
         CALL MSG_SETC( 'TYPE', '<COMM>' )
         CALL ERR_REP( 'CCD1_CMSK1', '  CCG1_CMSK: error'//
     :   ' converting given value to type ^TYPE'//
     :   ' (possible programming error)', STATUS )
      END IF


      END
* $Id$
