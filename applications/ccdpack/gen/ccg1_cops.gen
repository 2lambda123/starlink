      SUBROUTINE CCG1_COPS<T>( SFIRST, SRC, N, DFIRST, DEST, STATUS )
*+
*  Name:
*     CCG1_COPS<T>

*  Purpose:
*     To copy a section of one vectorised array to another.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL CCG1_COPS<T>( SFIRST, SRC, N, DFIRST, DEST, STATUS )

*  Description:
*     N elements, starting at element SFIRST, are copied from the input
*     array SRC to a section of the output array DEST starting at 
*     element DFIRST.

*  Arguments:
*     SFIRST = INTEGER (Given)
*        The first element of the source array to be copied.
*     SRC( * ) = <COMM> (Given)
*        The array to be copied from.
*     N = INTEGER (Given)
*        The number of elements to copy.
*     DFIRST = INTEGER (Given)
*        The position in the destination array to which the first element
*        should be copied.
*     DEST( * ) = <COMM> (Returned)
*        The array to be copied into.
*     STATUS = INTEGER (Given and Returned)
*        Global Status.

*  Authors:
*     MBT: Mark Taylor (STARLINK)
*     TIMJ: Tim Jenness (JAC, Hawaii)
*     {enter_new_authors_here}

*  History:
*     25-JUL-2000 (MBT):
*        Original version.
*     17-SEP-2005 (TIMJ):
*        Use VEC_xTOx
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-

*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants

*  Arguments Given:
      INTEGER SFIRST
      <TYPE> SRC( * )
      INTEGER N
      INTEGER DFIRST

*  Arguments Returned:
      <TYPE> DEST( * )

*  Status:
      INTEGER STATUS             ! Global status

*  Local Variables:
      INTEGER IERR               ! Dummy variable for VEC_
      INTEGER NERR               ! Dummy variable for VEC_
*.

*  Check inherited global status.
      IF ( STATUS .NE. SAI__OK ) RETURN

*  Loop over the whole of the input array copying the values to the
*  output array. Use VEC routine since that may be optimized better
*  than a hand written loop.
      CALL VEC_<T>TO<T>( .FALSE., N, SRC( SFIRST ),
     :     DEST( DFIRST ), IERR, NERR, STATUS )

      END
* $Id$
