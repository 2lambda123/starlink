      SUBROUTINE CCG1_LAPN<T>( VAL, NVAL, IAT, BIGL, STATUS )
*+
*  Name:
*     CCG1_LAPN

*  Purpose:
*     Insert a list of values into a bigger list.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL CCG1_LAPN( VAL, NVAL, IAT, BIGL, STATUS )

*  Description:
*     The routine inserts the array VAL(NVAL) into the array BIGL(*)
*     starting at the positions IAT. 

*  Arguments:
*     VAL( NVAL ) = <COMM> (Given)
*        Values to be inserted in the larger list BIGL
*     NVAL = INTEGER (Given)
*        The number of entries in VAL.
*     IAT = INTEGER (Given)
*        Position within BIGL at which the values in VAL are to be
*        inserted.
*     BIGL( * ) = <COMM> (Given and Returned)
*        Array into which the values in VAL are to be inserted. The
*        insertion begins at position IAT, until position IAT+NVAL-1.
*        The calling routine should ensure that BIGL is large enough to
*        contain elements up to IAT+NVAL-1 as no bounds checking is
*        performed by this routine. Elements of BIGL outside of the
*        range are left unmodified.
*     STATUS = INTEGER (Given and Returned)
*        The global status.

*  Copyright:
*     Copyright (C) 1992 Science & Engineering Research Council. All
*     Rights Reserved.

*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either version 2 of
*     the License, or (at your option) any later version.
*
*     This program is distributed in the hope that it will be
*     useful, but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 51 Franklin Street,Fifth Floor, Boston, MA
*     02110-1301, USA

*  Authors:
*     PDRAPER: Peter Draper (STARLINK)
*     {enter_new_authors_here}

*  History:
*     27-JUL-1992 (PDRAPER):
*        Original version.
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-
      
*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants

*  Arguments Given:
      INTEGER NVAL
      <TYPE> VAL( NVAL )
      INTEGER IAT

*  Arguments Given and Returned:
      <TYPE> BIGL( * )

*  Status:
      INTEGER STATUS             ! Global status

*  Local Variables:
      INTEGER IPOINT
      INTEGER I

*.

*  Check inherited global status.
      IF ( STATUS .NE. SAI__OK ) RETURN

*  Initialise pointer to current position in output array.
      IPOINT = IAT

*  Loop copying the elements of VAL into the appropriate elements of
*  BIGL.
      DO 1 I = 1, NVAL
         BIGL( IPOINT ) = VAL( I )
         IPOINT = IPOINT + 1
 1    CONTINUE
      END
* $Id$
