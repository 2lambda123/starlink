      SUBROUTINE CCG1_STV<T>( VAL, SIZE, ARR, STATUS )
*+
*  Name:
*     CCG1_STV<T>

*  Purpose:
*     To set the elements of a vectorised array to a given value.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL CCG1_STV<T>( VAL, SIZE, ARR, STATUS )

*  Description:
*     Loops over array setting the elements to the given value.

*  Arguments:
*     VAL = <COMM> (Given)
*        The value to set array to.
*     SIZE = INTEGER (Given)
*        Size of the array.
*     ARR( SIZE ) = <COMM> (Returned)
*        The array.
*     STATUS = INTEGER (Given and Returned)
*        The global status.

*  Copyright:
*     Copyright (C) 1991 Science & Engineering Research Council. All
*     Rights Reserved.

*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either version 2 of
*     the License, or (at your option) any later version.
*
*     This program is distributed in the hope that it will be
*     useful, but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 59 Temple Place,Suite 330, Boston, MA
*     02111-1307, USA

*  Authors:
*     PDRAPER: Peter Draper (STARLINK)
*     {enter_new_authors_here}

*  History:
*     10-MAY-1991 (PDRAPER):
*        Original version.
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-

*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants

*  Arguments Given:
      <TYPE> VAL
      INTEGER SIZE

*  Arguments Returned:
      <TYPE> ARR( SIZE )

*  Status:
      INTEGER STATUS             ! Global status

*  Local Variables:
      INTEGER I                  ! Loop variable

*.

*  Check inherited global status.
      IF ( STATUS .NE. SAI__OK ) RETURN

      DO 1 I = 1, SIZE
         ARR( I ) = VAL
 1    CONTINUE

      END
* $Id$
