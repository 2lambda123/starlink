
#  N.B. the previous line should be blank.
#+
#  Name:
#     ccdpack_link_adam

#  Purpose:
#     Link an ADAM program with the CCDPACK libraries.

#  Language:
#     {routine_language}

#  Type of Module:
#     Shell script.

#  Description:
#     This script is invoked to print on standard output all the arguments
#     required for a compilation command such as ALINK.  By default
#     no graphics capability is provided, but if one of the flags
#     '-pgp' or '-pgplot' is given, then Starlink or Native PGPLOT
#     graphics will be linked in.

#  Notes:
#     - When the flags indicate that graphics should be linked, then any
#     makefile target which depends on this file should depend on 
#     'grf_ccdpack.o' also.
#
#     - The C interface to PGPLOT is only available with Native PGPLOT.

#  Copyright:
#     Copyright (C) 2001, 2004 Central Laboratory of the Research
#     Councils. All Rights Reserved.

#  Licence:
#     This program is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied
#     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#     PURPOSE. See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place,Suite 330, Boston, MA
#     02111-1307, USA

#  Authors:
#     PWD: Peter Draper (Starlink)
#     MBT: Mark Taylor (Starlink)
#     TIMJ: Tim Jenness (JAC, Hawaii)
#     {enter_new_authors_here}

#  History:
#     11-JAN-2001 (MBT):
#        Rewrote combining ccdpack_link_adam and 
#        ccdpack_graphics_link_adam into the same script, and added
#        flags for graphics system selection.
#     29-AUG-2004 (TIMJ):
#        Add one_link_adam
#     {enter_further_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

#  Initialise link options - default is no graphics linking.
      pgptype=''

#  Handle command line options.
      while :; do
         case "${1}" in

#  -pgp - Requests Starlink PGPLOT
         -pgp)
            pgptype='starlink'
            shift;;

#  -pgplot - Requests Native PGPLOT
         -pgplot)
            pgptype='native'
            shift;;

#  Once all switches have been read, continue with the rest of the script.
         '')
            break;;

#  Catch unrecognised switches and report an error.
         *)
            echo >&2 "ccdpack_link_adam: unknown argument \""${1}"\" given"
            exit 1;;
         esac
      done

#  Generate strings for linking graphics.
      case "${pgptype}" in

      starlink)
         graphargs="`agi_link_adam` `ast_link_adam -mygrf` grf_ccdpack.o \
                    `pgp_link_adam`"
         ;;

      native)
         graphargs="`agp_link_adam` `ast_link_adam -mygrf` grf_ccdpack.o \
                    -lcpgplot `pgplot_link_adam`"
         ;;

      esac

#  Generate the final argument list and pass it through an awk script 
#  which eliminates all except the last reference to each library.
      echo "`img_link_adam` `fio_link_adam` `trn_link_adam` \
            `chr_link_adam` `prm_link_adam` `psx_link_adam` \
            `ard_link_adam` `ndg_link_adam` `grp_link_adam` \
            `one_link_adam` \
            $graphargs -lpda" \
          | awk 'BEGIN{RS=" ";FS="\n"}
                        {f[i++]=$1}
                        END{for(;i--;)if(!w[f[i]]++)l=f[i]" "l;print l}'

# $Id$
