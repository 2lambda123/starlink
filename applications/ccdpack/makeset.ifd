      action makeset {
#+
#  Name:
#     makeset.ifd

#  Type of Module:
#     IFD parameter interface file.

#  Language:
#     Tcl.

#  Authors:
#     MBT: Mark Taylor (STARLINK)
#     {enter_new_authors_here}

#  History:
#     6-FEB-2001 (MBT):
#        Original version.
#     {enter_further_changes_here}

#-

         helplib {$CCDPACK_HELP}

         parameter in {
            position 1
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {NDFs to group into a Set}
            helpkey *
         }

         parameter indices {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath DEFAULT CURRENT
            prompt {List of Set INDEX attributes for successive NDFs}
            default !
            size *
            helpkey *
         }

         parameter name {
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Set NAME attributes}
            default *
            helpkey *
         }

         parameter mode {
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            default LIST
            prompt {Set header write mode (LIST,CONTAINER or FITS)}
            helpkey *
         }

         parameter setsize {
            type _INTEGER
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Number of NDFs in each generated Set}
            helpkey *
         }

         parameter addwcs {
            type _LOGICAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Add a CCD_SET aligned coordinate frame?}
            default FALSE
            helpkey *
         }

         parameter astfile {
            type LITERAL
            access READ
            vpath prompt
            ppath CURRENT DEFAULT
            prompt {Name of file containing exported AST framesets}
            default !
            helpkey *
         }

         parameter fitsindex {
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS header keyword indicating Set Index}
            helpkey *
         }

         parameter fitsname {
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {FITS header keyword giving Set Name}
            helpkey *
         }

         parameter indexvals {
            type literal
            access READ
            vpath PROMPT
            ppath CURRENT DYNAMIC
            prompt {Mapping of FITINDEX card value to Set Index value}
            size *
            helpkey *
         }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt "Write log to (Logfile,Terminal,Neither,Both)[ccd_global]"
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt "Logfile name[ccd_global]"
            default CCDPACK.LOG
            helpkey *
         }
       
      }
# $Id$
