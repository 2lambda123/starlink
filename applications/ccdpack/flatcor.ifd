      action flatcor {
#+
#  Name:
#     flatcor.ifd

#  Language:
#     Tcl.

#  Type of Module:
#     IFD parameter interface file.

#  Copyright:
#     Copyright (C) 1991, 1994 Science & Engineering Research Council.
#     Copyright (C) 1999, 2001 Central Laboratory of the Research
#     Councils. All Rights Reserved.

#  Licence:
#     This program is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied
#     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#     PURPOSE. See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software
#     Foundation, Inc., 51 Franklin Street,Fifth Floor, Boston, MA
#     02110-1301, USA

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     MBT: Mark Taylor (STARLINK)
#     {enter_new_authors_here}

#  History:
#     14-MAY-1991 (PDRAPER):
#        Original version.
#     4-JUL-1991 (PDRAPER):
#        Added associations and helpkey info.
#     2-FEB-1994 (PDRAPER):
#        Added KEEPIN parameter.
#     6-MAY-1999 (MBT):
#        Generated IFD file from IFL file.
#     12-FEB-2001 (MBT):
#        Added USESET parameter.
#     {enter_further_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

         helplib {$CCDPACK_HELP}

         parameter in {
                       # Input NDF
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of input NDFs}
            helpkey *
          }

         parameter out {
                        # Output NDF
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of output NDFs}
            helpkey *
          }

         parameter flat {
                         # Flatfield NDF
            position 3
            type LITERAL
            access READ
            vpath PROMPT GLOBAL CURRENT
            ppath GLOBAL CURRENT
            association <-global.ccdpack_flat
            prompt {Flatfield NDF}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter preserve {
                             # Whether to preserve input data type
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_preser
            default TRUE
            prompt "Do you want to preserve the input type[ccd_global]"
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from FLATCOR}
            prompt {Title for the output NDF}
            helpkey *
          }

         parameter useset {
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            prompt "Use Set header information?[ccd_global]"
            association <-global.ccdpack_useset
            default FALSE
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt "Write log to (Logfile,Terminal,Neither,Both)[ccd_global]"
            default Both
            helpkey *
          }

         parameter logfile {
                            # Log file name
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt "Logfile name[ccd_global]"
            default CCDPACK.LOG
            helpkey *
          }

         parameter setsat {
                           # Whether saturation has occurred
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt "Has saturated data been set to a non-BAD value[ccd_global]"
            helpkey *
          }

         parameter saturation {
                               # Saturation value
            type _DOUBLE
            access READ
            vpath CURRENT PROMPT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0D6
            prompt "Saturation value[ccd_global]"
            helpkey *
          }
      }
# $Id$
