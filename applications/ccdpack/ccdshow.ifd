      action ccdshow {
#+
#  Name:
#     ccdshow.ifd

#  Type of Module:
#     IFD parameter interface file.

#  Language:
#     Tcl.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     MBT: Mark Taylor (STARLINK)
#     {enter_new_authors_here}

#  History:
#     5-JUL-1991 (PDRAPER):
#     	 Original version.
#     28-JAN-1994 (PDRAPER):
#     	 Added saturation extensions.
#     7-MAY-1999 (MBT):
#        Generated IFD file from IFL file.
#     26-MAR-2001 (MBT):
#        Added USESET.
#     {enter_further_changes_here}

#-

         helplib {$CCDPACK_HELP}

         parameter logto {
                          # Log output to ?
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt {Write log to (Logfile,Terminal,Neither,Both)}
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            prompt {logfile name}
            association <-global.ccdpack_logfile
            default CCDPACK.LOG
            helpkey *
          }

         parameter logtod {
                           # Dummy version of LOGTO to get just
				 # the global value.
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            prompt {Private parameter}
            association <-global.ccdpack_logto
            default !
          }

         parameter logfiled {
                             # Dummy version of LOGFILE to get just
				 # the global value.
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            prompt {Private parameter}
            association <-global.ccdpack_logfile
            default !
          }

         parameter adc {
                        # The analogue to digital conversion 
                                 # factor
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_adc
          }

         parameter bounds {
                           # Pixel indices of bias strips
            type _INTEGER
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            size *
            association <-global.ccdpack_bounds
            default !
          }

         parameter rnoise {
                           # The readout noise
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_rnoise
          }

         parameter mask {
                         # Mask NDF
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_mask
          }

         parameter flat {
                         # flatfield
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_flat
          }

         parameter bias {
                         # Master bias
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_bias
          }

         parameter cal {
                        # Master calibration NDF
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_cal
          }

         parameter direction {
                              # Readout direction
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_direct
          }

         parameter deferred {
                             # Deferred charge value
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_defer
          }

         parameter extent {
                           # Extent of useful CCD area
            type _INTEGER
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            size *
            default !
            association <-global.ccdpack_extent
          }

         parameter preserve {
                             # Whether to preserve input data type
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_preser
          }

         parameter genvar {
                           # Whether to generate variances or not
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_genvar
          }
 
         parameter ndfnames {
                             # Whether positions list are associated
				 # with NDFs
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_ndfnam
          }

         parameter useset {
                           # Whether to use Set headers if available
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_useset
          }
 
         parameter saturate {
                             # Look for saturated values
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_satur
          }

         parameter saturation {
                               # The saturation value.
            type _DOUBLE
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_satval
          }

         parameter setsat {
                           # Whether to set saturated pixels to
				 # the saturation value or not.
            type _LOGICAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL DEFAULT
            default !
            association <-global.ccdpack_setsat
          }

      }
# $Id$
