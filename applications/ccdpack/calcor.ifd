      action calcor {
#+
#  Name:
#     calcor.ifd
      
#  Type of Module:
#     IFD parameter interface file.

#  Language:
#     Tcl.

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     MBT: Mark Taylor (STARLINK)
#     {enter_new_authors_here}

#  History:
#     30-MAY-1991 (PDRAPER):
#     	 Original Version
#     4-JUL-1991 (PDRAPER):
#     	 Added associations and helpkey info.
#     2-FEB-1994 (PDRAPER):
#     	 Added KEEPIN parameter (USEEXT and TYPE already present)
#     6-MAY-1999 (MBT):
#        Generated IFD file from IFL file.
#     14-FEB-2001 (MBT):
#        Upgraded for use with Sets.
#     {enter_further_changes_here}

#-

         helplib {$CCDPACK_HELP}

         parameter in {
                       # List of input NDFs
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT GLOBAL
            ppath CURRENT GLOBAL
            association <-global.ccdpack_ndfin
            prompt {List of input NDFs}
            helpkey *
          }

         parameter out {
                        # Output NDF
            position 2
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List of output NDFs}
            helpkey *
          }

         parameter cal {
                        # Calibration NDF
            position 3
            type LITERAL
            access READ
            vpath PROMPT GLOBAL CURRENT
            ppath GLOBAL CURRENT
            association <-global.ccdpack_cal
            prompt {NDF containing the Dark or Flash calibration data}
            helpkey *
          }

         parameter expose {
                           # the exposure factor
            position 4
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Exposure times for input NDFs}
            helpkey *
          }

         parameter useext {
                           # Controls whether extension is used
                                 # for getting values.
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_useext
            default FALSE
            prompt {Use NDF extension information}
            helpkey *
          }

         parameter keepin {
                           # Controls whether input NDFs are
				 # deleted
            type _LOGICAL
            access READ
            vpath DEFAULT
            ppath DEFAULT
            default TRUE
            prompt {Do not delete input NDFs}
            helpkey *
          }

         parameter type {
                         # Frame types of input NDFs
            type LITERAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default NONE
            prompt {Frame type of input NDFs (NONE,DARK,FLASH)}
            helpkey *
          }

         parameter preserve {
                             # Whether to preserve input data type
            position 5
            type _LOGICAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_preser
            default TRUE
            prompt "Do you want to preserve the input type[ccd_global]"
            helpkey *
          }

         parameter title {
                          # Title for the output NDF
            position 6
            type LITERAL
            access READ
            vpath DEFAULT PROMPT
            ppath CURRENT DEFAULT
            default {Output from CALCOR}
            prompt {Title for the output NDF}
            helpkey *
          }

         parameter useset {
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Use Set header information?}
            default TRUE
            helpkey *
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt "Write log to (Logfile,Terminal,Neither,Both)[ccd_global]"
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt "Logfile name[ccd_global]"
            default CCDPACK.LOG
            helpkey *
          }

         parameter setsat {
                           # Whether saturation has occurred
            type _LOGICAL
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default FALSE
            prompt "Saturated data set to a non-BAD value[ccd_global]"
            helpkey *
          }

         parameter saturation {
                               # Saturation value
            type _DOUBLE
            access READ
            vpath CURRENT PROMPT DEFAULT
            ppath CURRENT DEFAULT
            default 1.0D6
            prompt "Saturation value[ccd_global]"
            helpkey *
          }

      }
# $Id$
