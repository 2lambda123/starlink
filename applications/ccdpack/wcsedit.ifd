      action wcsedit {
#+
#  Name:
#     wcsedit.ifd

#  Language:
#     Tcl.

#  Type of Module:
#     IFD parameter interface file.

#  Copyright:
#     Copyright (C) 1999-2000 Central Laboratory of the Research
#     Councils. All Rights Reserved.

#  Licence:
#     This program is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied
#     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#     PURPOSE. See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place,Suite 330, Boston, MA
#     02111-1307, USA

#  Authors:
#     MBT: Mark Taylor (STARLINK)
#     {enter_new_authors_here}

#  History:
#     18-MAR-1999 (MBT):
#        Original version.
#     13-NOV-1999 (MBT):
#        Added parameters for MathMaps.
#     7-DEC-2000 (MBT):
#        Removed MODIFIED parameter and inserted NAMELIST instead.
#     {enter_further_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

         helplib {$CCDPACK_HELP}

         parameter in {
            position 1
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {NDFs with WCS components to be accessed}
            helpkey *
          }

          parameter mode {
             position 2 
             type LITERAL
             access READ
             vpath PROMPT
             ppath CURRENT DEFAULT
             prompt {Action to perform (CURRENT,ADD,REMOVE,SET,SHOW)}
             default CURRENT
             helpkey *
          }

          parameter frame {
             position 3
             type LITERAL
             access READ
             vpath PROMPT
             ppath CURRENT DEFAULT
             prompt {Basis frame in WCS component}
             default !
             helpkey *
          }

          parameter epoch {
             type _DOUBLE
             access READ
             vpath PROMPT
             ppath DYNAMIC CURRENT
             prompt {Epoch of basis frame}
             helpkey *
          }

          parameter coeffs {
             type _DOUBLE
             access READ
             vpath PROMPT
             ppath CURRENT
             prompt {Coefficients to define mapping}
             size *
             helpkey *
          }

          parameter domain {
             type LITERAL
             access READ
             vpath PROMPT
             ppath CURRENT DEFAULT
             prompt {Name of new domain}
             default CCD_WCSEDIT
             helpkey *
          }

          parameter maptype {
             type LITERAL
             access READ
             vpath PROMPT
             ppath CURRENT DEFAULT
             prompt {Type of mapping (UNIT,LINEAR,PINCUSHION,MATH)}
             default UNIT
             helpkey *
          }

          parameter set {
             type LITERAL
             access READ
             vpath PROMPT
             ppath CURRENT
             prompt {String for setting frame attributes}
             helpkey *
          }

          parameter invert {
             type _LOGICAL
             access READ
             vpath PROMPT
             ppath CURRENT DEFAULT
             prompt {Use inverse mapping?}
             default FALSE
             helpkey *
          }

          parameter namelist {
             type LITERAL
             access READ
             vpath CURRENT DEFAULT
             ppath CURRENT DEFAULT
             default WCSEDIT.LIS
             prompt {Output file name for list of successfully accessed images}
             helpkey *
          }

          parameter forexp {
             type LITERAL
             access READ
             vpath PROMPT
             ppath CURRENT
             prompt {MathMap forward mapping expressions}
             size *
             helpkey *
          }

          parameter invexp {
             type LITERAL
             access READ
             vpath PROMPT
             ppath CURRENT
             prompt {MathMap inverse mapping expressions}
             size *
             helpkey *
          }

          parameter simpfi {
             type _LOGICAL
             access READ
             vpath PROMPT
             ppath DEFAULT
             prompt {Simplify forward followed by inverse to unit?}
             default TRUE
             helpkey *
          }

          parameter simpif {
             type _LOGICAL
             access READ
             vpath PROMPT
             ppath CURRENT,DEFAULT
             prompt {Simplify inverse followed by forward to unit?}
             default TRUE
             helpkey *
          }
             
         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt "Write log to (Logfile,Terminal,Neither,Both)[ccd_global]"
            default Both
            helpkey *
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt "Logfile name[ccd_global]"
            default CCDPACK.LOG
            helpkey *
          }

      }
# $Id$
