      action ccdgenerate {
#+
#  Name:
#     ccdgenerate.ifd

#  Language:
#     Tcl.

#  Type of Module:
#     IFD parameter interface file.

#  Copyright:
#     Copyright (C) 1992 Science & Engineering Research Council.
#     Copyright (C) 1999, 2001 Central Laboratory of the Research
#     Councils. All Rights Reserved.

#  Licence:
#     This program is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied
#     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#     PURPOSE. See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software
#     Foundation, Inc., 51 Franklin Street,Fifth Floor, Boston, MA
#     02110-1301, USA

#  Authors:
#     PDRAPER: Peter Draper (STARLINK)
#     MBT: Mark Taylor (STARLINK)
#     {enter_new_authors_here}

#  History:
#     2-JUL-1992 (PDRAPER):
#        Original version.
#     16-FEB-1999 (MBT):
#        Replaced UBNDS and LBNDS by ANGLES and ORIGINS.
#     26-APR-1999 (MBT):
#        Added REDUCED parameter.
#     7-MAY-1999 (MBT):
#        Generated IFD file from IFL file.
#     21-FEB-2001 (MBT):
#        Added CONTAINER, DATANAME, BIASNAME, FFNAME parameters.
#     {enter_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-

         parameter file {
                         # Name of input list
            position 1
            type LITERAL
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {List containing object positions etc.}
          }

         parameter nseq {
                         # Number of test sequences to create
            position 2
            type _INTEGER
            access READ
            vpath PROMPT CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default 5
            range 1 26
            prompt {How many data sequences do you want}
          }

         parameter angles {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Angle of each output sequence (degrees anticlockwise)}
            size *
            default 0D0
          }

         parameter origins {
            type _DOUBLE
            access READ
            vpath PROMPT
            ppath CURRENT
            prompt {Origin of each output sequence (X,Y,...)}
            size *
          }

         parameter pixels {
            type _INTEGER
            access READ
            vpath PROMPT CURRENT
            ppath CURRENT
            prompt {Size in pixels for the output NDFs (X,Y)}
            size *
          }

         parameter reduced {
            type _LOGICAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Reduced data, or unreduced with bias and flats?}
            default FALSE
          }

         parameter container {
            type _LOGICAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Write NDFs into HDS container files?}
            default FALSE
          }

         parameter type {
            type _CHAR
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            default .sdf
            prompt {Output data type}
          }

         parameter biasname {
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Base name for output bias NDFs}
            default {bias}
          }

         parameter ffname {
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Base name for output flat field NDFs}
            default {ff}
          }

         parameter dataname {
            type LITERAL
            access READ
            vpath PROMPT
            ppath CURRENT DEFAULT
            prompt {Base name for output data NDFs}
            default {data}
          }

         parameter seed {
            type _INTEGER
            access READ
            vpath CURRENT DEFAULT
            ppath CURRENT DEFAULT
            prompt {Random number generator seed}
            default 32767
          }

         parameter logto {
                          # Logging system interaction level
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logto
            prompt "Write log to (Logfile,Terminal,Neither,Both)[ccd_global]"
            default Both
          }

         parameter logfile {
                            # The log file
            type LITERAL
            access READ
            vpath GLOBAL CURRENT DEFAULT
            ppath GLOBAL CURRENT DEFAULT
            association <-global.ccdpack_logfile
            prompt "Logfile name[ccd_global]"
            default CCDPACK.LOG
          }
      }
# $Id$
