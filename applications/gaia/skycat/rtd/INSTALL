HOW TO INSTALL the RTD Software version
---------------------------------------


1. Before you build the RTD software
-----------------------------------

The Rtd package assumes one of the following Tcl environments are
installed:

For Tcl7.6:
	itcl2.2    - [Incr Tcl], includes tcl7.6, tk4.2
	BLT2.1     - BLT toolkit, graphs and other widgets 
	tclX7.6.0  - Extended Tcl

Or for Tcl8.0 (or newer):
	Tcl8.0.3   - Tcl Shell
	Tk8.0.3    - Tk X Toolkit
	itcl3.0.1  - [Incr Tcl]
	BLT2.4f    - BLT toolkit, graphs and other widgets 
	tclX8.0.3  - Extended Tcl

These packages are available from the TCL archives. 
  See: http://www.tcltk.com/ for Itcl.
  and  http://www.NeoSoft.com/tcl/ for TclX and other contributed Tcl software
  and: http://www.scriptics.com/tclpro/ for Tcl8.x, TclPro and the latest releases.

You can install the standard Tcl/Tk packages anywhere, however it is
easiest to install them all in the same directory (using the same
-prefix argument to configure).

You can also get a copy of the whole Tcl7.6/Tk4.2 source tree, with patches 
already applied from ftp://ftp.archive.eso.org/pub/skycat/.

In addition, rtd requires the following packages, which should be included
in the tarfile:

	tclutil - Tcl and C++ Utilities Package
	astrotcl - Astronomical Tcl and C++ Utilities

Note: The dependeny on these two packages is hidden from applications
that use the rtd library. In the installation, the rtd library
contains all of the tclutil and astrotcl object files and the rtd
include directory contains all of the necessary include files (for
backward compatibility). The global auto_path Tcl variable is also
updated automatically to include the necessary Tcl source directories.


2. Build the RTD Software
------------------------

To make the RTD software, configure and make as follows:

	configure
	make 
	make install

The default install dir is /usr/local. You can specify the -prefix
argument to configure to change this:

 	configure -prefix $INSTALLDIR

If the environment variable TCLTK_ROOT is set, it is used as the
default top level directory fo Tcl/Tk.

Note: The rtd configure script read files produced by the tclutil and
astrotcl package con figure scripts (tclutilConfig.sh and
astrotclConfig.sh) to determine most compiler and shared library
options and Tcl package path names.  If you want to use a different
compiler or shared library option, you need to reconfigure the
tclutil and astrotcl packages first.

The default compilers used are g++ and gcc. If you wish to use another
compiler, such as CC and cc, you can do something like this:

	setenv CC cc
	setenv CXX CC
	configure -prefix $INSTALLDIR --with-cc

If you prefer using shared libraries and loadable Tcl modules (see 4)
configure with:

	configure --enable-shared

**********************************************************************
Note that if you are using g++, you must also have libg++ compiled as
a shared library for this to work (libg++-2.7.2 also has the 
"--enable-shared" option) (This requires gcc-2.7.2.1 or newer on HP-UX).
**********************************************************************

VLT Make Procedure
------------------

As an alternative to running configure and make, you can also do this:

	cd src
	make 
	make install

The Makefile in the $RTD/src directory runs configure and then make as
described above. You can also specify options to that Makefile, for
example:

	cd src
	make PREFIX=$INSTALLDIR CONFIGURE_FLAGS=--with-gcc

The PREFIX variable defaults to /usr/local and is the prefix of the
directory in which to install the software.

If the environment variable TCLTK_ROOT is set, it is used as the
default top level directory fo Tcl/Tk.


3. Start the rtd application
----------------------------
To run rtd:

	cd INSTALLDIR/lib/rtd/demos
	rtd

or
	rtd

You may also specify a FITS file on the command line (look in
../images for some examples).


4. If you are using shared libraries
------------------------------------
The Rtd shared library librtd.sl (in HPs) or librtd.so (on Suns) is
built with the same options used to build the Tcl shared library. The
options are read from the file tclConfig.sh, which is searched for in
the following places:

   $prefix/lib/itcl         # $prefix is the value of the -prefix
   $prefix/lib              # configure option, default: /usr/local
   $TCLTK_ROOT/lib/itcl 
   $TCLTK_ROOT/lib 
   /usr/local/lib/itcl 
   /usr/local/lib

This assumes that you have built and installed Tcl with the same
"--enable-shared" and compiler option used for Rtd.

You may need to modify the SHLIB_PATH (HP) or LD_LIBRARY_PATH (Sun)
environment variable so that the necessary shared libraries are found
at run time.  Both variables have the same format: a colon ":"
separated list of directories to search for shared libraries.

From a tcl script you can load the RTD library dynamically with the
command "load <path>/librtd.sl" or "load <path>/librtd.so" or it can
be loaded automatically as a package. See the Tcl man pages for more
information.

You can check with the program below if the shared library is loadable.
If librtd.sl on HP-UX is not properly built you get the misleading error
message "Not enough memory".

#include <dl.h>
#include <errno.h>
#include <stdio.h>
main(int argc, char *argv[])
{
  shl_t handle;
  handle = shl_load(argv[1], BIND_IMMEDIATE | BIND_VERBOSE, 0L);
  if (handle == 0)
    {
    printf("shl_load failed %s\n", argv[1]);
    perror("");
    }
  else
    printf("shl_load ok\n");
}
