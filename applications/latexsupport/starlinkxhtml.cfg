% -*- mode: tex;-*-
%------------------------ BASIC SETTINGS

% Initial settings
\Preamble{mathml,ext=html,charset="utf-8"}

% --- Remove the mathml to create images for the maths instead of mathml.

% --- Add xhtml to prodcue xhtml (requires changes below)

% Remove the irritating font spans.
\NoFonts

% Configure the heading of the document
\Configure{PROLOG}{DOCTYPE}
\Configure{VERSION}{asdf}
\Configure{DOCTYPE}{\HCode{<!DOCTYPE html>\Hnewline}} % HTML 5
\Configure{HTML}{\HCode{<html>\Hnewline}}{\HCode{\Hnewline</html>}} % Removes xmlns line

% Set the head
\Configure{@HEAD}{}
\Configure{@HEAD}{\HCode{<meta
         \expandafter\csname a:charset\endcsname/>\Hnewline}}
\Configure{@HEAD}{\HCode{<meta name="generator" content="TeX4ht
         (http://www.tug.org/tex4ht/)" />\Hnewline}}
\Configure{@HEAD}{\HCode{<link
         rel="stylesheet" type="text/css"
         href="\expandafter\csname aa:CssFile\endcsname" />\Hnewline
    }
}

%%%%%----------------MATHJAX
% Use mathjax for the mathml (remove if using images). Note that this
% should not try and interpret tex commands -- only MML_HTMLorMML
% options
\Configure{@HEAD}{\HCode{<script type="text/javascript"
    src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=MML_HTMLorMML"></script>}}
\Configure{@HEAD}{\HCode{<style type="text/css">.MathJax_MathML {text-indent: 0;}</style>}}



%%%%%---------------GRAPHICS
% This sizes the image to the same expected width. Only works if the
% width has been specified by the user in the includegraphics command.
% i.e. Using 'scale' won't work.

% include pdf files by automatically converting them with imagemagick
% convert (pick a  different prgram in the Needs{... expression below if wanted)
\Configure{graphics*}
     {pdf}
     {\Needs{"convert \csname Gin@base\endcsname.pdf \csname Gin@base\endcsname.png"}%
       \ifvmode \IgnorePar\fi \EndP\Picture[pdfpict]{\csname Gin@base\endcsname.png
         \space width="\expandafter \the\numexpr 100 * \csname Gin@req@width\endcsname / \linewidth\%"
       }%
       \special{t4ht+@File: \csname Gin@base\endcsname .png}
     }


% jpg files.
\Configure{graphics*}
        {jpg}
        {%
           \ifvmode \IgnorePar\fi \EndP\Picture[pict]{\csname Gin@base\endcsname .jpg
             \space width="\expandafter \the\numexpr 100 * \csname Gin@req@width\endcsname / \linewidth\%"
           }%
           \special{t4ht+@File: \csname Gin@base\endcsname .png}
         }

% png files
\Configure{graphics*}
        {png}
        {%
           \ifvmode \IgnorePar\fi \EndP \Picture[pict]{\csname Gin@base\endcsname .png
              \space width="\expandafter \the\numexpr 100 * \csname Gin@req@width\endcsname / \linewidth\%"
            }%
            \special{t4ht+@File: \csname Gin@base\endcsname .png}
          }



%%%%%%%%%%%% ---------- MINIPAGE
%%% (from http://tex.stackexchange.com/questions/195226/configuring-minipage-environment-to-incorporate-width

\makeatletter

% % we must refer to minipage from the css file, because tags are being
% % written before we know dimensions

\usepackage{etoolbox}
\ifwithchapters

  %% counter will be reset at chapters if you don't change this.
  \preto{\chapter}{\stepcounter{minimycount}}
  \else
  \preto{\section}{\stepcounter{minimycount}}
\fi

\newcounter{minimycount}
\newlength{\myminipagewidth}
\usepackage[nomessages]{fp}

% % save original minipage
\let\oldiimini\@iiiminipage

% % redefine minipage
\def\@iiiminipage#1#2[#3]#4{%

  \setlength{\myminipagewidth}{#4}

  \edef\valuemyminipagewidth{\strip@pt\myminipagewidth}
  \edef\valuemylinewidth{\strip@pt\linewidth}
  \FPeval\result{100*\valuemyminipagewidth/\valuemylinewidth}

  \xdef\miniwidth{\result \%}

  \oldiimini{#1}{#2}[#3]{#4}
}

%% Configure the minipage environment.
\ConfigureEnv{minipage}{%
  \stepcounter{minimycount}\ifvmode\IgnorePar\fi\EndP\HCode{<div
        class="minipage" align="center" id="mini-page\expandafter\theminimycount">}}
{\ifvmode\IgnorePar\fi\EndP\HCode{</div>\Hnewline}%
  % we must write dimension here to the css file
  \Css{div\#mini-page\expandafter\theminimycount{width:\miniwidth}}%
  \typeout{div\#mini-page\expandafter\theminimycount{width:\miniwidth}}%
}{}{}
\makeatother



%%%%%%%%%%%%%%-------------- BEGIN DOCUMENT
\begin{document}

% Declare the order to try and load images.
\DeclareGraphicsExtensions{.pdf,.png,.jpg,.jpeg}

%%%%%% ------------ CSS


%% Ideally this would be in the class files, but that would mean
%% writing all the css in the \Css{..} command and
%% escaping % and # signs. \CssFile and \Css...\EndCss can only
%%  be put in the document or the .cfg file (in the preamble).
\CssFile[starlink_basic.css,sst.css]
/* css.sty */
\EndCssFile



%%%%%%%%%%%%%%%------------ End of preamble
\EndPreamble









