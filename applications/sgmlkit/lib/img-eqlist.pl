#! /usr/bin/perl -w
#
#<func>
#<routinename>img-eqlist.pl
#<purpose>Process the file produced by the img.maths mode of
#    <code>.../slmaths.dsl</code>
#<description>
#  <p>Format of the input is
#  <pre>
#   ...LaTeX maths code
#   %%imgmath type1 label1
#   ...LaTeX maths code...
#   %%imgmath type2 label2
#   ...
#  </pre>
#  <p>We spit out two files, based on the filename root of the argument.
#  The SGML one conforms to a very simple DTD (with system id
#  'img-eqlist') which maps equation labels to filenames, the the LaTeX
#  one consists of a LaTeX document with one equation per page.  The
#  latter should be processed by LaTeX plus whatever dvi to gif magic
#  you need, making sure that the resulting GIF filenames match those
#  in the img-eqlist document.
#  <p>Note that you don't have complete freedom to select filenames
#  here: the names must be consistent both with the names generated in
#  <code>.../slmaths.dsl</code> and the generated names in
#  <code>pstopnm-s</code>.
#<returnvalue none>
#<parameter>infile<type>file<description>File generated by
#    <code>.../slmaths.dsl</code>, of the format described above.
#<author id=ng affiliation='Starlink, Glasgow'>Norman Gray
  

($#ARGV eq 0) || Usage ();

$infile = $ARGV[0];
($filenameroot = $infile) =~ s/\..*$//;

$eqcount = '001';

%eqtypes = ( 'start-inline' => '$',
	     'end-inline' => '$',
	     'start-equation' => '\[',
	     'end-equation' => '\]',
	     'start-eqnarray' => '\begin{eqnarray*}',
	     'end-eqnarray' => '\end{eqnarray*}',
	     );

open (EQIN, "$infile")
    || die "Can't open $infile to read";
open (SGMLOUT, ">$filenameroot.imgeq.sgml")
    || die "Can't open $filenameroot.imgeq-sgml to write";
open (LATEXOUT, ">$filenameroot.imgeq.tex")
    || die "Can't open $filenameroot.imgeq.tex to write";

print LATEXOUT <<'EOT';
\documentclass{minimal}
\pagestyle{empty}
\begin{document}
EOT

print SGMLOUT "<!doctype img-eqlist system 'img-eqlist'>\n<img-eqlist>\n";

$eqn = '';
while (defined($line = <EQIN>)) {
    if ($line =~ /^%%imgmath/) {
	chop($line);
	($dummy,$eqtype,$label) = split (/ /, $line);
	$outfilename = "$filenameroot.imgeq$eqcount.gif";
	# Calculate checksum.  Base the checksum on the equation type
	# as well as its contents.
	($checkeqn = $eqtype.$eqn) =~ s/\s+//sg;
	$checksum = unpack ("%32C*", $checkeqn);
	if (defined($checklist{$checksum})) {
	    # already seen this equation
	    print SGMLOUT "<img-eq label='$label' sysid='" .
		$checklist{$checksum} . "'>\n";
	} else {
	    $eqn =~ s/\s+$//s;
	    print LATEXOUT $eqtypes{'start-'.$eqtype} .
		$eqn . $eqtypes{'end-'.$eqtype} . "\n\\newpage\n";
	    print SGMLOUT "<img-eq label='$label' sysid='$outfilename'>\n";
	    $checklist{$checksum} = $outfilename;
	    $eqcount++;
	}
	$eqn = '';
    } else {
	$eqn .= $line;
    }
}
print LATEXOUT "\\end{document}\n";
print SGMLOUT "</img-eqlist>\n";

close (SGMLOUT);
close (LATEXOUT);
close (EQIN);

exit 0;


sub Usage {
    die "Usage: $0 filename\n";
}
