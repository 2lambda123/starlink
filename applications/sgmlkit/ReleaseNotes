<!-- 
  Starlink SGML system, release notes
  $Id$
-->

<subsect id=release-0.3 export>Release Notes, version 0.3

<p>This is developers' release 0.3.

<subsubsect>New in this release

<p>The only additional features are some hooks for customising the
output, described in <ref id=appx.system.paramdsssl>.

<p>The system relies on the DSSSL engine Jade, but
it does <em/not/ contain a pre-built version of Jade.  Jade turns out
to be a real hassle to build with a compiler other than gcc.  The
author, James Clark, is a fine programmer, but apparently a bit of a
standards purist (he was involved with writing the DSSSL standard, and
with the development of XML/XSL): he seems to take the position that a
standards document is an adequate C++ user manual, and doesn't appear
to believe that porting software to non-conforming compilers should be
high on his priority list.  Jade builds
perfectly happily on gcc, but I've been struggling away for ages
trying to get it to build using Sun's and Digital's C++ compilers.  I
will distribute a runnable version of Jade eventually, but for the
moment, you'll have to build Jade yourself.  If <em/you/ manage to
build it using one of those, could you tell me what you had to do&ellip;.

<p>Get Jade from Clark's <webref
url='http://www.jclark.com/jade/' >Jade pages</webref>.  Before you
build it, you need to patch it to a Starlink-specific version, using
the patch at
<url>http://www.astro.gla.ac.uk/users/norman/distrib/jade.html</url>.
The configuration you'll need is:
<verbatim>
% mkdir -p /my/star/bin/sgml/bin /my/star/bin/sgml/lib
% ./configure --enable-latex --prefix=/my/star/bin/sgml
% make
% make install
</verbatim>
The stylesheets need Jade patched to version
<code/1.2.1-starlink-1.0b2/ (you can check Jade's version with
<kbd>jade -v &lt;/dev/null</kbd>).

<subsubsect>Changes

<p>Mostly from the last to-do list.
<dl>

<dt>Changes in DTD
<dd>UPDATE element can now go at the end of the SUBHEAD (ie,
effectively before the beginning of the section content.  BACKMATTER
is now an empty element, with a 
`bibliography' attribute, so elements bibliography, indexcontents and
notecontents have disappeared.  Addition of `type' formatting-hint
attribute to code element.  Addition of %simplephrase formatting
elements to content model of verbatim.

<dt>Finish documentation
<dd>Considerable additions to the developer/maintainer section.
Various other corrections and additions, some required by changes to
the DTD in this release.

<dt>Output of HTML down-converter should be compatible with HTX.
<dd>Output modified with this intent.  FIXME: not yet checked against hlink.

<dt>Coverpage image in DTD
<dd>Done

<dt>BOS and manifest support
<dd>There's no support for extraction of the BOS (the `bounded object set', a
formally-definable list of the entities required in a `complete'
source document set) from a source document.  This is easy to extract
yourself: any files included in an SGML document must be declared as
entities in the Declaration Subset, you you can construct a BOS by hand
perfectly reliably.
<p>The stylesheets now generate a manifest of generated files, in
<code/HTML.manifest/ and <code/LaTeX.manifest/ (configurable).

<dt>Dealing with exported labels: emit a TOC of
exported IDs at end, with links both ways
<dd>The `link policy' is expressed in DTD.  The exported-id list has
been catered for by adding a customisation variable
<code/show-element-ids/ (see <ref id=appx.system.paramdsssl>) so that
you can prepare a version of the document which displays these IDs.
This isn't quite the same thing, but the other can be added if anyone
feels strongly about it.

<dt>Sectioning: the references to CODECOLLECTION sections within
ROUTINECODE elements come out with the wrong numbers.
<dd>Fixed

<dt>Include a print button in the generated HTML.
<dd>Done.

<dt>Updated Jade patches
<dd>I've fixed a couple of buglets in the Jade back-end I produced.
The stylesheets now need <code/1.2.1-starlink-1.0b2/.

</dl>

<subsubsect>Outstanding issues

<p>This is the to-do list.  These are the issues which should either
be addressed before the next full release, or postponed as being
unresolvable just now.  For more wishful thinking, see <ref
id=further.development>.

<dl>
<dt>Bundle Jade with the system
<dd>At present, the distribution consists only of the SGML library stuff.
I need to work out the magic to get Jade to build on Suns and Alphas,
and then distribute them together.

<dt>Finish documentation
<dd>Read-through for style, plus more expansive installation notes.

<dt>Use of FPI: should we use <code>-//Starlink//...</code> or
<code>+//IDN star.rl.ac.uk...</code>? 
<dd>The second is a standard `registered prefix' built up from a DNS
domain name.  Is there any prospect of a <code>starlink.ac.uk</code>
domain name?

<dt>Include some facility for dealing with obsolete exported IDs.
<dd>One
possibility (discussed at the programmers' meeting) was <code>&lt;sect
id=newid>Intro&lt;oldid id=oldid></code>, but that's not very flexible
-- it'd only apply to sections.  I thought instead of
<verbatim><![cdata[
<!element oldidlist o o (oldid+)>
<!element oldid     - o EMPTY>
<!attlist oldid
	id	id	#required	-- the now-obsolete id --
	newid	idref	#requred	-- replacement --
	-- resolve a reference to this element as if it were a
           reference to the element pointed to by newid, but
	   warn or issue an error about a deprecation --
	export	(export) #fixed export	-- for compat/consistency? --
	>
]]></verbatim>
This means that at the top of the document (probably), you could
include a list of elements:
<verbatim>
&lt;oldidlist>
&lt;oldid id=old.id newid=replacement.id>
&lt;oldid id=another.id newid=another.replacement>
&lt;/oldidlist>
</verbatim>
This is both perfectly generic, and usefully visible.

<dt>Development of the programcode DTD
<dd>As discussed in <ref id=doccode.devel>, I am uncertain of the
optimal balance between flexibility and structure in the programcode
DTD.  We need to reach a consensus on this before the structure is frozen.

<dt>Bugs in Jade's LaTeX back-end
<dd>There's a deficiency in the &latex; back-end I added to
Jade.  There's some weakness in the way that
characters are output, which results in SDATA entities not being
processed properly, when
the character data is obtained via (data) rather than
(process-children).  Unfortunately, I think that fixing this second
one is going to need more knowledge of Jade internals than I have to
hand right now.  The only available workaround is to avoid using any
of the entities in <ref id=table.entities> within `DT' elements (which
is the only place the stylesheet uses the feature which triggers the
bug).  If you fall victim to the bug, the only effect would be a
<code/&amp;#65533/ or <code/\\char65533/ in the output, which might
confuse a browser or &latex, but do nothing worse.

<dt>Bugs in the mk script
<dd>There are currently a few missing targets in the installation makefile.

</dl>
