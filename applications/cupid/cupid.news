1 CUPID

 The CUPID package is currently under construction...

 CUPID (ClUmP IDentification) provides commands which identify 
 and  analyse clumps of emission within 2- or 3- dimensional 
 data arrays.


Changes introduced at V0.0-17:

 - Fixed various harmless compiler warnings.


Changes introduced at V0.0-16:

 - Fixed bug in MAKECLUMPS that could prevent the requested number of
   clumps from being created.

 - Minor change to Reinhold algorithm to try to improve performance with
   3D data.


Changes introduced at V0.0-15:

 - Fixed bug in the emulation of the IDL implementation of the
   ClumpFind algorithm.

 - Fixed bugs in FellWalker that could produce erroneous clump assignments.


Changes introduced at V0.0-14:

 - Added a new configuration parameter (ClumpFind.IDLAlg) that can be
   used to force FINDCLUMPS to emulate the IDL implementation of the
   ClumpFind algorithm, rather than the algorithm as described in the
   Williams et al ApJ paper.

 - Fixed bug that caused GAUSSCLUMPS method not to be recognised.

Changes introduced at V0.0-13:

 - Additional text in SUN255.

 - The FINDCLUMPS command has a new configuration parameter
   ClumpFind.AllowEdge that can be set to a non-zero value in order to
   retain clumps that touch an edge of the data array.

Changes introduced at V0.0-12:

 - The MAKESNR command has been moved from CUPID to KAPPA.

 - A new command called EXTRACTCLUMPS has been added to the CUPID package.
 This uses the pixel mask created by FINDCLUMPS (when using methods
 ClumpFind, Reinhold or FellWalker) to extract clump parameters from
 another data array. For instance, if FINDCLUMPS is run on an SNR array,
 EXTRACTCLUMPS can then be used to calculate the parameters of the
 corresponding clumps in the original data array.


Changes introduced at V0.0-11:

 - The CLUMPS command has been renamed as FINDCLUMPS. However, CLUMPS 
 will still be recognised as an alias for FINDCLUMPS.

 - A new configuration parameter called MaxBad has been added to all
 algorithms. It specified the maximum number of bad pixels which may 
 adjoin a clump. If this number is exceeded, the clump is excluded.

 - A new application called "makesnr" has been added to the cupid
 package. This creates a signal-to-noise NDF by dividing the Data array
 of the input NDF by the square root of its Variance array. Pixels with
 Variances below a given value are set bad in the output. The cleverness
 lies in the choice of the default value for this limit Variance value.
 This application has been added to facilitate running the CLUMPS command
 on a signal-to-noise array rather than a simple signal array, thus
 allowing spatial variation in the noise level to be taken into account
 when finding clumps. If the data is going to be smoothed before finding
 clumps, the smoothing should be applied to the SNR array rather than the
 original array.


Changes introduced at V0.0-10:

 - The default value for the MinPix configuration parameter (that
 specified the minimum number of pixels in a clump) has been modified
 so that it corresponds to one beam area. However, if the beam area is 
 less than 16 pixels, then the old default of 16 is retained.

 - Clumps are now rejected if they touch or contain any bad pixels.
 (but see the MaxBad configuration parameter added at V0.0-11).

Changes introduced at V0.0-9:

 - A further filter is now applied to the clump list to reject clumps
 which are smaller than the beam size specified by configuration
 parameters FWHMBeam and VeloRes. Note, the reported clump sizes are
 smaller than the observed clump sizes because they are corrected for the
 smoothing produced by the instrument beam. The new filter is applied
 before this correction, and so clumps sizes smaller than the beam size
 may still be reported. The main effect of this filter is to remove
 clumps which were previously reported as having zero size.



Changes introduced at V0.0-8:

 - The output catalogue now inherits any WCS FrameSet from the input NDF.

 - Clumps which span only a single pixel along any pixel axis are now
 rejected.


Changes introduced at V0.0-7:

 - ClumpFind, Reinhold and FellWalker all now sort the output catalogue
 into descending peak value order.

 - The GaussClumps algorithm no longer includes clumps in the output
 catalogue or image if they touch an edge of the data array. This brings
 it into line with the other algorithms.

 - The output NDF created by the GaussClumps algorithm no longer includes
 the constant background level which was previously added in order to
 make the mean of the output data array equal to the mean of theinput data
 array. This brings it into line with the other algorithms which assume
 zero background level.

 - The BACK parameter has been removed from the MAKECLUMPS command. This
 is fall into line with the assumption of zero background level made by
 the clump finding algorithms.

 - Added test_data.sdf and test_data.FIT as standard test files.


Changes introduced at V0.0-6:

 - The clump parameters returned in the catalogue now are corrected for
 the effects of smoothing by the instrumental beam. That is, the values
 in the clump size columns are now slightly smaller (i.e. the burring
 produced by the beam is removed), and the values in the peak value
 column are slightly higher (i.e. the reduction in peak value caused by
 the beam size is removed). This means that the catalogue values reflect
 the properties of the clump *before* the instrumental smoothing. The
 degree of smoothing introduced by the beam is specified by the
 configuration parameters, FWHMBeam and VeloRes. Previously, only the
 GaussClumps algorithm had these configuration parameters, but now all
 algorithms have them.

 - The GaussClumps algorithm has been changed slightly to correct for the
 tendency of the instrumental smoothing to reduce the peak clump value
 (the tendency to of the instrumental smoothing to increase clump size was
 already corrected for).


Changes introduced at V0.0-5:

 - The MASK parameter has been removed. The Quality mask is now always
  written to the output NDF.

 - The OUT parameter is no longer optional.

 - The input NDF is now accessed in READ mode rather than UPDATE mode.

 - The clump information is now written to the CUPID extension of the
 output NDF rather than the input NDF.

 - The default value for the Reinhold.Thresh configuration parameter has
 been changed from "Noise+RMS" to "Noise+2*RMS" in order to make it the
 same as the defaults for the equivalent parameters for the other
 algorithms.

 - The default value for the GaussClumps.Thresh configuration parameter has
 been changed from 20 to 2 in order to make it the same as the defaults for 
 the equivalent parameters for the other algorithms.

 - The default values for the GaussClumps.VeloRes and GaussClumps.FWHMBeam 
 configuration parameters have been changed from 3.0 to 2.0 in order to make 
 them more comparable to the defaults for the equivalent parameters for the 
 other algorithms.


Changes introduced at V0.0-4:

 - The FellWalker algorithm algorithm has been changed so that the
 initial flat section of a walk is only ignored if the walk starts at or
 close to the background level. This fixes a problem in which pixels with
 a large data value (well above the background level) were not assigned to 
 any clump if they occurred within a flat area between higher peaks.

 - The FellWalker algorithm has been modified so that neighbouring clumps
 are merged together into a single clump unless there is a significant dip
 between the peaks of the clumps. The depth of the dip needed to prevent 
 adjoing peaks from being merged is given by a new configuration parameter 
 called FellWalker.MinDip. This reduces the number of distinct clumps 
 typically identified by the FellWalker algorithm.

 - The FellWalker algorithm algorithm has been changed so that only those
 clumps which have a peak data value above a specified value are accepted.
 The limiting data value is specified by the new configuration parameter 
 FellWalker.MinHeight.


Changes introduced at V0.0-3:

 - The reporting of the current configuration at the end of the CLUMPS
 command now includes each parameter only once.

 - The default value for ClumpFind.DeltaT is now set to twice the RMS noise 
 level no matter how many contouts this would produce. Previously, the 
 default value was higher than 2*RMS if necessary in order to limit the 
 number of contours to 100.

 - The value supplied for the "RMS" program parameter can now be
 over-ridden by supplying a different value in the configuration file.
 The used RMS value is included in the displayed configuration at the end
 of the CLUMPS command.


Changes introduced at V0.0-2:

 - All algorithms have been re-worked slightly to avoid a limit of 2048
 on the total number of usable clumps which can be found. This limit was 
 imposed by the ARY library. The total number of usable clumps is now
 unlimited.

 - The ClumpFind algorithm has been re-worked to avoid a limit of about
 8000 on the total number of candidate clumps (many of these would
 usually be rejected as being too small). The total number of candidate
 clumps is now unlimited.


