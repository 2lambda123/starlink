#include "sae_par.h"
#include "cupid.h"

int CGEN_FUNCTION(cupidCubFit)( CGEN_TYPE *res, int nel, int imax ){
/*
*  Name:
*     cupidCubFit<X>

*  Purpose:
*     Find the best fitting parameters, starting from a given initial
*     guess.

*  Synopsis:
*     int cupidCubFit<X>( CGEN_TYPE *res, int nel, int imax );

*  Description:
*     This function finds the best fitting parameters, starting from a 
*     given initial guess.

*  Parameters:
*     res
*        Pointer to the start of the residuals array.
*     nel
*        The number of elements in the supplied residuals array. 
*     imax
*        The 1D index within the supplied residuals array of the element
*        which is being fitted. If the fit fails to converge, this
*        element will be set bad in "res" on exit.

*  Returned Value:
*     Non-zero if the fit was succesfully completed.

*  Notes:
*     - This function can be invoked using the generic cupidCubFit macro 
*     defined in cupid.h. This macro has the same parameter list as 
*     cupidCubFit<X> except that an extra parameter is added to the start 
*     of the parameter list indicating the data type of the specific 
*     cupidCubFit... function to be invoked. This extra parameter should
*     be an integer and should be one of CUPID__DOUBLE, CUPID__FLOAT, etc.

*  Authors:
*     DSB: David S. Berry
*     {enter_new_authors_here}

*  History:
*     5-OCT-2005 (DSB):
*        Original version.
*     {enter_further_changes_here}

*  Bugs:
*     {note_any_bugs_here}
*/      

/* Local Variables: */
   int ret;          /* Returned value */
   int i;            /* Loop count */

/* Initialise. */
   ret = 0;

/* Abort if an error has already occurred. */
   if( *status != SAI__OK ) return ret;



/* Return zero for the moment... */
   for( i = 0; i < nel; i++ ) res[ i ] = CGEN_BAD;
   ret = 0;


/* Return the result, setting the specified element of the residuals
   array bad if no fit was performed. */
   if( !ret ) res[ imax ] = CGEN_BAD;
   return ret;  
}

