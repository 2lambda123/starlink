## Process this file with automake to produce Makefile.in

# Build libsmf before the applications

SUBDIRS = libsmf libsmurf libsc2sim libacsis libaztec

# can not use surf_mon_FCFLAGS yet
AM_FCFLAGS = -Isrc -Isc2da -Isc2sim

dist_bin_SCRIPTS = $(DYNSCRIPTS) $(STATICSCRIPTS)
dist_noinst_SCRIPTS = smurf_link_adam
bin_MONOLITHS = smurf_mon
smurf_mon_SOURCES = smurf_mon.c $(DA_FILES) $(WVM_FILES)

starhelp_DATA = smurf.shl

# At the moment we want jcmt/state.h to be installed

jcmtincludedir = $(includedir)/jcmt
jcmtinclude_HEADERS = jcmt/state.h

# Tasks
smurf_mon_TASKS = extinction flatfield makemap remsky qlmakemap scanfit sc2sim \
                  dreamsolve makecube impaztec dreamweights badbolos skynoise \
                  starecalc smurfhelp

# These files are not built inside a subdir because they are in CVS
# under an alternate build system that SMURF can not modify.

DA_FILES = sc2da/sc2store.c sc2da/sc2math.c sc2da/smurf_ers.c \
sc2da/sc2ast.c

WVM_FILES = wvm/wvmOpt.c wvm/wvmTau.c wvm/wvmCal.c

# Linking

smurf_mon_LDADD = libsmurf/libsmurf.la libsc2sim/libsc2sim.la \
                  libsmf/libsmf.la libacsis/libacsis.la libaztec/libaztec.la \
                  `$(srcdir)/smurf_link_adam`

# Dynamically generated scripts
DYNSCRIPTS = smurf.sh smurf.csh smurf.icl

# Install without modification
STATICSCRIPTS = scripts/jcmtstate2cat

# IFL files
IFL_FILES = $(smurf_mon_TASKS:=.ifl) smurf_mon.ifl

BUILT_SOURCES = $(DYNSCRIPTS) $(IFL_FILES)


# Generate IFL files
$(IFL_FILES) $(DYNSCRIPTS): smurf.ifd
	$(IFD2STAR) smurf

# Help compilation
.hlp.shl:
	@HLIB@ $<

# Make help file
smurf.hlp: smurf_master.hlp libsmurf/smurfmon.hlp
	cat smurf_master.hlp libsmurf/smurfmon.hlp > smurf.hlp
