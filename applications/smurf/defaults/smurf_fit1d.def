#+
#  Name:
#     smurf_fit1d.def

#  Purpose:
#     Default parameters for SMURF application FIT1D.

#  Description:

#     This file specifies the default parameters for the FIT1D iterative
#     map-maker.  It contains the effective defaults. In addition it sets
#     an initial state for all parameters and to define all the allowed
#     parameters so that a user will be notified in case of spelling
#     mistakes.

#  Notes:

#  Authors:
#     RPT: Remo Tilanus (JAC, Hawaii)

#  History:
#     2011-01-15 (RPT):
#        Original version.

#-

#
# IMPORTANT: for gausshermites and voigts the first three parameters
# (referred to as the amplitude, position, and width) do *NOT*
# correspond to the maximum, centre, and FWHM as for a basic Gaussian! 
# Read the "smurfhelp fit1d" section on "Fitting_Functions" to see the
# relations. 

# Axis the fit along (nr starting at 1). '0' translates fit along
# highest dimension i.e. Vlsr in a Ra, Dec, Vlsr cube.

axis = 0

# Coordinate range along axis to find and fit profiles. The format is 
# (x1, x2) including the (). E.g. Vlsr -20 to 35 km/s: (-20,35). 
# Default is to use the full extent of the axis.

range = <undef>

# Function to fit. See documentation: currently implemented are gaussian,
# gausshermite1, gausshermite2, voigt.

function = gauss

# Maximum number of 'component' functions to fit to each profile, e.g.
# a multi-component spectrum of max. 3 gaussians. Note: The complete fit
# of the gaussians is done concurrently, not iteratively starting e.g. 
# with the strongest component. The routine will try to find and fit ncomp 
# functions along each profile, but may settle for less. 

ncomp = 3

# Sort the resulting fits:
#    - amp:   sort by decreasing fitted value of the amp-like parameter
#    - width: sort by decreasing fitted fwhm of the width-like parameter
#    - pos:   sort by increasing fitted distance from the centre pixel
#             in the profile.
#
# Sorting can be helpful, but be cautioned that it can also complicate
# things: if there are two components one at -10 km/s and one at 10 km/s
# sorting by amplitude or width can result in the parameter file for 
# component 1 to be a mix of the -10 and 10 features depending on which
# one was relatively stronger or wider. Similarly, sorting by position
# can result in low-amplitude fits of noise spikes to be mixed with
# stronger components. For more precise control try to run the routine 
# iteratively with e.g. a different restricted velocity range to try pick
# out the different components. Default sorting is by amplitude.

sort = amp
# sort = width
# sort = pos

# Minimum value for the Amplitude-like parameter (see at top) to
# accepts as a genuine fit in terms of the rms. Based on the amplitude
# alone, at 3-sigma ~5% of the profiles selected for fitting can be
# expected to be noise spikes. This value drops to 2% for 5-sigma. All
# assuming gaussian statistics of course. Be careful that for Voigts
# the amp-like parameter actually is the 'area' under the profile!

minamp = 3

# Minimum value for the  width-like parameter (see at top) to accept as 
# a genuine fit as FWHM (~2.35*Dispersion) in terms of ==PIXELS== (!).
# This parameter can make a huge difference to the number of spurious or
# rejected fits in the end result.

minwidth = 1.88

# Maximum value for the  FHWM of the Loretzian component of a voigt in terms 
# of  ==PIXELS== (!). A negative value implies no constraint.
# Voigt fits only.

maxlorz = <undef>

# Limits on the Gausshermite parameters h3 (~skew) and peakiness (~h4).
# High values here typically mean that multi-component fit may be better
# or,in case of h3, large negative features. It is possible for the
# fitting routine to compensate for a negative wing (due to h3) with a 
# secondary positive component. I.e. unless a fit of negative wings is
# desired it is better to restrict h3. Small values for h3 and h4 are
# probably better left fixed at 0. Whenever a hermite1 or hermite2 is
# being fitted and the fitted parameter is out of bounds, the fitting
# routine will retry with them fixed to 0. The limits below are limits
# on the absolute value of h3 and h4:

absh3min = 0.01
absh3max = 0.5
absh4min = 0.01
absh4max = 0.35

# This applies to Gausshermites, which, by their nature, can have negative 
# "wings" on profiles. Those may indeed be present in the data and wanted 
# to be fitted, but on many occasions gausshermites are used with the aim
# to fit complicated positive profiles. This option causes the outputed 
# fitted profiles to be set to zero whereever the fit would result in a 
# negative value.

pos_only = 1

# Two options that bypass the actual fitting:
#
# - estimate_only: The output cube will have the results from the
#                  initial estimates routine instead of the the fit.
#                  Good initial estimates are critical for the fit
#                  and checking and/or fixing initial estimates may
#                  help solve problems.
#
# - model_only:    Bypass both the initial estimates and fitting routine
#                  and generate profiles directly from the supplied input
#                  parameter cube(s) and/or user supplied fixed values.
#                  Not supplying all parameters will generate an error.

estimate_only = 0
#estimate_only = 1

model_only = 0
# model_only = 1
