# Number of iterations
#  postive number  = fixed number of iterations
#  negative number = maximum iterations if using chi^2 stopping criteria
numiter = 5

# chi^2 tolerance in negative-numiter case (requires noi model component)
chitol = 1e-6

# Model components/order (space delimited list)
# Note: components specified AFTER 'ast' will not be calculated for the
# first time until the second iteration.
#  dks = fit and remove dark squid for the column
#  com = remove common-mode signal
#  gai = if com specified, fit gain/offset of common mode
#  ext = apply extinction correction
#  ast = estimate the map and astronomical signal
#  flt = apply filter to time streams
#  noi = estimate time-domain variance
modelorder = (com,gai,ext,ast,flt,noi)

# Export model files as NDF?
# Specify a value of 1 or 0 to export all or none of the components
# You can also specify an array of components to export using the same
# format as modelorder. Note that you can specify additional
# components 'res' and 'qua' to what may be provided to modelorder if
# you wish to export the residual model or quality arrays
# respectively. Exportation of 'res' is implied if either 'noi' or
# 'qua' are specified as they become the variance and quality
# components of the resulting NDF for 'res' respectively.

exportndf = 0
#exportndf = (com,ast,flt,res,noi,qua)

# low-pass boxcar filter on COM (samples) to assist with convergence
# if boxfact set reduce width of boxcar by this factor each iteration
# boxmin specifies a minimum width below which it can't be reduced

com_boxcar = 10

#com_boxcar  = 400
#com_boxfact = 0.5
#com_boxmin  = 100

# low-pass filter dark squid signals using boxcar of this width (if dks
# model is specified)
dks_boxcar = 100

# additional despiking after each iteration within noi calculation
#noispikethresh = 10
#noispikeiter = 0

# method of estimating variance map
#  0 = propagate from the time-domain noise (requires noi model component)
#  1 = samples variance of data that land in each pixel
varmapmethod = 1

# Perform iterations in memory?
memiter = 1

# If performing iterations in memory, maximum length (seconds) for concatenated
# data. If 0 attempt to concatenate entire continuous chunks.
maxlen = 0

# ----------------------------------------------------------------------------
# The following are for data cleaning. 

# Number of samples of padding to add to start and end before filtering
padstart = 1000
padend = 1000

# Apodize signals with a sin function roll-off across apod samples
apod = 1000

# fraction of samples to be bad to flag entire bolo as dead
badfrac = 0.05

# S/N threshold to detect DC steps
#dcthresh = 150

# box size over which to measure rms for DC step finder
#dcbox = 400

# subtract a baseline polynomial of this order
order = 0

# S/N ratio to flag spikes with sigma-clipper
# spikethresh = 5

# Number of iterations for sigma-clipper (0=until convergence)
# spikeiter = 0

# Flag data taken while telescope was stationary (value is a threshold
# slew velocity (arcsec/sec) measured in tracking coordinates
flagstat = 2

# Hard-edge high-pass frequency-domain filter 
#   e.g. keep only frequencies >= 0.1 Hz
# filt_edgehigh = 0.1

# Hard-edge low-pass frequency-domain filter
#   e.g. keep only frequencies <= 90 Hz
# filt_edgelow = 90

# Hard-edge band-cut frequency-domain notch filters.
# filt_notchlow gives lower edges of frequencies to cut in Hz
# filt_notchhigh gives upper edges of frequencies to cut in Hz
#   e.g. remove 25--35 Hz  and 55--65 Hz
#filt_notchlow  = (25,55)
#filt_notchhigh = (35,65)

