^$STARLINK_DIR/share/smurf/dimmconfig.lis

# *** Specialized config for deep scans of blank fields ***
#
# This config is aimed primarily at reducing blank fields -- extremely
# deep observations for detecting the individual point sources that
# produce the cosmic infrared background.
#
# Since there are no bright objects, a single high-pass filter is
# applied at the start, and no other iterative filtering is
# performed. A harsher high-pass filter is applied than in the default
# configuration since no appreciable large-scale structure is
# expected.
#
# When reducing a large data set it might be useful to write out the
# maps from each iteration/chunk by setting itermap=1.  This will
# produce a series of extensions (.MORE.SMURF.ITERMAPS) for each
# iteration, and for each continuous chunk of data. For example, they
# can be viewed using:
#
#   gaia [output map name].more.smurf.itermaps
#
# By flipping through the more.smurf.itermaps extension it is possible
# to get a good feel for how well the map is converging (and whether
# you would like more or less iterations). It is also useful to
# identify particularly noisy portions of the data. If the last
# iteration of a given chunk looks poor compared with the other chunks,
# you can identify the input files from the FITS header of the
# extension, and remove them.
#
# If you only want to see a single itermap written for the final iteration
# of each chunk set itermap=-1
#
# Setting shortmap=1 will give similar information, except now writing
# out a map each time a single time around the scan pattern has been
# completed (only for the final iteration).
#
# ***********************************************************

numiter = 4

modelorder = (com,ext,ast,noi)

# Use time-domain spiker first because we are only doing a single FFT-based
# high-pass filter before the iterations start.

spikethresh = 10
spikebox = 50

# Heavier high-pass filtering. Note that the default padding/apodization
# that will be used is the number of samples that corresponds to the
# period of the knee frequency in the high-pass filter (i.e. 200*(1/freq) )

450.filt_edge_largescale = 200
850.filt_edge_largescale = 200

# Large-scale structure is not an issue so treat each subarray independently
# for common-mode removal
com.perarray = 1
