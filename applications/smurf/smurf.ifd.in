#+
#  Name:
#     smurf.ifd

#  Purpose:
#     Specify interface files and package structure for SMURF.

#  Language:
#     Tcl

#  Type of Module:
#     Full IFD file.

#  Invocation:
#     ifd2star smurf

#  Description:
#     This file controls the generation of all the interface files for
#     the SMURF package (.ifl files for the ADAM environment) By processing
#     it using  IFD commands (see SSN/68) all of the following files are
#     produced without further intervention:
#
#        ifd2star:
#           task.ifl (for each task)
#           monolith.ifl (for each monolith)
#           smurf.csh
#           smurf.sh
#           smurf.icl
#
#     The task and monolith files are generated by including individual
#     .ifd files (using the tcl core command 'source') to make source 
#     control easier.  The smurf.{csh,icl,cl} files are generated to
#     some extent automatically from the contents of the individual task
#     .ifd files included here, but additional sections are added using
#     the csh, icl and cl commands in this file.

#  Notes:
#     The files generated by processing this file (as listed above) are 
#     to be included without modification in the built SMURF package
#     with the following exceptions.
#
#     This file is tcl source code.

#  Copyright:
#     Copyright (C) 2005-2006 Particle Physics & Astronomy Research Council.
#     All Rights Reserved.

#  Licence:
#     This program is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied
#     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#     PURPOSE. See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place,Suite 330, Boston, MA
#     02111-1307, USA

#  Authors:
#     TIMJ: Tim Jenness (JAC, Hawaii)
#     AGG: Andy Gibb (UBC)
#     EC: Ed Chapin (UBC)
#     JB: Jennifer Balfour (UBC)
#     {enter_new_authors_here}

#  History:
#     27-SEP-2005 (TIMJ):
#        Original version.
#     28-SEP-2005 (EC):
#        Add makemap.
#     04-NOV-2005 (AGG):
#        Add flatfield.
#     10-NOV-2005 (AGG):
#        Add TAU to EXTINCTION
#     17-JAN-2006 (EC):
#        Add PIXRES to MAKEMAP
#     25-JAN-2006 (AGG):
#        Add new EXTINCTION parameters.
#     04-FEB-2006 (AGG):
#        Add QUICK parameter to EXTINCTION.
#     18-FEB-2006 (AGG):
#        Add REMSKY
#     24-FEB-2006 (AGG):
#        Add FIT parameter to REMSKY.
#     18-MAR-2006 (AGG):
#        Add QLMAKEMAP
#     05-MAY-2006 (AGG):
#        Add SCANFIT.
#     16-MAY-2006 (EC):
#        Add METHOD to MAKEMAP
#     29-MAY-2006 (EC):
#        Add ASTMODEL, ATMMODEL and NOISEMODEL to MAKEMAP
#     06-JUN-2006 (AGG):
#        Add SIM and DREAMWTS actions.
#     13-JUN-2006 (AGG):
#        Add DREAMSOLVE (rename of DREAMWTS).
#     14-JUN-2006 (JB):
#        Add SIMTYPE to SIM and add positional args to SIM.
#     17-JUN-2006 (EC):
#        Add CONFIG to MAKEMAP and modify the output NDF parameter settings.
#     14-JUL-2006 (JB):
#        Rename SIM to SC2SIM.
#     27-JUL-2006 (TIMJ):
#        Add initial MAKECUBE parameters.
#     13-SEP-2006 (JB):
#        Add BADBOLOS & made SC2SIM seed optional
#     15-SEP-2006 (AGG):
#        Rename DREAMWEIGHTS
#     22-SEP-2006 (JB):
#        Changed OBSXMLFILE & SIMXMLFILE to OBSFILE & SIMFILE
#     12-OCT-2006 (AGG):
#         Add GROUP keyword for REMSKY
#     13-OCT-2006 (JB):
#         Add USEBAD to MAKEMAP
#     26-OCT-2006 (AGG):
#         Add STARECALC
#     01-NOV-2006 (TIMJ):
#         Add SMURFHELP
#         Add help location
#     20-NOV-2006 (DSB):
#         Added AUTOGRID parameter for MAKECUBE
#     29-NOV-2006 (DSB):
#         Added SPECBOUNDS parameter for MAKECUBE
#     11-JAN-2007 (DSB):
#         Added UBOUND and LBOUND parameters for MAKECUBE
#     12-JAN-2007 (AGG):
#         Added SYSTEM parameter for MAKEMAP and QLMAKEMAP
#     {enter_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-
package @PACKAGE@ {
   version @PACKAGE_VERSION@
   prefix @PACKAGE@

   executable @PACKAGE@_mon {

      action smurfhelp {
         alias {smurfh(elp)}

         helplib {$SMURF_HELP}

         parameter topic {
            position 1
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help topic}
            default {         }
            helpkey *
          }

         parameter subtopic {
            position 2
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subtopic}
            default {         }
            helpkey *
          }

         parameter subsubtopic {
            position 3
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subsubtopic}
            default {         }
            helpkey *
          }
        parameter subsubsubtopic {
            position 4
            type LITERAL
            access READ
            vpath DEFAULT
            prompt {Help subsubsubtopic}
            default {         }
            helpkey *
          }

         parameter msg_filter {
            type _CHAR
            prompt {Message level}
            default NORM
            vpath DEFAULT
            helpkey *
          }

      }


     action extinction {

         helplib {$SMURF_HELP}


         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF data structure}
            helpkey *
          }

	 parameter method {
	    position 3
            type _CHAR
            prompt {Optical depth method}
            helpkey *
         }

	 parameter quick {
	    type _LOGICAL
	    vpath {PROMPT }
	    prompt {Apply the optical depth in quick fashion?}
	    ppath GLOBAL CURRENT
	    default FALSE
	    helpkey *
	  }

	 parameter csotau {
	    type _REAL
	    vpath {PROMPT }
	    prompt {Zenith optical depth at 225 GHz}
	    ppath GLOBAL CURRENT
	    helpkey *
	  }

	 parameter filtertau {
	    type _REAL
	    vpath {PROMPT }
	    prompt {Zenith optical depth for current filter}
	    ppath GLOBAL CURRENT
	    helpkey *
	  }

	 parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }

     }

     action makemap {

         helplib {$SMURF_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF data structure}
            helpkey *
          }

	 parameter pixsize {
	    position 3
	    type _REAL
	    vpath {PROMPT }
	    prompt {Output map pixel size in arcsec}
	    ppath GLOBAL CURRENT
	    default 3.0
	    helpkey *
	  }

	 parameter method {
            type _CHAR
            prompt {Map-making method}
	    default REBIN
            helpkey *
	 }	

	 parameter config {
            type LITERAL
            access READ
            prompt {Map-maker tuning parameters}
            helpkey *
	 }

         parameter astmodel {
            type NDF
            access WRITE
            dynamic yes
            prompt {Output NDF time series estimate of astronomical signal}
            helpkey *
          }

         parameter atmmodel {
	    type NDF 	
            access WRITE
            dynamic yes
            prompt {Output NDF time series estimate of atmospheric signal}
            helpkey *
          }

         parameter noisemodel {
            type NDF
            access WRITE
            dynamic yes
            prompt {Output NDF time series estimate of noise}
            helpkey *
          }

          parameter usebad {
            type _LOGICAL
            vpath DEFAULT
            default 1
            helpkey *
          }

	  parameter system {
	    position 4
            type LITERAL
            access READ
            vpath DEFAULT 
            ppath CURRENT DEFAULT
            prompt {Celestial coord system for output cube}
            default TRACKING
            helpkey *
	  }

	  parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
 	    vpath DEFAULT
            default NORM
	    helpkey *
	  }

     }

     action qlmakemap {

         helplib {$SMURF_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF data structure}
            helpkey *
          }

	 parameter pixsize {
	    position 3
	    type _REAL
	    vpath {PROMPT }
	    prompt {Output map pixel size in arcsec}
	    ppath GLOBAL CURRENT
	    default 3.0
	    helpkey *
	  }

	  parameter system {
	    position 4
            type LITERAL
            access READ
            vpath DEFAULT 
            ppath CURRENT DEFAULT
            prompt {Celestial coord system for output cube}
            default TRACKING
            helpkey *
	  }

	  parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }

     }

     action flatfield {

         helplib {$SMURF_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            association <-GLOBAL.DATA_ARRAY
            prompt {Input timeseries}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Flatfielded timeseries}
            helpkey *
          }

	  parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }
     }

     action scanfit {

         helplib {$SMURF_HELP}

         parameter ndf {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            association <-GLOBAL.DATA_ARRAY
            prompt {Input timeseries}
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Scanfit timeseries}
            helpkey *
          }

          parameter order {
	    position 3
            type INTEGER
            prompt {Polynomial order}
          }

	  parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }
     }

     action remsky {

         helplib {$SMURF_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            association <-GLOBAL.DATA_ARRAY
            prompt {Input timeseries}
            helpkey *
          }

         parameter method {
	    position 3
            type _CHAR
            prompt {Sky removal method}
            helpkey *
          }

	 parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Sky-subtracted timeseries}
            helpkey *
          }

         parameter group {
            position 4
            type _LOGICAL
            prompt {Group related files?}
            ppath DEFAULT CURRENT
            default FALSE
            helpkey *
         }

	 parameter fit {
	    type _CHAR
	    vpath {PROMPT }
	    prompt {Remove mean, slope or plane?}
	    ppath GLOBAL CURRENT
	    helpkey *
	  }

	  parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }
     }

     action dreamweights {

         helplib {$SMURF_HELP}

          parameter ndf {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input raw data file}
          }

          parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output weights file}
          }

	  parameter config {
	    position 3
            type LITERAL
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            prompt {DREAM reconstruction parameters}
            helpkey *
	  }

          parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }
     }

     action dreamsolve {

         helplib {$SMURF_HELP}

          parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input data file}
          }
          parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output data file}
          }
          parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }
     }

     action starecalc {

         helplib {$SMURF_HELP}

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input data file(s)}
         }
         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association ->GLOBAL.DATA_ARRAY
            prompt {Output data file(s)}
         }
         parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	 }
     }

     action sc2sim {

         helplib {$SMURF_HELP}

          parameter obsfile {
            position 1
            type _CHAR
            prompt {Observation file}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter simfile {
            position 2
            type _CHAR
            prompt {Simulation file}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter seed {
            position 3
            type _INTEGER
            vpath DEFAULT
            default !
            helpkey *
          }

          parameter maxwrite {
            position 4
            type _INTEGER
            prompt {Number of samples to write in output file}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter simtype {
            position 5
            type _CHAR
            prompt {Simulation type (FULL or WEIGHTS)}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    vpath DEFAULT
	    default NORM
	    helpkey *
	  }

     }
  
     action makecube {

         helplib {$SMURF_HELP}

 	  parameter autogrid {
	    type _LOGICAL
	    vpath DEFAULT
	    ppath CURRENT
	    prompt {Determine projection parameters automatically?}
	    default FALSE
	    helpkey *
	  }
         parameter catframe {
            type LITERAL
            ppath DEFAULT
            vpath DEFAULT
            prompt {Output catalogue coordinate Frame}
            helpkey *
            default !
         }

         parameter catepoch {
            type _DOUBLE
            ppath DYNAMIC CURRENT
            prompt {Output catalogue epoch}
            helpkey *
         }

	 parameter crota {
	    type _REAL
	    prompt {Position angle of second pixel axis in output (degs)}
	    ppath DYNAMIC
	    vpath DYNAMIC
	    helpkey *
	  }

	  parameter detectors {
            type LITERAL
            access READ
            vpath DEFAULT 
            ppath CURRENT DEFAULT
            prompt {Names of detectors to be included}
            default !
            helpkey *
	  }

          parameter fbl {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

          parameter fbr {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }


          parameter flbnd {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

          parameter fubnd {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

          parameter ftl {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

          parameter ftr {
            size *
            type _DOUBLE
            access WRITE
            vpath INTERNAL
            helpkey *
          }

 	  parameter genvar {
	    type LITERAL
	    vpath DEFAULT
	    ppath CURRENT DEFAULT
	    prompt {Method for calculating output variances}
	    default {TSYS}
	    helpkey *
	  }

         parameter in {
            position 1
            type NDF
            access READ
            vpath {PROMPT }
            ppath GLOBAL CURRENT
            association <-GLOBAL.DATA_ARRAY
            prompt {Input NDF data structure}
            helpkey *
          }

         parameter lbound {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

         parameter out {
            position 2
            type NDF
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF data structure}
            helpkey *
          }

         parameter outcat {
            type LITERAL
            access WRITE
            vpath DEFAULT
            ppath CURRENT DEFAULT
            association ->GLOBAL.CATALOGUE
            prompt {Output positions list}
            default !
            helpkey *
          }

         parameter params {
            size *
            type _DOUBLE
            vpath PROMPT
            ppath CURRENT
            prompt {Auxiliary rebinning parameters}
            helpkey *
         }

	 parameter pixsize {
	    position 3
	    type _REAL
	    prompt {Output pixel size(s) for spatial part of map (arcsec)}
	    ppath DYNAMIC
	    vpath DYNAMIC
	    helpkey *
	  }

	  parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    default NORM
	    vpath DEFAULT	
	    helpkey *
	  }

	  parameter reflat {
            type LITERAL
            access READ
	    ppath DYNAMIC
	    vpath DYNAMIC
            prompt {Celestial latitude at output reference point}
            helpkey *
	  }

	  parameter reflon {
            type LITERAL
            access READ
	    ppath DYNAMIC
	    vpath DYNAMIC
            prompt {Celestial longitude at output reference point}
            helpkey *
	  }

 	  parameter sparse {
	    type _LOGICAL
	    vpath DYNAMIC DEFAULT
	    ppath DYNAMIC DEFAULT
	    prompt {Create a sparse output array?}
	    default FALSE
	    helpkey *
	  }

         parameter specbounds {
            type LITERAL
            ppath DYNAMIC
            vpath DYNAMIC
            prompt {Low and high bounds for output spectral axis}
            helpkey *
         }

 	  parameter weights {
	    type _LOGICAL
	    vpath DEFAULT
	    ppath CURRENT
	    prompt {Save pixel weights in the output NDF?}
	    default FALSE
	    helpkey *
	  }
         parameter spread {
            type LITERAL
            vpath DEFAULT
            ppath DEFAULT
            prompt {Pixel spreading method}
            helpkey *
            default {Nearest}
         }

	  parameter system {
	    position 4
            type LITERAL
            access READ
            vpath DEFAULT 
            ppath CURRENT DEFAULT
            prompt {Celestial coord system for output cube}
            default TRACKING
            helpkey *
	  }

          parameter ubound {
            size *
            type _INTEGER
            access WRITE
            vpath INTERNAL
            helpkey *
          }

 	  parameter usedetpos {
	    type _LOGICAL
	    vpath DEFAULT
	    ppath CURRENT
	    prompt {Read detector positions from the input NDF?}
	    default TRUE
	    helpkey *
	  }

     }

     action impaztec {

         helplib {$SMURF_HELP}

         parameter in {
            position 1
            type _CHAR
            access READ
            vpath {PROMPT }
            prompt {Input AzTEC NETCDF File}
            ppath GLOBAL CURRENT
            helpkey *
          }

         parameter out {
            position 2
            type _CHAR
            access WRITE
            vpath {PROMPT }
            association ->GLOBAL.DATA_ARRAY
            prompt {Output NDF file}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter msg_filter {
            type _CHAR
            prompt {Message level}
            vpath DEFAULT
	    default NORM
            helpkey *
          }
     }

     action badbolos {

         helplib {$SMURF_HELP}

         parameter in {
            position 1
            type _CHAR
            access READ
            vpath {PROMPT }
            prompt {Input Simulated NDF File}
            ppath GLOBAL CURRENT
            helpkey *
          }

	  parameter method {
            type _CHAR
            prompt {Bad bolometer generation method}
	    default RANDOM
            helpkey *
	  }

         parameter ard {
            type _CHAR
            access READ
            vpath {PROMPT }
            prompt {Input ARD Description File}
            ppath GLOBAL CURRENT
            helpkey *
          }          

          parameter bad_columns {
            position 2
            type _INTEGER
            prompt {Number of bad columns of bolometers}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter bad_rows {
            position 3
            type _INTEGER
            prompt {Number of bad rows of bolometers}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter bad_bolos {
            position 4
            type _INTEGER
            prompt {Number of additional bad individual bolometers}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter seed {
            position 5
            type _INTEGER
            vpath DEFAULT
            default !
            helpkey *
          }

          parameter msg_filter {
            type _CHAR
            prompt {Message level}
            vpath DEFAULT
	    default NORM
            helpkey *
          }
     }

     action skynoise {

         helplib {$SMURF_HELP}

          parameter obsfile {
            position 1
            type _CHAR
            prompt {Observation file}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter simfile {
            position 2
            type _CHAR
            prompt {Simulation file}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter seed {
            position 3
            type _INTEGER
            vpath DEFAULT
            default !
            helpkey *
          }

          parameter exponent {
            position 4
            type _DOUBLE
            prompt {Power-Law Exponent}
            vpath {PROMPT}
            ppath GLOBAL CURRENT
            helpkey *
          }

          parameter filename {
            type _CHAR
            vpath DEFAULT
            default atm
            helpkey *
          }

          parameter msg_filter {
	    type _CHAR
	    prompt {Message level}
	    vpath DEFAULT
	    default NORM
	    helpkey *
	  }

     }

   }

   icl {defhelp @PACKAGE@ $@PACKAGE_UPCASE@_HELP 0}

   display {

     @PACKAGE_UPCASE@ commands are now available -- (Version @PACKAGE_VERSION@)

     Type smurfhelp for help on @PACKAGE_UPCASE@ commands.
     Type "showme sunXXX" to browse the hypertext documentation.

     NOTE, several applications have had major changes made to their
     parameter lists. See the "Release Notes" section of SUN/XXX for
     details.

   }

}
