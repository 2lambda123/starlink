# -*- tcl -*-
#+
#  Name:
#     smurf.ifd

#  Purpose:
#     Specify interface files and package structure for SMURF.

#  Language:
#     Tcl

#  Type of Module:
#     Full IFD file.

#  Invocation:
#     ifd2star smurf

#  Description:
#     This file controls the generation of all the interface files for
#     the SMURF package (.ifl files for the ADAM environment) By processing
#     it using  IFD commands (see SSN/68) all of the following files are
#     produced without further intervention:
#
#        ifd2star:
#           task.ifl (for each task)
#           monolith.ifl (for each monolith)
#           smurf.csh
#           smurf.sh
#           smurf.icl
#
#     The task and monolith files are generated by including individual
#     .ifd files (using the tcl core command 'source') to make source 
#     control easier.  The smurf.{csh,icl,cl} files are generated to
#     some extent automatically from the contents of the individual task
#     .ifd files included here, but additional sections are added using
#     the csh, icl and cl commands in this file.

#  Notes:
#     The files generated by processing this file (as listed above) are 
#     to be included without modification in the built SMURF package
#     with the following exceptions.
#
#     This file is tcl source code.

#  Copyright:
#     Copyright (C) 2007-2008 Science and Technology Facilities Council.
#     Copyright (C) 2005-2009 University of British Columbia.
#     Copyright (C) 2005-2006 Particle Physics & Astronomy Research Council.
#     All Rights Reserved.

#  Licence:
#     This program is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation; either version 3 of
#     the License, or (at your option) any later version.
#
#     This program is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied
#     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#     PURPOSE. See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software
#     Foundation, Inc., 59 Temple Place,Suite 330, Boston, MA
#     02111-1307, USA

#  Authors:
#     TIMJ: Tim Jenness (JAC, Hawaii)
#     AGG: Andy Gibb (UBC)
#     EC: Ed Chapin (UBC)
#     JB: Jennifer Balfour (UBC)
#     {enter_new_authors_here}

#  History:
#     27-SEP-2005 (TIMJ):
#        Original version.
#     28-SEP-2005 (EC):
#        Add makemap.
#     04-NOV-2005 (AGG):
#        Add flatfield.
#     10-NOV-2005 (AGG):
#        Add TAU to EXTINCTION
#     17-JAN-2006 (EC):
#        Add PIXRES to MAKEMAP
#     25-JAN-2006 (AGG):
#        Add new EXTINCTION parameters.
#     04-FEB-2006 (AGG):
#        Add QUICK parameter to EXTINCTION.
#     18-FEB-2006 (AGG):
#        Add REMSKY
#     24-FEB-2006 (AGG):
#        Add FIT parameter to REMSKY.
#     18-MAR-2006 (AGG):
#        Add QLMAKEMAP
#     05-MAY-2006 (AGG):
#        Add SCANFIT.
#     16-MAY-2006 (EC):
#        Add METHOD to MAKEMAP
#     29-MAY-2006 (EC):
#        Add ASTMODEL, ATMMODEL and NOISEMODEL to MAKEMAP
#     06-JUN-2006 (AGG):
#        Add SIM and DREAMWTS actions.
#     13-JUN-2006 (AGG):
#        Add DREAMSOLVE (rename of DREAMWTS).
#     14-JUN-2006 (JB):
#        Add SIMTYPE to SIM and add positional args to SIM.
#     17-JUN-2006 (EC):
#        Add CONFIG to MAKEMAP and modify the output NDF parameter settings.
#     14-JUL-2006 (JB):
#        Rename SIM to SC2SIM.
#     27-JUL-2006 (TIMJ):
#        Add initial MAKECUBE parameters.
#     13-SEP-2006 (JB):
#        Add BADBOLOS & made SC2SIM seed optional
#     15-SEP-2006 (AGG):
#        Rename DREAMWEIGHTS
#     22-SEP-2006 (JB):
#        Changed OBSXMLFILE & SIMXMLFILE to OBSFILE & SIMFILE
#     12-OCT-2006 (AGG):
#         Add GROUP keyword for REMSKY
#     13-OCT-2006 (JB):
#         Add USEBAD to MAKEMAP
#     26-OCT-2006 (AGG):
#         Add STARECALC
#     01-NOV-2006 (TIMJ):
#         Add SMURFHELP
#         Add help location
#     20-NOV-2006 (DSB):
#         Added AUTOGRID parameter for MAKECUBE
#     29-NOV-2006 (DSB):
#         Added SPECBOUNDS parameter for MAKECUBE
#     11-JAN-2007 (DSB):
#         Added UBOUND and LBOUND parameters for MAKECUBE
#     12-JAN-2007 (AGG):
#         Added SYSTEM parameter for MAKEMAP and QLMAKEMAP
#     26-JAN-2007 (AGG):
#         Added OVERWRITE parameter for SC2SIM
#     30-JAN-2007 (TIMJ):
#         Add jcmtstate2cat
#     01-MAR-2007 (AGG):
#         Add SIMSTATS parameter for SC2SIM
#     28-MAR-2007 (TIMJ):
#         Add missing helpkey
#     10-MAY-2007 (TIMJ):
#         Add dumpocscfg
#     15-JUN-2007 (TIMJ):
#         Add gettsys
#     05-OCT-2007 (AGG):
#         Add default value of 1.8 for skynoise exponent
#     19-OCT-2007 (TIMJ):
#         Add RAWUNPRESS
#     25-OCT-2007 (DSB):
#         Added SPECUNION, POLBINSIZE and NPOLBIN for MAKECUBE
#     8-NOV-2007 (DSB):
#         Added action TIMESORT.
#     18-DEC-2007 (DSB):
#         Added parameter REF to MAKECUBE.
#     17-JAN-2008 (DSB):
#         Added parameter ALIGNSYS to MAKECUBE.
#     25-JAN-2008 (DSB):
#        Add UNMAKECUBE.
#     05-FEB-2008 (JB):
#         Added action GSD2ACSIS
#     12-FEB-2008 (DSB):
#         Added parameter POLBINZERO to MAKECUBE.
#     12-FEB-2008 (AGG):
#         Add USEBAD parameter to QLMAKEMAP
#     13-FEB-2008 (AGG):
#         Add SPREAD and PARAMS to MAKEMAP and QLMAKEMAP
#     16-MAR-2008 (BZ):
#         Added action SC2FTS
#     27-MAR-2008 (EC):
#         Add SC2CLEAN
#     16-APR-2008 (AGG):
#         Remove USEBAD, add GENVAR for QLMAKEMAP
#     21-APR-2008 (JB):
#         Add action GSDSHOW
#     24-APR-2008 (AGG):
#         Change SIMFILE/OBSFILE to SIMPAR/OBSPAR for SKYNOISE
#     24-APR-2008 (EC):
#         Added MAXMEM to MAKEMAP
#     09-MAY-2008 (AGG):
#         Remove USEBAD parameter, set MAXMEM default to 2048 for MAKEMAP
#     09-MAY-2008 (TIMJ):
#         Add EXTINCTION:HASSKYREM
#     05-JUN-2008 (TIMJ):
#         Add F* parameters to MAKEMAP.
#         Add ALIGNSYS to MAKEMAP.
#         Add REF to MAKEMAP
#     23-JUL-2008 (EC):
#         Add SC2FFT
#     27-JUL-2008 (EC):
#         Add OUT parameter to SC2CONCAT
#     13-NOV-2008 (AGG):
#         Add NAVER parameter to STARECALC
#     12-DEC-2008 (TIMJ):
#         Add BPM masking param
#     01-JAN-2009 (EC):
#         Add FLAGSTAT to SC2CLEAN
#     27-MAR-2009 (TIMJ):
#         Add CALCRESP
#     2009-03-30 (TIMJ):
#         Add OUTFILES to all routines.
#     2-JUL-2009 (DSB):
#         Added EXTRACOLS parameter to MAKECUBE
#     {enter_changes_here}

#  Bugs:
#     {note_any_bugs_here}

#-
package @PACKAGE@ {
    version @PACKAGE_VERSION@
    prefix @PACKAGE@

    executable @PACKAGE@_mon {

        action smurfhelp {
            alias {smurfh(elp)}

            helplib {$SMURF_HELP}

            parameter topic {
                position 1
                type LITERAL
                access READ
                vpath DEFAULT
                prompt {Help topic}
                default {         }
                helpkey *
            }

            parameter subtopic {
                position 2
                type LITERAL
                access READ
                vpath DEFAULT
                prompt {Help subtopic}
                default {         }
                helpkey *
            }

            parameter subsubtopic {
                position 3
                type LITERAL
                access READ
                vpath DEFAULT
                prompt {Help subsubtopic}
                default {         }
                helpkey *
            }
            parameter subsubsubtopic {
                position 4
                type LITERAL
                access READ
                vpath DEFAULT
                prompt {Help subsubsubtopic}
                default {         }
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT
                helpkey *
            }

        }


        action extinction {

            helplib {$SMURF_HELP}

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF data structure}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter tausrc {
                position 3
                type _CHAR
                prompt {Source of opacity data}
                helpkey *
            }

            parameter method {
                position 4
                type _CHAR
                vpath {PROMPT }
                prompt {Method to use for airmass calculation}
                ppath CURRENT
                helpkey *
            }

            parameter hasskyrem {
                type _LOGICAL
                vpath {DEFAULT}
                prompt {Has sky removal been applied?}
                ppath GLOBAL CURRENT
                default FALSE
                helpkey *
            }

            parameter csotau {
                type _REAL
                prompt {Zenith optical depth at 225 GHz}
                ppath DYNAMIC CURRENT
                helpkey *
            }

            parameter filtertau {
                type _REAL
                prompt {Zenith optical depth for current filter}
                ppath DYNAMIC CURRENT
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }

        }

        action makemap {

            helplib {$SMURF_HELP}

            parameter alignsys {
                type _LOGICAL
                vpath DEFAULT
                ppath CURRENT
                prompt {Align data in the output spatial co-ordinate system?}
                default FALSE
                helpkey *
            }

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }

            parameter lbnd {
                size *
                type _INTEGER
                access READ
                vpath DYNAMIC
                ppath DYNAMIC
                prompt {Lower pixel index bounds for output spatial axes}
                helpkey *
            }

            parameter lbound {
                size *
                type _INTEGER
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter ubnd {
                size *
                type _INTEGER
                access READ
                vpath DYNAMIC
                ppath DYNAMIC
                prompt {Upper pixel index bounds for output spatial axes}
                helpkey *
            }

            parameter ubound {
                size *
                type _INTEGER
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter fbl {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter fbr {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }


            parameter flbnd {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter fubnd {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter ftl {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter ftr {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter ref {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Reference NDF}
                default !
                helpkey *
            }

            parameter reflat {
                type LITERAL
                access READ
                ppath DYNAMIC
                vpath DYNAMIC
                prompt {Celestial latitude at output reference point}
                helpkey *
            }

            parameter reflon {
                type LITERAL
                access READ
                ppath DYNAMIC
                vpath DYNAMIC
                prompt {Celestial longitude at output reference point}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF data structure}
                helpkey *
            }

            parameter pixsize {
                position 3
                type _REAL
                prompt {Output pixel size(s) for the map (arcsec)}
                ppath DYNAMIC
                vpath DYNAMIC
                helpkey *
            }

            parameter crota {
                type _REAL
                prompt {Position angle of second pixel axis in output (degs)}
                ppath DYNAMIC
                vpath DYNAMIC
                helpkey *
            }

            parameter maxmem {
                type _INTEGER
                vpath {DEFAULT }
                prompt {Maximum memory available for map-making in Mb}
                ppath GLOBAL CURRENT
                default 2048
                helpkey *
            }

            parameter tiledims {
                type _INTEGER
                prompt {Output tile dimensions in pixels}
                ppath CURRENT DEFAULT
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter method {
                type _CHAR
                prompt {Map-making method}
                default REBIN
                helpkey *
            }	

            parameter config {
                type LITERAL
                access READ
                ppath CURRENT
                prompt {Map-maker tuning parameters}
                helpkey *
            }

            parameter ntile {
                type _INTEGER
                access WRITE
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter params {
                size *
                type _DOUBLE
                vpath PROMPT
                ppath CURRENT
                prompt {Auxiliary rebinning parameters}
                helpkey *
            }

            parameter spread {
                type LITERAL
                vpath DEFAULT
                ppath DEFAULT
                prompt {Pixel spreading method}
                helpkey *
                default {Nearest}
            }

            parameter system {
                position 4
                type LITERAL
                access READ
                vpath DEFAULT 
                ppath CURRENT DEFAULT
                prompt {Celestial coord system for output cube}
                default TRACKING
                helpkey *
            }

            parameter tileborder {
                type _INTEGER
                prompt {Width of tile overlap in pixels}
                ppath CURRENT DEFAULT
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter trimtiles {
                type _LOGICAL
                vpath DEFAULT
                prompt {Trim the output tiles?}
                ppath CURRENT DEFAULT
                default FALSE
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                vpath DEFAULT
                default NORM
                helpkey *
            }

        }

        action qlmakemap {

            helplib {$SMURF_HELP}

            parameter crota {
                type _REAL
                prompt {Position angle of second pixel axis in output (degs)}
                ppath DYNAMIC
                vpath DYNAMIC
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF data structure}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter params {
                size *
                type _DOUBLE
                vpath PROMPT
                ppath CURRENT
                prompt {Auxiliary rebinning parameters}
                helpkey *
            }

            parameter pixsize {
                position 3
                type _REAL
                vpath {PROMPT }
                prompt {Output map pixel size in arcsec}
                ppath GLOBAL CURRENT
                default 3.0
                helpkey *
            }

            parameter spread {
                type LITERAL
                vpath DEFAULT
                ppath DEFAULT
                prompt {Pixel spreading method}
                helpkey *
                default {Nearest}
            }

            parameter system {
                position 4
                type LITERAL
                access READ
                vpath DEFAULT 
                ppath CURRENT DEFAULT
                prompt {Celestial coord system for output map}
                default TRACKING
                helpkey *
            }

            parameter genvar {
                type _LOGICAL
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter reflat {
                type LITERAL
                access READ
                ppath DYNAMIC
                vpath DYNAMIC
                prompt {Celestial latitude at output reference point}
                helpkey *
            }

            parameter reflon {
                type LITERAL
                access READ
                ppath DYNAMIC
                vpath DYNAMIC
                prompt {Celestial longitude at output reference point}
                helpkey *
            }

            parameter meansky {
                type _DOUBLE
                access WRITE
                vpath DEFAULT
                default 0.0
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }

        }

        action flatfield {

            helplib {$SMURF_HELP}

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input timeseries}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Flatfielded timeseries}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action rawunpress {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input timeseries}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Uncompressed timeseries}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action rawfixmeta {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input timeseries}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Uncompressed timeseries}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT
                helpkey *
            }
        }

        action scanfit {

            helplib {$SMURF_HELP}

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input timeseries}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Scanfit timeseries}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter order {
                position 3
                type INTEGER
                prompt {Polynomial order}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action remsky {

            helplib {$SMURF_HELP}

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input timeseries}
                helpkey *
            }

            parameter method {
                position 3
                type _CHAR
                prompt {Sky removal method}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Sky-subtracted timeseries}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter group {
                position 4
                type _LOGICAL
                prompt {Group related files?}
                ppath DEFAULT CURRENT
                default FALSE
                helpkey *
            }

            parameter fit {
                type _CHAR
                vpath {PROMPT }
                prompt {Remove mean, slope or plane?}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action calcdark {

            helplib {$SMURF_HELP}

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input dark timeseries}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Processed darks}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action calcflat {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input flatfield files}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                ppath DYNAMIC CURRENT
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Processed flatfield file}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }

            parameter ngood {
                type _INTEGER
                access WRITE
                vpath DEFAULT
                prompt {Number of good responsivities}
                default 0
                helpkey *
            }

            parameter refres {
                type _DOUBLE
                access READ
                ppath  DYNAMIC CURRENT
                prompt {Reference pixel heater resistance}
                helpkey *
            }


            parameter resist {
                position 3
                type LITERAL
                access READ
                ppath CURRENT
                prompt {Heater resistance information}
                helpkey *
            }

            parameter resp {
                type NDF
                access WRITE
                vpath {PROMPT }
                ppath CURRENT DEFAULT
                prompt {Responsivity map}
                default !
                helpkey *
            }

            parameter respmask {
                type _LOGICAL
                vpath {PROMPT }
                prompt {Mask bolometers with bad responsivity?}
                ppath GLOBAL CURRENT
                default TRUE
                helpkey *
            }

        }

        action calcresp {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input files containing flatfield parameters}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                ppath DYNAMIC CURRENT
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Responsivity images}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT
                helpkey *
            }

            parameter ngood {
                size *
                type _INTEGER
                access WRITE
                vpath INTERNAL
                prompt {Number of good responsivities in each file}
                helpkey *
            }

        }

        action dreamweights {

            helplib {$SMURF_HELP}

            parameter ndf {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input raw data file}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association ->GLOBAL.DATA_ARRAY
                prompt {Output weights file}
                helpkey *
            }

            parameter config {
                position 3
                type LITERAL
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                prompt {DREAM reconstruction parameters}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action dreamsolve {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input data file}
                helpkey *
            }
            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association ->GLOBAL.DATA_ARRAY
                prompt {Output data file}
                helpkey *
            }
            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action starecalc {

            helplib {$SMURF_HELP}

            parameter bpm {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Bad pixel masks}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input data file(s)}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association ->GLOBAL.DATA_ARRAY
                prompt {Output data file(s)}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter naver {
                type _INTEGER
                prompt {Number of samples to average together to produce an image}
                vpath DEFAULT
                default !
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action sc2sim {

            helplib {$SMURF_HELP}

            parameter obspar {
                position 1
                type _CHAR
                prompt {Observation parameters}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter simpar {
                position 2
                type _CHAR
                prompt {Simulation parameters}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter seed {
                position 3
                type _INTEGER
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter maxwrite {
                position 4
                type _INTEGER
                prompt {Number of samples to write in output file}
                vpath DEFAULT
		default 12000
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter overwrite {
                position 5
                type _LOGICAL
                prompt {Overwrite existing files?}
                vpath DEFAULT
                default TRUE
                ppath CURRENT
                helpkey *
            }

            parameter simstats {
                position 6
                type _LOGICAL
                prompt {Report simulation statistics only?}
                vpath DEFAULT
                default FALSE
                ppath CURRENT
                helpkey *
            }

            parameter simtype {
                position 7
                type _CHAR
                prompt {Simulation type (FULL or WEIGHTS)}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter badbol {
                type _CHAR
                access READ
                vpath {DEFAULT }
                default !
                prompt {ARD Description File for Bad Bolometer mask}
                ppath GLOBAL CURRENT
                helpkey *
            }          

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                vpath DEFAULT
                default NORM
                helpkey *
            }

        }
        
        action makecube {

            helplib {$SMURF_HELP}

            parameter alignsys {
                type _LOGICAL
                vpath DEFAULT
                ppath CURRENT
                prompt {Align data in the output spatial co-ordinate system?}
                default FALSE
                helpkey *
            }

            parameter autogrid {
                type _LOGICAL
                vpath DEFAULT
                ppath CURRENT
                prompt {Determine projection parameters automatically?}
                default FALSE
                helpkey *
            }

            parameter badmask {
                type LITERAL
                ppath DEFAULT
                vpath DEFAULT
                prompt {Scheme for determining the output bad pixel mask}
                helpkey *
                default OR
            }

            parameter catframe {
                type LITERAL
                ppath DEFAULT
                vpath DEFAULT
                prompt {Output catalogue coordinate Frame}
                helpkey *
                default !
            }

            parameter catepoch {
                type _DOUBLE
                ppath DYNAMIC CURRENT
                prompt {Output catalogue epoch}
                helpkey *
            }

            parameter crota {
                type _REAL
                prompt {Position angle of second pixel axis in output (degs)}
                ppath DYNAMIC
                vpath DYNAMIC
                helpkey *
            }

            parameter detectors {
                type LITERAL
                access READ
                vpath DEFAULT 
                ppath CURRENT DEFAULT
                prompt {Names of detectors to be included}
                default !
                helpkey *
            }

            parameter extracols {
                type LITERAL
                access READ
                vpath DEFAULT 
                ppath CURRENT DEFAULT
                prompt {JCMTState items to include in output catalogue}
                default !
                helpkey *
            }

            parameter fbl {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter fbr {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }


            parameter flbnd {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter fubnd {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter ftl {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter ftr {
                size *
                type _DOUBLE
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter genvar {
                type LITERAL
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Method for calculating output variances}
                default {TSYS}
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }

            parameter inweight {
                type _LOGICAL
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Weight input spectra when combining them?}
                default TRUE
                helpkey *
            }

            parameter lbnd {
                size *
                type _INTEGER
                access READ
                vpath DYNAMIC
                ppath DYNAMIC
                prompt {Lower pixel index bounds for output spatial axes}
                helpkey *
            }

            parameter lbound {
                size *
                type _INTEGER
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter ntile {
                type _INTEGER
                access WRITE
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter npolbin {
                type _INTEGER
                access WRITE
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF data structure}
                helpkey *
            }

            parameter outcat {
                type LITERAL
                access WRITE
                vpath DEFAULT
                ppath CURRENT DEFAULT
                association ->GLOBAL.CATALOGUE
                prompt {Output positions list}
                default !
                helpkey *
            }

            parameter params {
                size *
                type _DOUBLE
                vpath PROMPT
                ppath CURRENT
                prompt {Auxiliary rebinning parameters}
                helpkey *
            }

            parameter pixsize {
                position 3
                type _REAL
                prompt {Output pixel size(s) for spatial part of map (arcsec)}
                ppath DYNAMIC
                vpath DYNAMIC
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter polbinsize {
                type _REAL
                prompt {Angular size of analyser angle bins (degs)}
                ppath CURRENT DEFAULT
                default !
                helpkey *
            }

            parameter polbinzero {
                type _REAL
                prompt {Angle at centre of first polarisation bin (degs)}
                vpath DEFAULT
                ppath CURRENT DEFAULT
                default 0.0
                helpkey *
            }

            parameter ref {
                type NDF
                access READ
                vpath DEFAULT
                ppath CURRENT DEFAULT
                prompt {Reference NDF}
                default !
                helpkey *
            }

            parameter reflat {
                type LITERAL
                access READ
                ppath DYNAMIC
                vpath DYNAMIC
                prompt {Celestial latitude at output reference point}
                helpkey *
            }

            parameter reflon {
                type LITERAL
                access READ
                ppath DYNAMIC
                vpath DYNAMIC
                prompt {Celestial longitude at output reference point}
                helpkey *
            }

            parameter sparse {
                type _LOGICAL
                vpath DYNAMIC DEFAULT
                ppath DYNAMIC DEFAULT
                prompt {Create a sparse output array?}
                default FALSE
                helpkey *
            }

            parameter specbounds {
                type LITERAL
                ppath DYNAMIC
                vpath DYNAMIC
                prompt {Low and high bounds for output spectral axis}
                helpkey *
            }

            parameter specunion {
                type _LOGICAL
                ppath CURRENT DEFAULT
                vpath DEFAULT
                prompt {Use union of input spectral ranges as default for SPECBOUNDS?}
                default FALSE
                helpkey *
            }

            parameter tileborder {
                type _INTEGER
                prompt {Width of tile overlap in pixels}
                ppath CURRENT DEFAULT
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter tiledims {
                type _INTEGER
                prompt {Output tile dimensions in pixels}
                ppath CURRENT DEFAULT
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter trim {
                type _LOGICAL
                vpath DEFAULT
                prompt {Trim the output cube to excluded unused detectors?}
                ppath CURRENT DEFAULT
                default TRUE
                helpkey *
            }

            parameter trimtiles {
                type _LOGICAL
                vpath DEFAULT
                prompt {Trim the output tiles?}
                ppath CURRENT DEFAULT
                default FALSE
                helpkey *
            }

            parameter weights {
                type _LOGICAL
                vpath DEFAULT
                ppath CURRENT
                prompt {Save pixel weights in the output NDF?}
                default FALSE
                helpkey *
            }
            parameter spread {
                type LITERAL
                vpath DEFAULT
                ppath DEFAULT
                prompt {Pixel spreading method}
                helpkey *
                default {Nearest}
            }

            parameter system {
                position 4
                type LITERAL
                access READ
                vpath DEFAULT 
                ppath CURRENT DEFAULT
                prompt {Celestial coord system for output cube}
                default TRACKING
                helpkey *
            }


            parameter ubnd {
                size *
                type _INTEGER
                access READ
                vpath DYNAMIC
                ppath DYNAMIC
                prompt {Upper pixel index bounds for output spatial axes}
                helpkey *
            }

            parameter ubound {
                size *
                type _INTEGER
                access WRITE
                vpath INTERNAL
                helpkey *
            }

            parameter usedetpos {
                type _LOGICAL
                vpath DEFAULT
                ppath CURRENT
                prompt {Read detector positions from the input NDF?}
                default TRUE
                helpkey *
            }

        }

        action unmakecube {

            helplib {$SMURF_HELP}

            parameter detectors {
                type LITERAL
                access READ
                vpath DEFAULT 
                ppath CURRENT DEFAULT
                prompt {Names of detectors to be included}
                default !
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input sky cubes}
                helpkey *
            }

            parameter interp {
                type LITERAL
                vpath DEFAULT
                ppath DEFAULT
                prompt {Pixel interpolation method}
                helpkey *
                default {Nearest}
            }

            parameter out {
                position 3
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output time series cubes}
                helpkey *
            }

            parameter params {
                size *
                type _DOUBLE
                vpath PROMPT
                ppath CURRENT
                prompt {Auxiliary interpolation parameters}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }

            parameter ref {
                position 2
                type NDF
                access READ
                vpath PROMPT
                ppath CURRENT
                prompt {Template time series cubes}
                helpkey *
            }

            parameter usedetpos {
                type _LOGICAL
                vpath DEFAULT
                ppath CURRENT
                prompt {Read detector positions from the input NDF?}
                default TRUE
                helpkey *
            }

        }

        action impaztec {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type _CHAR
                access READ
                vpath {PROMPT }
                prompt {Input AzTEC NETCDF File}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter out {
                position 2
                type _CHAR
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF file}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                vpath DEFAULT
                default NORM
                helpkey *
            }
        }

        action badbolos {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type _CHAR
                access READ
                vpath {PROMPT }
                prompt {Input Simulated NDF File}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter method {
                type _CHAR
                prompt {Bad bolometer generation method}
                default RANDOM
                helpkey *
            }

            parameter ard {
                type _CHAR
                access READ
                vpath {PROMPT }
                prompt {Input ARD Description File}
                ppath GLOBAL CURRENT
                helpkey *
            }          

            parameter bad_columns {
                position 2
                type _INTEGER
                prompt {Number of bad columns of bolometers}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter bad_rows {
                position 3
                type _INTEGER
                prompt {Number of bad rows of bolometers}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter bad_bolos {
                position 4
                type _INTEGER
                prompt {Number of additional bad individual bolometers}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter seed {
                position 5
                type _INTEGER
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                vpath DEFAULT
                default NORM
                helpkey *
            }
        }

        action skynoise {

            helplib {$SMURF_HELP}

            parameter obspar {
                position 1
                type _CHAR
                prompt {Observation file}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter simpar {
                position 2
                type _CHAR
                prompt {Simulation file}
                vpath {PROMPT}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter seed {
                position 3
                type _INTEGER
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter exponent {
                position 4
                type _DOUBLE
                prompt {Power-Law Exponent}
                vpath DEFAULT
                default 1.8
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter filename {
                type _CHAR
                vpath DEFAULT
                default atm
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                vpath DEFAULT
                default NORM
                helpkey *
            }

        }

        action timesort {

            helplib {$SMURF_HELP}

            parameter detectors {
                type LITERAL
                access READ
                vpath DEFAULT 
                ppath CURRENT DEFAULT
                prompt {Names of detectors to be included}
                default !
                helpkey *
            }

            parameter detpurge {
                type _LOGICAL
                prompt {Remove dead detectors?}
                vpath DEFAULT
                ppath CURRENT DEFAULT
                default FALSE
                helpkey *
            }

            parameter genvar {
                type _LOGICAL
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }

            parameter limittype {
                type LITERAL
                prompt {Type of limit specified by LIMITSIZE}
                default FILESIZE
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter merge {
                type _LOGICAL
                prompt {Merge input NDFs?}
                vpath DYNAMIC
                ppath CURRENT DYNAMIC
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT
                helpkey *
            }

            parameter nout {
                type _INTEGER
                access WRITE
                vpath DEFAULT
                default 0
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF data structure}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter sizelimit {
                type _INTEGER
                prompt {Size limit for each output NDF}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

        }

        action gsd2acsis {
            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type _CHAR
                access READ
                vpath {PROMPT }
                prompt {Input DAS or AOSC GSD File}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter directory {
                position 2
                type _CHAR
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output Directory}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter obsnum {
                position 3
                type _INTEGER
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Observation Number}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                vpath DEFAULT
                default NORM
                helpkey *
            }
        }

        action sc2test {
            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }
            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT
                helpkey *
            }
        }

        action sc2fts {
            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                prompt {Input data files}
                helpkey *
            }
            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                prompt {Output data file}
                helpkey *
            }
            parameter parslist {
                position 3
                type _CHAR
                vpath {PROMPT }
                prompt {Parameter list: eg. op1.key1=value1, op2.key2=value2, ...}
                helpkey *
            }
            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT
                helpkey *
            }
        }

        action sc2clean {
            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input timeseries}
                helpkey *
            }
            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Cleaned timeseries}
                helpkey *
            }
            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }
            parameter apod {
                type _INTEGER
                vpath {DEFAULT}
                prompt {Number of samples over which to apodize}
                default 0
                helpkey *
            }
            parameter badfrac {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {Fraction of bad samples to flag entire bolo bad}
                default 0.0
                helpkey *
            }
            parameter dcthresh {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {N-sigma threshold for DC step repair}
                default 150
                helpkey *
            }
            parameter dcbox {
                type _INTEGER
                vpath {DEFAULT}
                prompt {Size of box (samples) to measure means for DC step-finding}
                default 0
                helpkey *
            }
            parameter dcbad {
                type _LOGICAL
                vpath {DEFAULT}
                prompt {Flag entire bolo bad if DC step is found}
                ppath GLOBAL CURRENT
                default TRUE
                helpkey *
            }
            parameter dkclean {
                type _LOGICAL
                vpath {DEFAULT }
                prompt {Fit and remove dark squid signals}
                ppath GLOBAL CURRENT
                default FALSE
                helpkey *
            }
            parameter filt_edgehigh {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {Frequency [Hz] of hard high-pass filter}
                default 0
                helpkey *
            }
            parameter filt_edgelow {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {Frequency [Hz] of hard low-pass filter}
                default 0
                helpkey *
            }
            parameter filt_notchhigh {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {Array of upper-frequency edges [Hz] for notch filters}
                default 0
                helpkey *
            }
            parameter filt_notchlow {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {Array of lower-frequency edges [Hz] for notch filters}
                default 0
                helpkey *
            }
            parameter flagstat {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {Threshold slew velocity [arcsec/sec] to flag stationary}
                default 0
                helpkey *
            }
            parameter order {
                type _INTEGER
                vpath {DEFAULT}
                prompt {Remove baseline polynomial of order}
                default -1
                helpkey *
            }
            parameter spikethresh {
                type _DOUBLE
                vpath {DEFAULT}
                prompt {N-sigma threshold for spike-flagger}
                default 0
                helpkey *
            }
            parameter spikeiter {
                type _INTEGER
                vpath {DEFAULT}
                prompt {Number of iterations for spike-finder (0=until converge)}
                default 0
                helpkey *
            }
            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT
                helpkey *
            }
        }

        action gsdshow {
            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type _CHAR
                access READ
                vpath {PROMPT }
                prompt {Input DAS or AOSC GSD File}
                ppath GLOBAL CURRENT
                helpkey *
            }

            parameter descriptions {
                position 2
                type _LOGICAL
                prompt {Show descriptions?}
                ppath DEFAULT CURRENT
                default FALSE
                helpkey *
            }

            parameter showdata {
                position 3
                type _LOGICAL
                prompt {Print out data array?}
                ppath DEFAULT CURRENT
                default FALSE
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                vpath DEFAULT
                default NORM
                helpkey *
            }
        }

        action sc2concat {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                ppath CURRENT
                default {'./\*_con'}
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF data structure}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter maxlen {
                type _DOUBLE       
                access READ
                ppath CURRENT DEFAULT
                prompt {Maximum concatenated length in seconds}
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter padend {
                type _INTEGER
                access READ
                ppath CURRENT DEFAULT
                prompt {Number of samples to pad at start}
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter padstart {
                type _INTEGER
                access READ
                ppath CURRENT DEFAULT
                prompt {Number of samples to pad at end}
                vpath DEFAULT
                default !
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action sc2fft {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association <-GLOBAL.DATA_ARRAY
                prompt {Input NDF data structure}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                ppath GLOBAL CURRENT
                association ->GLOBAL.DATA_ARRAY
                prompt {Output NDF data structure}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter inverse {
                type _LOGICAL
                vpath {DEFAULT }
                prompt {Perform inverse transformation if set}
                ppath GLOBAL CURRENT
                default FALSE
                helpkey *
            }

            parameter polar {
                type _LOGICAL
                vpath {DEFAULT }
                prompt {Use polar instead of cartesian representation of FFT?}
                ppath GLOBAL CURRENT
                default FALSE
                helpkey *
            }

            parameter power {
                type _LOGICAL
                vpath {DEFAULT }
                prompt {Calculate power spectrum (in polar coordinates)?}
                ppath GLOBAL CURRENT
                default FALSE
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action smurfcopy {

            helplib {$SMURF_HELP}

            parameter in {
                position 1
                type NDF
                access READ
                vpath {PROMPT }
                association <-GLOBAL.DATA_ARRAY
                prompt {Input timeseries}
                helpkey *
            }

            parameter out {
                position 2
                type NDF
                access WRITE
                vpath {PROMPT }
                association ->GLOBAL.DATA_ARRAY
                prompt {Output filename}
                helpkey *
            }

            parameter outfiles {
                type LITERAL
                prompt {Text file in which to put the output NDF names}
                default !
                vpath DEFAULT
                ppath CURRENT DEFAULT
                helpkey *
            }

            parameter slice {
                position 3
                type _INTEGER
                access READ
                ppath  DYNAMIC CURRENT
                prompt {Index of time slice to extract (0 for last)}
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

        action sc2threadtest {

            helplib {$SMURF_HELP}

            parameter nthread {
                type _INTEGER
                vpath  {DEFAULT}
                prompt {Number of threads to use}
                default 2
                helpkey *
            }

            parameter tsteps {
                type _INTEGER
                vpath  {DEFAULT}
                prompt {Number of time samples in simulated data chunk}
                default 6000
                helpkey *
            }

            parameter nchunks {
                type _INTEGER
                vpath  {DEFAULT}
                prompt {Number of time chunks}
                default 2
                helpkey *
            }


            parameter nsub {
                type _INTEGER
                vpath  {DEFAULT}
                prompt {Number of subarrays}
                default 4
                helpkey *
            }

            parameter msg_filter {
                type _CHAR
                prompt {Message level}
                default NORM
                vpath DEFAULT	
                helpkey *
            }
        }

    }

    command jcmtstate2cat {
        obey {@PERL@ $SMURF_DIR/jcmtstate2cat}
    }

    command dumpocscfg {
        obey {@PERL@ $SMURF_DIR/dumpocscfg}
    }

    command gettsys {
        obey {@PERL@ $SMURF_DIR/gettsys}
    }

    icl {defhelp @PACKAGE@ $@PACKAGE_UPCASE@_HELP 0}

    display {

        @PACKAGE_UPCASE@ commands are now available -- (Version @PACKAGE_VERSION@)

        Type smurfhelp for help on @PACKAGE_UPCASE@ commands.
        Type "showme sun258" to browse the hypertext documentation.

        NOTE, several applications have had major changes made to their
        parameter lists. See the "Release Notes" section of SUN/XXX for
        details.

    }

}
