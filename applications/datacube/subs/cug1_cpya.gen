      SUBROUTINE CUG1_CPYA<T>( INPUT, OUTPUT, DIM, STATUS )

*+
*  Name:
*     CUG1_CPYA

*  Purpose:
*     Copies a mapped array of type <TYPE> to another mapped array of
*     the same type.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL CUG1_CPYA()

*  Arguments:
*     INPUT(DIM) = _<TYPE> (Given)
*        Input array of mapped axis values
*     OUTPUT(DIM) = _<TYPE> (Given)
*        Output array of mapped axis values
*     STATUS = _INTEGER (Given and Returned)
*        The global status.

*  Description:
*     Generic copy routine used for copying one %VAL mapped array to another
*     %VAL mapped array. Not particularly interesting.

*  Copyright:
*     Copyright (C) 2000 Central Laboratory of the Research Councils

*  Authors:
*     AALLAN: Alasdair Allan (STARLINK, Keele University)

*  History:
*      19-SEP-2000 (AALLAN):
*        Original version.

*  Bugs:
*     {note_any_bugs_here}

*-

*  Type Definitions:
      IMPLICIT NONE                  ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'         

*  Arguments Given:
      INTEGER DIM                    ! The size of the mapped array
      <TYPE> INPUT( DIM )            ! Input array
      <TYPE> OUTPUT( DIM )           ! Output array

*  Arguments Returned:

*  Status:
      INTEGER STATUS                 ! Global status
      
*  External References:        

*  Internal References:
     
*  Local Variables:
      INTEGER I                         ! Loop counters
      
*.

*  Check the inherited global status.
      IF ( STATUS .NE. SAI__OK ) RETURN

*  Do the copy

      DO I = 1, DIM
         OUTPUT( I ) = INPUT( I )
      ENDDO

*  Time at the bar please...
      END







