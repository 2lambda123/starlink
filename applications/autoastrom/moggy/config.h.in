/* Config file for moggy
 * Copyright 2001 Council for the Central Laboratory of the Research Councils.
 * See file LICENCE for conditions.
 * $Id$
 */

#ifndef CONFIG_H_LOADED
#define CONFIG_H_LOADED 1

/* Do we have the <cstd...> include files? */
/* Define as 1 if you DO have the (standard) <cstdio> headers.  If
   not, we use <stdio.h> instead. */
#define HAVE_CSTD_INCLUDE 0

/* Related: define as 1 if you have standard functions in the std
   namespace; that is, if you need `using namespace std' in order to
   get to them.  The Solaris compilers need this, GCC doesn't (and I
   think that's a deficiency in GCC rather than Solaris).  At present,
   we use this flag to decide if we need to dump everything into the
   global namespace; this is not as elegant as I'd like, but it'll do
   for now. */
#define HAVE_STD_NAMESPACE 0

/* The alpha cxx compiler currently (v6.0) needs to be invoked with 
   __USE_STD_IOSTREAM defined, so that it uses a standards-conforming 
   streams library.  See Digital C++ v6.0 manual, section 7.1.2.
   This is defined by default when the compiler is invoked with
   `-std strict_ansi', but that's a little harder to arrange in
   here. */
#undef __USE_STD_IOSTREAM

/* Define as 1 if you have <sstream> (as opposed to older
   <strstream>).  Define as 0 otherwise. */
#define HAVE_SSTREAM 0

/* Define as 1 if we have <map>.  Define as 0 otherwise. */
#define HAVE_MAP 0

/* Define as 1 if we have function setenv() (and if we have, we assume
   we have function unsetenv(), too)... On Tru64, even though setenv
   is present in the library, it appears not to be properly
   declared in stdlib.h (it's bracketed off by an `#ifdef
   AES_SOURCE', which isn't documented anywhere obvious): check for
   this situation, and define DECLARE_SETENV if we're going to have
   to include our own setenv definition. */
#define HAVE_SETENV 0
#define DECLARE_SETENV 0

#endif /* CONFIG_H_LOADED */
