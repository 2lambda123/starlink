# Makefile for program moggy
#
# Copyright 2001 Council for the Central Laboratory of the Research Councils.
# See file LICENCE for conditions.
#
# $Id$

# C++ all-warnings flags:
#  g++ -Wall  (GNU)
#  CC +w2     (Sun Workshop compilers)
#  cxx -w0    (Compaq compilers)
#
# Don't make any provision for the Starlink directories, or the
# ast_link and cnf_link commands, _not_ being there -- we have
# established in the configure script that /star, or something like
# it, is present.  That script adds the appropriate Starlink
# directories to CPPFLAGS and LIBS.
#
DEFS=@DEFS@
CPPFLAGS=@CPPFLAGS@ -I$(MYCATLIB)/include
CXX=@CXX@
CXXFLAGS=@CXXFLAGS@ $(CPPFLAGS) $(DEFS)
#CXXFLAGS=-g -Wall @CXXFLAGS@ $(CPPFLAGS) $(DEFS)
LIBS=-lm @LIBS@ -L$(MYCATLIB)/lib -lskycat `ast_link` `cnf_link`

# How old is libast_wcslib?  Older versions of that library had the
# proj.o module (from wcslib) incorporated with the original names,
# which causes linking problems.
ASTHASOLDPROJ=@ASTHASOLDPROJ@

# CATLIBDIR is the directory that SkyCat is temporarily installed
# it.  This is not the directory we link against -- see the
# $(MYCATLIB)/lib/libskycat.a target below.
CATLIBDIR=@CATLIBDIR@
MYCATLIB=SkyCat

RANLIB=@RANLIB@




# Use suffix rules for stupid makes (hello, Tru64)
.SUFFIXES: .o .C
.c.o:
	$(CC)  $(CPPFLAGS) -c $< -o $@

.C.o:
	$(CXX) $(CXXFLAGS) -c -o $@ $<


#%.o: %.f
#	$(F77) -fno-underscoring -I$$STARLINK/include -c $< -o $@
#
#%.o: %.c
#	$(CC) -I$$STARLINK/include -c $< -o $@
#
#%.o: %.C
#	$(CXX) $(CXXFLAGS) -c -o $@ $<



EXEC=moggy
OBJS=moggy.o CommandParse.o CatalogueHandler.o AstHandler.o util.o SkyCatHoles.o

$(EXEC): $(OBJS) $(MYCATLIB)/lib/libskycat.a
	$(CXX) $(OBJS) $(LIBS) -o $@

# The SkyCat cat library has been installed in $(CATLIBDIR) (the
# makefile or other configuration which calls this should have ensured 
# this); if it isn't there, then this following dependency will cause
# make to object.
#
# Here, we make a private version of it, with some awkward object
# modules removed, and with the include files copied across.  It's
# this version that we compile and link against.
$(MYCATLIB)/lib/libskycat.a: $(CATLIBDIR)/lib/libcat.a
	test -d $(MYCATLIB) || mkdir $(MYCATLIB)
	test -d $(MYCATLIB)/lib || mkdir $(MYCATLIB)/lib
	cp $(CATLIBDIR)/lib/libcat.a $(MYCATLIB)/lib/libskycat.a
	ar -d $(MYCATLIB)/lib/libskycat.a slasubs.o
	if test $(ASTHASOLDPROJ) = yes; then \
		ar -d $(MYCATLIB)/lib/libskycat.a proj.o; \
	fi
	$(RANLIB) $(MYCATLIB)/lib/libskycat.a
	(cd $(CATLIBDIR); tar cf - include) | (cd $(MYCATLIB); tar xf -)


test: $(EXEC)
	cd t; $(MAKE) test

# Distribution
configure: config/configure.in
	autoconf config/configure.in >configure
	chmod 755 configure

TAGS:
	etags --c++ *.C *.h

tidy:
	rm -f *~ *.o core

clean: tidy
	rm -f $(EXEC)
	test ! -d $(MYCATLIB) || rm -Rf $(MYCATLIB)

distclean: clean
	rm -f config.cache config.log config.status config.h Makefile

# Dependencies
#
# moggy.h doesn't really depend on SkyCat/lib/libskycat.a, but the two
# modules which do, moggy.C and CatalogueHandler.C, do depend on
# moggy.h, so this will ensure that the SkyCat includes are built and
# installed in the correct order.
moggy.h: $(MYCATLIB)/lib/libskycat.a

# Because of the #include <cat/...> dependencies in some files, this
# depend target only works after SkyCat/include has been built.
depend:
	echo '# DO NOT DELETE THIS LINE (it is used by make depend)' >depend.tmp
	for c in *.C *.c; do \
		gcc -MM -I/stardev/include -ISkyCat/include $c >>depend.tmp; \
	done
#	for i in *.C; do \
#		echo `echo $$i|sed 's/\.C/.o/'`: $$i `sed -n '/^#include/s/^[^\"]*\"\(.*\)\".*/\1/p' $$i` >>depend.tmp; \
#	done
#	for i in *.h; do \
#		echo "$$i:" `sed -n '/^#include/s/^[^\"]*\"\(.*\)\".*/\1/p' $$i` >>depend.tmp;\
#	done
	sed -e '/^# DO NOT DELETE/,$$d' -e '$$r depend.tmp' Makefile.in >Makefile.tmp
	mv Makefile.tmp Makefile.in
	rm -f depend.tmp


# DO NOT DELETE THIS LINE (it is used by make depend)
AstHandler.o: AstHandler.C AstHandler.h moggy.h verbosity.h \
 stringstream.h util.h
CatalogueHandler.o: CatalogueHandler.C stringstream.h \
 CatalogueHandler.h moggy.h verbosity.h util.h
CommandParse.o: CommandParse.C CommandParse.h config.h moggy.h \
 verbosity.h util.h
moggy.o: moggy.C moggy.h CommandParse.h config.h verbosity.h \
 CatalogueHandler.h AstHandler.h stringstream.h util.h
util.o: util.C util.h
SkyCatHoles.o: SkyCatHoles.c
