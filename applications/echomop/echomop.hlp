0  HELP
 This is the ECHOMOP on-line HELP system.

 Try the topic "ECHOMOP" for  an introduction or a question mark
 for a list of topics.

 A hypertext version of this HELP facility may be available.  To
 use this type HYPER at the main echmenu menu prompt.
1  ECHOMOP

 ECHOMOP provides a set  of tasks and tools to aid the reduction
 of simple and echelle spectra.  The options provided range from
 full-scale automated reduction to  step-by-step  order-by-order
 manually controlled processing.  Facilities for the handling of
 image contamination by cosmic-ray events, and distortion due to
 instrument and detector characteristics are provided. The tasks
 were  originally written for  the reduction of  data taken with
 the University College London Echelle spectrograph (UCLES), but
 the algorithms are sufficiently flexible to permit reduction of
 spectra from a wide variety of sources.

2  New_to_ECHOMOP

 ECHOMOP may be  used in  a variety of ways  depending upon your
 expertise.

 The most convenient method for the first-time user is to  start
 ECHOMOP with a menu interface (command echmenu).  This provides
 a guided  path through  the processes  in a standard reduction.

 echmenu is the menu program which drives all the other programs
 in the  package.  echmenu will always provide a default for the
 next task to be performed, and this will usually be the logical
 one for a 'standard' reduction.  To accept the recommended next
 step, it is only necessary to hit Y/return/.

 A disk-based reduction database is used to pass objects between
 the  various component tasks.  You will be prompted to name the
 file, which will be created in the current directory. This file
 is permanently associated  with a particular set of data frames
 (object, arc, flat etc.) so providing the ability to replay any
 aspect of  the reduction at a  later date.  Reduction databases
 can use a large amount of disk space and you may want to delete
 them as soon as the output spectrum has been obtained.

 To start ECHOMOP using a guided menu type:

    % echmenu/return/

 at the command-line prompt.

 To run any particular ECHOMOP command just type its name at the
 command line prompt.

 For example:

    % ech_locate/return/

 would run the order location task ech_locate.

1  News_v3.3-0

 This NEWS item describes ECHOMOP V3.3-0, in particular, changes
 from ECHOMOP V3.2-0.

 This is an interim release of ECHOMOP with some bug fixes.

 There is a Starlink world-wide web page for echelle data
 reduction, including ECHOMOP:

    http://www.star.ucl.ac.uk/~mjc/echelle/

2 Changes

 o The parameter ARC_TYPE is now ignored by the wavelength-cali-
   bration (Option 10) and wavelength-scale consistency checking
   (Option 20) tasks.  The parameter should be  removed from any
   scripts  which  use these tasks before  the next  release  of
   ECHOMOP, at which point the parameter will be withdrawn.
 o The central order number and central wavelength of an echell-
   ogram can be used to constrain the automatic wavelength cali-
   bration  process.  See the  HELP text for  CENTRAL_ONUM  and
   CENTRAL_WAVE for more details.
 o The output option (Option 14) can now produce DIPSO stacks of
   echelle  data.  For example,  to output  a stack file  called
   'ECHOMOP_STK.sdf' containing the extracted object orders:

      % ech_result result_format=stack result_type=extobj \
        stack=ECHOMOP

   See the on-line HELP for more details.
 o When writing an ASCII file  in Option 14 the name of the file
   can now be changed by setting the parameter ASCII_FILE.
 o The Thorium-Argon arc-line database has been expanded.
 o A database for Thorium-Neon arcs has been added. The relevant
   file is $ARCDIRS/THNE.sdf.
 o An  extra line has been  added to the  Copper-Argon  arc-line
   database.
 o Non-standard PGPLOT calls  have been removed  from the source
   code.   This will lead  to a minor  performance  improvement.
 o In the plotter  (Option 27),  the ASCII-dump option  produces
   files which DIPSO  SP2RD can read.  The output filename is no
   longer fixed.
 o Deferred PGPLOT errors  (which would be reported on exit from
   ECHOMOP) have been removed.
 o The value "none" is now acceptable  to indicate  that no flat
   field (FFIELD parameter)  or no arc  (ARC parameter) is to be
   used.  Previously only the upper-case  "NONE" could  be used.
   Note that only these two  values indicate no available frame;
   a value of "None" or "NoNe" will be assumed to be the name of
   a frame.
 o In Option 1  (Locate orders) the  criterion for  detecting an
   order has  been slightly  changed.   Previously,  a candidate
   order would have to have at least 1% of the  intensity of the
   brightest order  found, minus the median value of the central
   column in the image.  This does not  allow for  automatic de-
   tection of  all orders if  the brightness of  orders  and the
   inter-order  background  level vary significantly  across the
   frame.  The criterion has been changed  to simply: "intensity
   at least 1% of the brightest order".

 o HELP is now available within the plotter task.

2 Documentation_notes

 o The database files used to store information about a specific
   reduction  have  been retitled  "reduction  databases".  Pre-
   viously these were known as "reduction structure files". This
   change is  reflected in  all  documentation  and source  code
   comments.

2 Bug_Fixes

 o When changing between arc-line databases there is no longer a
   prompt to pick between old and new values of TUNE_WCAL_INDEX.
   This was a bug which would cause the program  to crash if the
   user guessed "new" as the response to the prompt.
 o A memory-management problem causing  a crash if the abort "!"
   option was used in Options 3, 6, or 11 had been removed.
 o The parameter  CENTRAL_ONUM  can now be used,  previously the
   value was forced to zero within the program.
 o In Option 4,  the slit setup can now be edited.   Previously,
   each invocation of  Option 4 would  recalculate the settings.
   The settings can now be  edited without this "reset" by sett-
   ing PFL_MODE  to the  value 'E' before  starting the  option.
 o The program now reports an  error when unable to successfully
   access an input file.  The program reprompts  the user.  Pre-
   viously the program would crash when trying to use missing or
   protected datafiles.
 o The "Path syntax" in  the plotter is now correctly displayed.
 o In browse mode in the plotter,  SPLINE traces are now usable.
   Previously  POLY was assumed with unpredictable side-effects.
 o Limits in  plotter browse  mode are now  correctly  enforced,
   avoiding common crashes.
 o All advertised style options in the plotter now work.
 o A bug in Option 3 (Trace clip), which would decrease the num-
   ber of knots for a  SPLINE fit by 2 on  each invocation,  has
   been removed.
 o In Option 14 (Output results)  the OSPECT output  product can
   now be used without causing a crash.
 o The conversion from air to  vacuum wavelengths, which is ena-
   bled by TUNE_AIRTOVAC is applied to the output data file when
   requested.  Previously,  the  correction was  applied  to the
   reduction database wavelengths, not to the output file.
 o A possible divide-by-zero  error in Option 5 (Flat field) has
   been removed.
 o A missing range check in Option 9.2, which might give rise to
   segmentation faults, has been removed.

 Please report bugs to:

   starlink@jiscmail.ac.uk and mjc@star.ucl.ac.uk

1  Old_News

 These NEWS items accompanied previous releases of ECHOMOP.
                        
2  News_on_version_3.2-0

 This  is an interim release of  ECHOMOP with many bug fixes and
 changes.

 Digital  UNIX  users  will  notice  a  significant  performance
 improvement from v3.0.

3  General_notes

 o Several modifications have been made to enhance the speed for
   the program.  Generally a reduction of about 35% in execution
   time can be expected.

3  New_features

 o A new task,  ech_genflat, has been added.   This task outputs
   flat-field balance factors, as generated by ech_ffield, to an
   image.  The  image can then  be inspected using,  e.g., KAPPA
   DISPLAY.  For more  details see the on-line  HELP or SUN/152.
 o The  design  of  the interface in  parameter editors has been
   altered to make them a little easier to use.
 o The parameter TUNE_USE_NXF  has been "enhanced".  Previously,
   this  parameter   set  the  fraction  of  an  order  (in  the
   dispersion direction) to be used when profiling;  setting the
   parameter to a value of 1.0  selected a "special"  mode where
   each order  was separately profiled.   This behaviour remains
   the same;  however,  it is now possible to select individual- 
   order  profiling and set  the fraction  of each  order  to be
   used.   For example,  a value for TUNE_USE_NXF of 1.2 selects
   the central 20% of each order and individual-order profiling.
 o 'QUIT' and 'Q'  have been  added as  aliases  for EXIT in the
   echmenu top-level menu.
 o 'Q' has been added as an alias for 'E' (EXIT) in the ech_plot
   top-level menu.
 o The task  ech_fcheck now checks both  input and  trace frames
   for bad-pixel values in their data arrays. The trace frame is
   now checked for saturated pixels.
 o In the  plotting task  the full option menu is displayed only
   once. The menu can be redisplayed by pressing 'M' as in other
   tasks.
 o In  the  plotting  task  when displaying  reduction data  the
   default  prompt now  automatically sets its self  to point at
   the next order for the last data plotted. For example, a plot
   of 'OBJ[1,1]' -  the first order of the object - will set the
   default value to 'OBJ[1,2]' -  the next order.  This means it
   is much faster to check through all the orders.

3  Documentation

 o ECHMENU option 1.5 has been documented in SUN/152.
 o Some errors in SUN/152 have been fixed, the text clarified in
   a few places, and several missing parameter details added.
 o Some errors in the on-line and hypertext HELP texts have been
   corrected.
 o The  out-of-date   and  uninformative  "Inputs-Outputs"   and
   "Method" entries in the on-line  and hypertext HELP text have
   been removed.

3  Parameter_default_changes

 o The default value of TUNE_MXSMP has been  changed from 200 to
   500.  This reflects  the increase  in size of  CCDs in recent
   years.
 o The advertised  default value of  TUNE_TWTHR (0.9)  was wrong
   and has been corrected to 0.95.
 o The advertised default value of  TUNE_AUTLOC (TRUE) was wrong
   and has been corrected to FALSE.
 o The advertised default value of TUNE_NPOLY (7)  was wrong and
   has been corrected to 4.
 o The default value of TUNE_ARCHIVE has been changed to FALSE.
 o The default  value of MIN_DISPERSION has been changed to 0.01
   which better reflects  the  dispersions used  in many echelle
   instruments.

3  Other_changes

 o ECHOMOP no longer uses the NAG library.
 o The module definition database has been removed.  Modules are
   defined as the program starts up.
 o Only one call to PSX_UNAME is now made per  invocation of the
   monolith.  Previously, several routines called PSX_UNAME.
 o Calls to PGPOINT have been changed to call PGPT.
 o The subroutine calculating median values has been enhanced.
 o There is only one  routine  for mean/median/most-common-value
   calculation.
 o Several table look-up routines have been modified to exit-on- 
   match, rather than searching the full table for an entry.
 o The  trace-clipping  task menu is only displayed once,  which
   speeds up  the process of trace clipping.   The full menu can
   be  displayed using  option "M"  in  the  same style  as  the
   profiling tasks.
 o In the  spatial-profiling task the  display of  "below"-trace
   pixel-distances has been changed to  reflect the syntax used.
   For  example  the dekker edge is  now said to be  "20" pixels
   "below trace" rather than  "-20" pixels below  which suggests
   that it is above the trace.
 o Messages of the form

    "Parameter XXX is set to non-default value: nn"

   have been shortened.
 o Some of the main menu text has been changed.
 o Several (140)  calls to ECH_SET_CONTEXT  which  had no effect
   have been removed from subroutines.  This may lead to a small
   speed-up for some operations.
 o When DISPLAY=TRUE overlaid  trace plots are labelled with the
   relevant  order  number.  The  display scaling  is calculated
   only once per frame, rather than once per order, which speeds
   up this option.
 o The  routine ECH_FIND_CENTRE  has been modified,  speeding up
   centre-of-gravity  mode tracing and echmenu  option 9 (locate
   arc line candidates).
 o The file  ech_dynamix_index_index.f (which  was not used) has
   been removed.
 o The file ech_makefits.f  (which was not used and is no longer
   needed) has been removed.
 o The file  ech_plot_id_lines.f (which was not used)  has  been
   removed.
 o In the  dekker/object-profiling task (echmenu option 4) graph
   titles now include the number of the order displayed.
 o Many FORMAT statements have been changed by  the  addition of
   "1P" scale factors. This makes output numbers easier to read.
 o The files  ech_loop_nvariable.f and  ech_loop_variable.f have
   been  removed due  to the  process of  speeding  up  the main
   ECHOMOP routine and introduction of extra functions.
 o The IDX_  parameters were being typed as _REAL by the program
   whilst they were  (correctly) declared as  _INTEGER in inter-
   face files.  This has been corrected.
 o In the  order-blaze fitter  the plots of  function-verses-fit
   now use the same colour scheme as in the order-trace fitter.
 o The displays and menus in the interactive flat-field modeller
   have all been tidied up.
 o In the  trace-clipping task  the '.' option  now deletes  the
   nearest point to the cursor as  advertised.  Previously  this
   deleted the nearest point in X.  This change also affects the
   blaze fitter and sky modeller.
 o ECH_FATAL_ERROR  and  ECH_CALC_TRACE have  been  modified  to
   speed up the program.

3  Fixes

 o In  the order-fitting/clipping  process it is now possible to
   select an order of fit less than 4.
 o In the  ech_spatial task it  is no longer possible to set the
   value of DEK_BELOW greater than DEK_ABOVE and vice versa.
   Previously this would cause various problems.
 o Internal arrays  in profiling tasks  have been  enlarged  and
   range checks are now performed prior to array usage. This has
   removed some intermittent crashes.
 o Most format  statements using Hollerith  characters have been
   updated.
 o An error in the data  access layer relating to default object
   dimensions has been fixed.
 o Previously,  in plots of order-trace  versus fitted-curve the
   points of  the order trace  were shifted down.  This gave the
   impression that the  fit was offset  by a constant.  This bug
   has  been removed.   This bug also  affected the order  trace
   overlaid on image plots.
 o A limitation in  ECH_MEAN_MEDIAN whereby  only the first 5000
   values of a dataset would be used in median determination has
   been removed.
 o An error  causing a  crash for  USE_MEDIAN=TRUE in the order- 
   location task has been removed. USE_MEDIAN=TRUE now works OK.
 o An error in the call sequence causing unaligned memory access
   and crashing ECH_DECOS2 has been removed.
 o Spurious  "Unknown fitting function"  messages appearing when
   using ECH_DECOS2 have been removed.
 o Centroid-mode tracing now includes a filter for bad values in
   images.  Previously, bad  values would  break the centroiding
   code causing a crash with a floating-point exception.
 o The spatial-profiling task  now includes  various filters for
   bad values which would break it.
 o A  commonly-occurring  divide-by-zero  error  in  the optimal
   extraction algorithm implementation has been removed.
 o The  simple  extraction algorithm  will now handle  bad-pixel
   values as well as,  or instead of,  quality arrays in  object
   images.
 o The  simple  extraction algorithm  will now handle  bad-pixel
   values in arc images.
 o The  profile-weighted  extraction  algorithm will  now handle
   bad-pixel values as well as, or instead of, quality arrays in
   object images.
 o The  profile-weighted  extraction  algorithm will now  handle
   bad-pixel values in arc images.
 o The HELP  facility is now accessible from the echmenu program
   (bug in v3.1-0).
 o The quick-look extraction algorithm will now handle bad-pixel
   values as well as,  or instead of,  quality arrays  in object
   images.
 o The quick-look extraction algorithm will now handle bad-pixel
   values in arc images.
 o After  running the quick-look extraction the  colour of plots
   is now reset to black rather than being left blue.
 o The 2-D simple-extraction algorithm will now handle bad-pixel
   values in arc images.
 o The 2-D simple-extraction algorithm will now handle bad-pixel
   values as well as,  or instead of,  quality arrays  in object
   images.
 o The  arc-line  width  estimator routine  can now  handle  bad
   values in  the image.  The routine has been improved to scale
   data  according  to  the  number  of  good  values  obtained,
   previously no scaling was applied.
 o After  running the  trace consistency  checker the  colour of
   plots is now reset to black rather than being left red.
 o The blaze-fitting option now checks for the case TUNE_NOFLAT=
   TRUE, previously it would simply crash in this case.
 o After  running the order  trace plotting  task the  colour of
   plots is now reset to black rather than being left red.
 o Image  displays autoscale to  suit the data rather than using
   fixed (incorrect) values dependant on the image dimensions.
 o Order  tracing with  DISPLAY=TRUE now works,  previously this
   caused a crash due to a type mismatch in a subroutine call.
 o Previously, order  tracing with fitted traces displayed over-
   laid on the traced image only worked when some other plot had
   been made in the session.   This can now be the first plot in
   a session.
 o A  crash  when  running the  trace consistency  checker  with
   DISPLAY=TRUE has been removed.
 o Evaluation of SPLINE-fitted order traces in the order-tracing
   task was not done correctly, causing  the program to crash in
   some cases.  This bug has been removed.
 o Reporting  of messages  relating  to NULL (!) and  ABORT (!!)
   responses to parameter prompts is no longer deferred.
 o The faulty arc-line database file  $ARCDIRS/THAR.sdf has been
   replaced.
 o Incomplete database entries in $ARCDIRS/THAR.sdf and CUAR.sdf
   have  been filled.   The first 10 and last 11 entries,  which
   should be  partially present,  were completely  omitted.  The
   database builder been corrected to add these partial entries.
 o When using ech_idwave,  in the case of one identified feature
   in an order, the program would  crash when trying to find the
   wavelength range  for the order.   This bug has been removed.
 o Option 'M' in the ech_idwave task,  order-processing menu, no
   longer crashes the program.
 o In  the ech_idwave task,  in the event of a  wavelength poly-
   nomial  being of  such a low order that all points are fitted
   exactly (giving zero RMS error) the program no longer crashes
   on a divide-by-zero.
 o The interactive  mode of ech_idwave,  options '<' and '>' no- 
   longer cause a crash when the display is not zoomed.
 o In the interactive  mode of ech_idwave, option 'I' would work
   only once per option 'P' this has been fixed.
 o In the  interactive mode of  ech_idwave, option 'I', the list
   of nearby features is centred on the selected feature, rather
   than the next feature up in wavelength.
 o Arc line database  files no  longer have to have write access
   enabled.  This means that files in $ARCDIRS do not have to be
   copied to an ECHOMOP user's working directory.
 o Several  missing parameters have  been added to the interface
   files.
 o An  infinite  loop on  detection of  bad columns  or rows  in
   ech_fcheck has been removed.
 o A divide-by-zero error in ech_ffield for local mean or median
   calculation has been removed.
 o In ech_ffield  the calculation  of local medians now uses the
   correct start point in the X-direction. Previously the median
   for  the  start  point  X  -  TUNE_FFLSMP,  rather  than  X - 
   ( TUNE_PFLSMP / 2 ), was being used.
 o In  ech_fitblz,  a floating point overflow  could occur  when
   automatic  fitting became  unstable.  The  overflows  are now
   clipped.
 o The type of the parameter TUNE_SCFRACT was incorrectly set as
   _INTEGER.  It is now _REAL.
 o Several internal changes to the scrunching routines have been
   made to prevent the  scrunched spectra being reflected in the
   wavelength axis, i.e., all the fluxes being negative.
 o Errors in  the sky  modeller which  would lead  to  attempted
   processing of points outside the bounds of an image have been
   removed.
 o The sky modeller now filters out bad-pixel values.
 o The object profile modeller now filters out bad-pixel values.
 o In several tasks, notably  the extractions,  weighting of the
   contribution from  "boundary" pixels  has been corrected to a
   smooth function.  The function previously had two discontinu-
   ities at the top and bottom edges of the extraction channel - 
   introducing a "jump" in some data.
 o Errors in the pixel-weighting scheme implementation and pixel
   selection in the blaze fitter have been removed.
 o ECHMENU Option 1.2 (ech_decos1) is now allowed to be an auto-
   mated  step.  Previously the value of  TUNE_CRTRC was  always
   taken as  FALSE in this  case.  In the same way, Options 11.3
   and  11.4 now work as  elements in a  TUNE_AUTOMATE  request.
 o NDF_SQMF has been used to switch off automatic QUALITY compo-
   nent checking as ECHOMOP does this itself.
 o The  copy-last-plot-to-hardcopy device  option in ech_plotter
   now works.
 o Several  divide-by-zero opportunities in the 2-D sky modeller
   have been removed.
 o The  2-D sky modeller now  handles bad-pixel  values in input
   data.
 o The routine  which identifies  order numbers now works,  this
   helps automatic wavelength calibration proceed faster.

2  News_on_version_3.1-0

 This is an interim release of ECHOMOP with some bug fixes.

 Digital UNIX  users will  notice a performance improvement with 
 this release.

 ECHOMOP  is now  being fully supported  by Starlink.   You  are
 encouraged  to  make  suggestions for  improvements and  report
 bugs.   Bug fixes will be made available in releases throughout
 1996 as they become available.

 Please report bugs to starlink@jiscmail.ac.uk and mjc@star.ucl.ac.uk

 MJC.

1  Demo

 ECHOMOP provides a set of demonstration data frames and can run
 through  the main reduction steps using these frames.  The demo
 is  constructed of a series  of descriptions followed by actual
 examples of the task usage.  To view the demo type:

    % ech_demo -graphics-device-

 where  "-graphics-device-" is  any legal  graphics display name
 (e.g., "xw" for X-windows).

 The text printed during the demo is stored in the file

    $ECHOMOP_DEMO/ECH_DEMO.TXT

 if you would prefer to read from a printed copy.

1  ECHMENU_Options

2  Using_ECHMENU

 When using the ECHMENU  task a  number of tasks offer  optional
 subtasks.  These are invoked by using the syntax

    n.m

 where n is the option number and m is the suboption.  Selecting
 just an option number  causes all the  suboptions  to be run in
 sequence automatically.

 Help on the  current default option may be obtained by typing 0
 or HELP.

 To edit or review  the parameters  used by an  option/suboption
 the number should be prefixed by a minus sign.  For example,

    -1.3

 would invoke parameter edit/view for  suboption 3 of  option 1.

 When processing many similar frames it may be useful to `clone'
 results from previous reduction databases.  In order to do this
 the following syntax is used:

    n<reduction_database

 e.g.,

    5<reduction7

 would  copy the  flat-fielding results  from reduction database
 `reduction7' into the current database,  instead of calculating
 them again.  Cloning is available  for all  processing options.

2  ECH_LOCATE

 This will  usually be the first  option selected and will cause
 the following operations to be performed:

    1.1  Check frame dimensions, and possibly bad row/columns.

    1.2  Optionally check the 'trace' frame for cosmic rays.

    1.3  Determine approximate slope of orders across the frame.

    1.4  Count the order and record their positions in y at the
         centre (x=nx/2) of the frame.

 In many cases  the location of the orders (at the frame centre)
 can  be  completed automatically.  Cosmic  ray  cleaning of the
 trace frame can be enabled using TUNE_CRTRC=YES, and bad row or
 column checking by using TUNE_FCHECK=YES.

 The orders located are plotted on the graphics device (selected
 by the parameter SOFT),  and may be  edited  using the graphics
 cursor.  If completely automatic operation is required then the
 parameter TUNE_AUTLOC=YES should be specified.

3  Description

 This routine locates the  centres of orders in  an echellogram.
 The  central  TUNE_XBOX columns  are then  sampled using a  box
 scaled  according  to  the  expected  order  size.  A  triangle
 function  of  appropriate dimension is  then convolved with the
 array  and the resulting array is  smoothed.   A search is then
 made for  the local  peak values representing  the  approximate
 order centres.

 The middle three columns of each order are examined and assumed
 to be local peak intensities,  the program then steps out above
 and below each order until it reaches either the next order, or
 a pixel  whose intensity falls  below the  threshold intensity.
 The  threshold is a fraction of the peak,  set by the parameter
 TUNE_TWTHR.

2  ECH_SPATIAL

 This  option must  be used before  extraction of the orders can
 take place.

 It consists of two steps:

    4.1  Analyse the Arc/Flat-field frame to determine the
         positions of the edges of the dekker.


    4.2  Analyse the Object frame to determine the position
         of the object within the slit, and its extent above
         and below the traced order.


 In each case, a plot is produced on the graphics device (chosen
 by the SOFT parameter) showing the status of pixels in relation
 to their position  relative to the path of the order across the
 frame.  The status of the pixels as set by this option, decides
 what part they play when the extraction takes place, i.e., is a
 pixel sky, object,  outside the slit,  or to be  ignored by the
 extraction routine?

 If  PFL_INTERACT=YES is set then these quantities can be inter-
 actively edited on a profile plot.

2  ECH_LINLOC

 This option locates arc-line features for later identification.

 It consists of two steps:

    9.1  Determine the average arc-line FWHM.

    9.2  Locate all possible arc lines.

 The FWHM is evaluated by  co-adding all possible  line features
 in the arc frame, and then averaging the resulting profile, and
 calculating its FWHM.  The value is used to scale the Gaussians
 fitted to each arc line in order to obtain  an estimate  of the
 line-centre position in X.

 A possible arc line is  signified by a region of an order where
 5 consecutive pixels (P1-5) obey the following relation:

    P1 less than P2 less than P3 greater than P4 greater than P5

 and are amenable to a Gaussian fit with the FWHM calculated.

 This ensures that  even very faint features are put forward for
 possible identification  (useful when there are no bright lines
 in an entire order).

3  Description

 This  routine locates  (to the  nearest X-pixel)  the reference
 lines to be used for wavelength calibration purposes. Generally
 the reference  spectrum will  be an  arc-lamp spectrum,  but in
 principle this routine could more generally be used with a sky-
 line-rich sky spectrum, or  even an object with strong emission
 lines (subject to provision of an applicable line list).

 In the normal (arc lamp) case, this routine will be called once
 for each data frame.  Usually there will be two arc lamp frames
 (bracketing the object exposure).

3  Hints

 This task will  normally report a lot of line candidates.  This
 is because even very faint  features are regarded  as candidate
 lines.  The  automatic  line identification  routine works best
 when it has access to a list of many features and so you should
 not adjust ECH_LINLOC  to reduce the number of candidates.  The
 auto-identifier starts by using only the  brightest dozen lines
 so the result  will not be biased  by the faint features unless
 they are essential to the identification.

2  ECH_FITBLZ

 This option consists of two steps as follows:

    11.1  Model blaze function using a polynomial

    11.2  Apply blaze function to extracted spectrum

 The polynomial fit may be controlled using a graphics plot  and
 cursor if required.  The polynomial is scaled so as to conserve
 the median intensity of the spectrum.

 Once a blaze  polynomial has been  applied to an order spectrum
 the  polynomial is automatically reset  to unity.  This  is  to
 ensure that it cannot be re-applied to the same order in error.

2  ECH_SCRUNCH

 This option is used to scrunch the extracted order spectra (and
 arc order spectra) into a  (usually)  linear wavelength  scale.
 The scrunching is performed using the same method as the FIGARO
 task ISCRUN.

    12.1  Calculate the wavelength scale

    12.2  Scrunch the extracted object orders

    12.3  Scrunch the extracted arc orders

2  ECH_2DEXT

 This option is used to  perform a full 2-D distortion-corrected
 extraction and  is provided for cases  where the  distortion of
 the frame is significant.

 The option consists of four steps as follows:

    13.1  Calculate wavelength scale.

    13.2  Fit 2D polynomials to the distortion.

    13.3  Re-bin the order into a corrected 2-D form.

    13.4  Extract from the re-binned form.

 Distortion correction is done  on a per-order basis, each order
 having its own distortions mapped independently. The distortion
 is modelled by using a tie-point data set composed of the posi-
 tions and wavelength of all  identified arc lines in the order.

 Thus,  a wavelength calibration is  a pre-requisite to the dis-
 tortion corrected extraction  operation.  A 2-D Chebyshev poly-
 nomial is then fitted to the wavelength deviations of  each arc
 line pixel,  relative to  the  wavelength at the trace-arc line
 intersection.  The  polynomial is used to  generate delta-wave-
 length values at pairs of (X,Y-offset) coordinates:

    delta-wavelength = 2dPoly( X-pixel, Y-offset from trace )

 for all X- and Y-offsets within the dekker.

 This map of wavelength delta values is then used to drive a 2-D
 scrunch of the order into a form where each column  corresponds
 to constant wavelength increment.

 The final step is to extract the data from this re-binned form.
 The extraction algorithm used is identical to the 1-D case from
 this point on (See 1-D extraction option for more information).

2  ECHMENU_All_Orders

 Selects automatic  looping through all available orders for all
 tasks which are performed on  an order-by-order basis.  This is
 the default method of operation.

2  ECHMENU_Exit

 This option closes down the environment and database, and exits
 the echmenu task.

2  ECHMENU_Full_Menu

 This  option selects  the display of  the full  menu of options
 available  in the echmenu  top-level menu.  By default only the
 major options, and the current most-likely selections,  will be
 shown on the menu.

2  ECHMENU_Help

 Provides entry into this HELP library for browsing.  Upon entry
 the first topic displayed will depend upon the context and will
 usually be  appropriate to the next default option at the time.

 To leave HELP, type a CTRL-Z, or hit RETURN, until  the echmenu
 main menu re-appears.

2  ECHMENU_Per_Order

 Allows the selection  of processing of a  single order, for all
 tasks which operate on an order-by-order basis. For example, to
 re-fit the order  trace  for order 3,  leaving all other orders 
 as-is, first  use this option  to change the  selected order to 
 number 3, and then invoke the ech_fitord option.

 Note that any options which operate on all orders at once (e.g.
 trace consistency  checking) will still  operate correctly when
 a single order is selected.

2 ECHMENU_System

 This  option allows the  execution of one  or more system-level
 commands without leaving and re-starting the echmenu task.

 The command is  prompted for with 'System - '.  A valid command
 should be  entered.  If more than one  command is required, the
 csh command should be given to initiate an interactive process.
 This process must be terminated by a CTRL-D, or an exit command
 in order to return to the echmenu shell task.

 System commands can be entered directly at the Option prompt by
 preceding them with the character $.  Thus

    $ls

 would  execute the single system command ls, and then return to
 the  main menu.

2  ECH_COUNT

 Function: To count the orders present in a data frame.

 This routine counts the number of orders in an echellogram. The
 method used is to  first collapse or median filter  the central
 20 columns of the input frame into a 1-D array,  and then apply
 a triangle filter to this array.  The autocorrelation  function
 is then calculated and the peak (corresponding to average order
 separation) is located.  The central columns are then resampled
 using a  box scaled  according to  the expected  order size.  A
 triangle  function of appropriate dimension  is then  convolved
 with the array and the resulting array is smoothed. A search is
 then  made for local peak  values representing  the approximate
 order centres.

3  Hints

 It is  fairly important that  the  initial count  of the orders
 yields the  correct result as it is used to fix the size of the
 sampling box  when doing  the order location.  Problems  may be
 caused by bad pixels  (See TUNE_FCHECK)  or by cosmic rays (See
 ECH_DECOSMIC_1, although tracing should usually be done using a
 flat-field frame).

 In the event  that there are still problems,  it is possible to
 manually specify the  number of orders present using the FIGARO
 command SETOBJ:

    % SETOBJ object=database.MORE.ECHELLE.NO_OF_ORDERS value=n

 where "database" is the  name of the reduction database and "n"
 is the number of orders.

2  ECH_DECIMG

 Function: Image cosmic ray pixels.

 This option uses the quality  array to decide which pixels have
 been flagged as contaminated by cosmic ray hits.  It then takes
 the original object frame and makes a copy in which all the hit
 pixels are replaced by the value zero. This frame might then be
 "blinked" with the original to assess the success of the cosmic
 ray location.

2  ECH_DECOS1

 Function: Locate and flag cosmic-ray contaminated pixels.

 This routine  uses two orthogonal  median filters  (the size of
 the filters are controlled using the parameters TUNE_CRXBOX and
 TUNE_CRYBOX)  to calculate smoothed copies of the image.  These
 are  then divided  into the original and the resulting array is
 histogrammed.  The histogram is then presented for selection of
 the point  above which  to clip points.  This method works well
 when there are  lots of cosmic-ray  events as the clip point is
 easy to  see.  The ech_decos2 option/task  provides a more CPU- 
 intensive method  which may work  better when  there  are fewer
 cosmic-ray events.

3  Hints

2  ECH_DECOS2

 Function: Locate and flag cosmic-ray contaminated pixels.

 This task  finds spatial order profiles  and then compares each
 pixel  with its predicted  intensity.  Ratios  of observed over 
 predicted intensities  are calculated (per order)  and outliers 
 are  clipped.  This  algorithm is  repeated until a statistical 
 test  (K-S)  determines that all  the outlier  pixels have been 
 clipped.  This is a very CPU-intensive  method which works best 
 when the object spatial  profile is well determined and broader 
 than a few pixels.


3  Hints

 The algorithm used relies on the input frame being in the
 following state (the standard for all ECHOMOP processes).

  -  No pre-processing has been performed which
     impacts on pixel intensities.
  -  The Bias has been subtracted.
  -  The readout-noise is known.
  -  The ADU-to-electron conversion ratio is known.

 If the above conditions can not be satisfied then the algorithm
 will probably be unable  to reliably detect the faintest cosmic
 ray pixels  and the  acceptance of  final fit  probability will
 have  to be set very low.  However, the  majority of cosmic ray
 pixels will still be detected and flagged correctly.

 If  you have many  `identical' object frames  then these may be
 processed at one time to provide a better cosmic-ray rejection.
 The script

    $ECHOMOP_SOURCE/decos_many

 provides this  facility and  is the  preferred method when many
 frames are available.

 The procedure  calculates  the  median image and rejects pixels
 which deviate by more than n sigma from  the median value (note
 that this means that all  the frames must  be of equal exposure
 time).  Bad pixels are flagged by placing values in the quality
 array of the frame processed.

2  ECH_DEKKER

 Function: This routine determines the dekker extent  (using arc
           or flat-field).

 This routine will  automatically determine  dekker limits,  for
 good data these values  will be useable.  If the limits are not
 useable, or if a particular dekker  configuration  is required,
 options are provided to edit the allocation of dekker limits.

 Dekker limits may be determined on an  order-by-order basis, or
 average across all orders. To select individual order profiles,
 set  TUNE_USE_NXF to a value between 1.0 and 2.0.  See the HELP
 text for this parameter for more details.

 Options are selected from a menu by striking single characters,
 the carriage return is not required.  The following options are
 available:

    E(Exit), leaves the profiling routine.

    L(Lower dekker),  sets the lower dekker-limit to the current
             X-position of the graphics cursor.

    U(Upper dekker),  sets the upper dekker-limit to the current
             X-position of the graphics cursor.

    R(Replot mode toggle), toggles the way in which re-plots are
             performed once pixel-statuses have been edited. For
             some graphics devices it is necessary to replot the
             entire graph,  as graphics can not be switched back
             on once  they have been  erased.  Other devices may
             support changing a  display-pixel state without re-
             plotting the whole screen. In this case, it is much
             quicker to replot only the part  of the graph which
             has actually changed.  Typing R toggles between the
             two modes of operation.

    +(Plus key), changes the  selected order.  The default is to
             edit all  orders at once, thus all orders will have
             the same sky- and object-pixel  allocations (in the
             spatial direction).  In some cases it may be better
             to specify sky- and  object-pixels on  an per-order
             basis.

             Typing plus from the all-order situation will cause
             the first order only to be selected.  In this mode,
             the plus key  moves to the next  order, except when
             the highest numbered order is current; in that case
             processing reverts to all-order editing.

    -(Minus key),  changes the selected order.  As above, except
             the current order number selected is decreased.  If
             the minus  key is pressed  when the  first order is
             selected processing reverts to all-order edit mode.

2  ECH_EXTRCT

 Function: Extract spectrum.

3  Hints

 ECHOMOP provides four extraction methods:

    - ECH_QEXTR                  quick-look extraction.
    - ECH_EXTRCT EXTRACT_MODE=S  simple summed extraction.
    - ECH_EXTRCT EXTRACT_MODE=P  profile-weighted extraction.
    - ECH_EXTRCT EXTRACT_MODE=O  optimal extraction.

2  ECH_FCHECK

 Function: Checks a dataframe for bad rows or columns of pixels.

3  Hints

 Frame checking as done here will generally  be most useful when
 the order tracing is being disturbed by bad row/columns of high
 intensity pixels.  The tracing routines  will ignore any pixels
 flagged by this routine and  so have more chance of determining
 the trace.

2  ECH_FFIELD

 Function: Model the flat-field  derived per-pixel photometric
           corrections.

 -- Adapted from the PAMELA routine MAKEBAL.

 Creates a balance factor frame from a flat-field frame. This is
 done by fitting polynomials to the 1-D profiles of the frame in
 both X- and Y-directions and then  dividing these  by the frame
 itself.  Negative- or zero-valued pixels, and those outside the
 region specified are set to unity.  The result, when multiplied
 into a data frame,  corrects for short-scale sensitivity varia-
 tions.  Large-scale  variations can be modelled  using either a
 flux-calibration frame,  or if unavailable, the ech_fitblz task
 will model the large-scale variations.

 Errors for the  balance-factor frame are calculated.  If a pre-
 calculated  balance-factor  frame is  to be used,  then set the
 parameter TUNE_PREBAL=YES.


3  Hints

 A special mode of operation can  be selected by setting the pa-
 rameter TUNE_FFNXPLY.  If the parameter  is set to zero then no
 modelling in the X-direction will be performed. If is set to 1,
 then no polynomials are used  (would be constant),  but the ba-
 lance factors are calculated  using the local  mean value based
 on a 5-pixel sample.  This will normally be  used when the flat
 field at the  dekker limits cannot be  modelled because its in-
 tensity changes too rapidly on a scale of 1 pixel due to under-
 sampling of the profile.

 In the situation where an independently produced balance-factor
 frame is available, this may used as the flat-field frame.  The
 parameter TUNE_PREBAL should then be set to YES.  In this case,
 there is no modelling and the balance factors are simply copied
 from the supplied frame.  This should be used for special cases
 where the polynomial fits do not generate suitable models.

2  ECH_FIT2D

 Function: Model 2-D distortion using an arc frame.

 This task  fits a 2-D polynomial surface  to distortion present
 in an echelle order.  The order  trace is used as an origin and
 axis, the X-distance along it, and Y-offset below or above, are
 the coordinates of the fitted points.   The fitted  quantity is
 the delta-wavelength of an identified arc line.  The identified
 line centres are located at all offsets from the trace.   These
 centres  are assigned  the identified wavelength  for the line,
 and then their offset  (in wavelength) relative  to that line's
 position on  the axis calculated.   This provides the following
 dataset for input in the surface fit:

   X - coord of a line centre
   Y - Offset from trace of the line centre
   Difference in wavelength from 1-D fit prediction for coord X.

 Thus, if no 2-D correction were necessary,  all the differences
 would be zero.  Formulating the fit  in this way allows maximum
 significance of the quantity of interest.

 Once a  fit has been obtained,  deviations from the  fit of all
 sample points  (line-centres) are calculated.   Theses are then
 clipped, interactively or  automatically, until the fit becomes
 acceptable.

 It can also  display a plot showing an  exaggerated view of the
 modelled arc  lines.  This make is  easy to see if there is any
 systematic 2-D distortion present.

3  Hints

 The calculation of the  2-D polynomials and the location of the
 data points upon which they are  based are CPU  intensive tasks
 that should  not be performed unless it is  really needed.  The
 best way of deciding whether or not they are needed is a visual
 inspection of  the arc frame.  If you are unable to detect sys-
 tematic  distortion by eye then  there is little chance that it
 will impact severely upon the reduced spectrum.  If reassurance
 is required then the top or bottom order in the frame should be
 2-D  fitted and the View (V) option selected  from the clipping
 menu.  This shows a highly  exaggerated view of the fit and any
 systematic distortion will be immediately noticeable.

2  ECH_FITORD

 Function: Fits a polynomial through a set of trace centre coordinates.

 This routine attempts to fit a polynomial to the trace of an order.
 A variety of interactive/automatic clipping options are available
 to help obtain a 'good' fit.

3  Hints

 This routine should be used manually on single orders when they are
 clearly not correctly fitted.  This will usually be seen by viewing
 the paths of the fitted order traces using ech_trplt.  In many cases
 it will be possible to get a good trace fit by clipping a set of
 obviously bad samples, and re-fitting (perhaps with a lower degree
 of polynomial).

 The other main option for coping with such problems is to rely on
 the trace consistency checking routine.  This will produce a good
 set of consistent trace fits in most cases.

 If a particular order is beyond recovery and you do not wish to
 extract it at all, then it may be disabled by clipping away all of
 its trace samples with this routine.

2  ECH_FWHM

 Function: Estimates the full-width-half-max of ARC lines.

 This routine cross correlates all local peaks in all orders to
 create an estimate of the profile of the reference lines.  This
 profile is then fitted with a simple Gaussian, and the
 Full-Width-Half-Maximum (FWHM) calculated.  The FWHM is used by the
 reference-line location and fitting routines.  The average profile
 is plotted on the graphics device.

3  Hints

 When many similar frames are being processed it may be wasteful to
 estimate the FWHM independently for each arc frame.  In this case
 it may be set manually using FIGARO SETOBJ

    SETOBJ object=/rdn-fil/MORE.ECHELLE.WAVE_FIT_1D.LINE_WIDTH value=/nn.n/

 at the system command prompt, where /nn.n/ is expressed in pixels
 and is twice the required FWHM.

2  ECH_GENFLAT

 Function: output flat-field balance factors to an image.

 Within ECHOMOP there are only limited facilities  for inspecting  the
 flat-field balance  factors.  ECH_GENFLAT outputs the balance factors
 produced by ECH_FFIELD to an image frame.  This  image frame can then
 be inspected using, for example, KAPPA DISPLAY.

 The image produced by ECH_GENFLAT corresponds to that produced by the
 IRAF command apflatten.  Ideally, the frame should be flat at a value
 of one in the inter-order regions and display only a smoothly-varying
 function in the orders themselves.

2  ECH_IDWAVE

 Function: Identify arc line wavelengths.

 This routine performs wavelength calibration using a reference
 feature list, usually provided by an arc-lamp exposure.  The routine
 expects the candidate features to be identified and used as
 'knowns' for the calibration (as position/intensity pairs).  It then
 attempts to match using a reference database; and finally generates
 polynomials to fit the observed positions of features.

 The routine allows selection of the major optional operations
 during wavelength calibration.  Options are presented in a menu
 form and selected by typing a one- or two-character string, followed
 by carriage return.  The following options are supported:

 AI (automatic identification), initiates a search and match of the
 feature database.  Any preset limitations on the wavelength and
 dispersion range will be taken into account.  When a solution is
 found, a report of probable status is made and the options to
 investigate the solution further (I), or search
 for further solutions by re-selecting (AI) are available.

 AF (automatic polynomial fitting), performs a cycle of fitting
 polynomials to identified lines, then clipping away any badly-deviant
 lines, and re-fitting, etc.  Fitting ceases when a stable set of
 identified features remains.

 E (exit), leaves the line-identification menu and updates the
 reduction database copy of the wavelength polynomial to reflect the
 latest calculated fit.

 F (fit), does a single-shot polynomial fit to the currently
 identified lines.  A report of deviations is generated but no
 automatic clipping of deviant lines is performed.

 H (help), provides interactive browsing of the relevant sections
 of the help library for line identification.

 I (interactive identification), enters the interactive line
 specification/examination section.  This section provides features
 for addition/deletion/re-fitting/listing etc of identified lines.


 IM (import ECHARC data), is used to provide an interface to the
 ECHARC arc line identification program.  In general the XP option
 would first be used to export data for ECHARC processing.  ECHARC
 would then be run, and finally the data IMported back into this
 package.

 O (order selection), is used to change the currently selected order
 when operating manually.  The order number to be selected is prompted
 for.

 P (polynomial degree), is used to alter the degree of polynomial
 to be used for the wavelength fitting.  This may vary up to the
 maximum specified by the parameter TUNE_MAXPOLY.

 XP (export data for ECHARC), is used to provide an interface to the
 ECHARC arc line identification program.  In general the XP option
 would first be used to export data for ECHARC processing.  ECHARC
 would then be run, and finally the data IMported back into this
 package.

3  Hints

 It will normally be possible to do a completely automatic arc line
 calibration by setting AUTO_ID=YES.  Resulting identifications can
 be inspected interactively afterwards.  For an automatic run much
 CPU time can be saved by providing good estimates for the range of
 allowable wavelength and dispersion parameters.  However, these
 values should generally have a reasonable margin of error built in
 (20% is a sensible amount).

2  ECH_MDLBCK

 Function: Model scattered light background.

 In some cases you will want to subtract the contribution of
 scattered light from the object instead of using the sky pixels
 (which implicitly also contain scattered light information).

 The task ech_mdlbck performs this scattered light background
 fitting and places the resulting fitted values in the `sky fit'
 arrays used by the extraction routines.  The background fitter uses
 a similar set of parameters to the the normal sky modeller but
 applies its fits to the sets of inter-order pixels at each X-position
 in the frame.  Note that this involves a lot of I/O and can be quite
 a slow operation for large frames.

 The degree of function to fit and its associated parameters are
 specified using the same parameters as for `sky' fitting.

2  ECH_MULMRG

 Function: Merge multiple spectra.

 This utility option is provided to assist in co-adding spectra from
 many frames. This option assumes that the first frame used has been
 scrunched with the required wavelength scale.

 It then reads a list of additional reduction database names from an
 ASCII file called NAMES.LIS. The extracted spectra from each of the
 reduction  databases are then scrunched to  the same  scale and co-
 added into the scrunched spectra in the first reduction database.

 The type of weighting  used during addition is controlled using the
 parameter TUNE_MRGWGHT.

2  ECH_OBJECT

 Function: Determine position of object pixels.


2  ECH_PLOT

 Function: Interactive plotting of objects from the reduction database.


This task allows you to inspect the extracted spectrum, sky, flat-field
and so on.  There are many options for configuring the plots.

3  Options

 These are the options available in the plotter.

4  Browse

 Used in conjunction with an image display.   The object or arc data
 frame can be specified after the B  (e.g.: B MYOBJ),  otherwise you
 will be prompted for the filename.

 ECHOMOP will display the image and then put a cursor on the display,
 you  can then position  the cursor and type a key  indicating which
 type of data you wish to plot.

 Options include:

   o O - for object order
   o A - for arc order
   o S - for scrunched object order
   o F - for flat-field model balance factors
   o S - for sky model

 All arrays are plotted using the cursor position to determine which
 order,  subsample etc.  is  required.  By default the  full  X-axis
 dimension is used,  unless the N command is used  to explicitly set
 the number of samples to plot.

 For example,  setting N to 20 and imaging the arc frame would allow
 the profile of an arc line to be plotted  simply by positioning the
 cursor on the line on the image and hitting A, plotting a 20-sample
 section of the extracted arc from the requisite order.

4 Dir_fulldir

 Lists a directory of reduction database objects.  These are not all
 arrays  objects and therefore  not all plottable.   The most common
 objects are listed by D(ir) and are all arrays.

 The names are  such that  it is easy to recognise which contain the
 information required.  For example,  FFLT contains the fitted flat-
 field balance factors for each order and trace offset.

 Choosing an object name without any dimensions  will plot the first
 N elements starting from the beginning of the array, i.e.:

    ARRAY[1,1,1....] to ARRAY[N,1,1....]

4 Exit

 Returns to the main ECHMENU menu or exits from the ECH_PLOT task.

4 Graph_grey

 Toggles the plotting mode.   Grayscale mode is  useful for plotting
 swathes of 2-D and 3-D objects.  For example,

    in Graphics: mode FSKY[1,1,1]
            plots the first spatial increment
            of the sky model for order 1.

    in Grayscale: mode FSKY[1,1,1]
            images the entire sky model for order 1.

4 Help

 Accesses this HELP Facility.

4 Interactive

 Sets the cursor  display such that  the cursor may be moved  around
 the next graph to be plotted and the exact data  values plotted can
 be examined (by pressing the space character).

4 N_Samples

 Sets the number of data samples plotted from the arrays.

 Unless specified in the object name, plotting always commences from
 the beginning of  the array and the  N is set to the maximum number
 of elements in the array.  Setting a smaller value effectively lets
 you to zoom in on a small subsection of an array.

4 Limits

 Allows the X- and Y-limits of the plot to be set.

 The limits are normally  calculated automatically according  to the
 data in the array.  To resume auto scaling just set all the X and Y
 limits back to 0.

4 Rebin_factor

 Sets the degree of binning to be performed on the data before
 plotting.

 Remains active until reset to 1 (indicates no binning).   Specify a
 positive factor for summed bins, or a negative factor for smoothing.

4 Style

 Allows the specification of various style parameters for the plots.

 The line styles and colours may be specified, as may the plot style.
 The following keywords are recognised and may be appended to the S
 to save time.  For example,

    S RED - sets the plot colour to red.

 Keywords:

    o Graph types:  BINS, LINES, POINTS, +, *, #, X
    o Plot colours: BLACK, RED, GREEN, BLUE, CYAN, MAGENTA,
                    YELLOW, ORANGE
    o Line styles:  FULL, DASH, DOTDASH, DOT, DASHDDD
    o Fonts:        MODERN, ROMAN, ITALIC, SCRIPT

4 User_windows

 Toggles user-windowing.

 When this is activated each subsequent plot will prompt the user to
 select  two limits  on the  display surface.   A box based on these
 limits will then be used for the plot.

 This allows complete freedom in producing a set of plots. Plots may
 be  partially overlaid,  stacked etc.   Once  you have produced the
 display  required the easiest way to get a hardcopy of it is to use
 the built-in facilities of your workstation/X-terminal to grab from
 the screen (this normally results in a Postscript file).

4 Windowing

 Permits the division of  the plotting surface into panes into which
 subsequent graphs are plotted.

 Two factors are requested, the subdivision factor in the horizontal,
 and in the  vertical directions.  For example, 3 and 2 would divide
 the surface into two rows of three graphs.  Setting both factors to
 1 restores normal single-graph behaviour.

4 Overplot(+)

 May be used either on its own or be used as a prefix to any object
 name.

 Causes the next graph to be plotted over the previous one without
 re-drawing the axes etc.

4 Object_naming

 A single object name indicates that the object array is to be
 plotted along the Y-axis using a default linear scale as the X-axis.

 Two object names separated by a comma indicates that the two arrays
 are to be plotted against each other.

 For example:

    o OBJ - plots the first-order extracted spectrum
    o OBJ,FWAV - plots the first-order extracted spectrum versus
                 fitted wavelengths.

2  ECH_PROFILE

 Function: Calculate a model for extraction profile.

 The default is to create an average profile over all orders,
 but per-order (TUNE_USE_NXF=1), and polynomial modelling are
 also available for special cases (TUNE_OBJPOLY>0).

3  Hints

 Most data will extract well using a single profile determined using
 the average over all orders.  If per-order profiles are required
 then set TUNE_USE_NXF=1.

 Profiles are normally determined by calculating the average
 behaviour at each point in the spatial direction (subsampled, to
 change the subsampling set TUNE_PFLSSAMP to the number of
 subsamples in the entire spatial profile, i.e., within the dekker
 limits).

 Profiles may optionally be determined by fitting polynomial/spline
 functions at each subsampled spatial position.  To select this (CPU
 intensive) method use the parameter TUNE_OBJPOLY to specify the
 degree of the fitting function to be used).

2  ECH_RESULT

 Outputs reduction data to files.

 ECHOMOP provides a set of methods of  inspecting results in the form
 of graphs, ASCII listings of intensities, and Starlink-standard data
 files which are ideal for transferring the data to other software.

 This  option can be used to  output single orders, 2-D arrays of all
 orders, or scrunched and merged spectra. Data from the object or arc
 spectra  can be output.  The type of data to be output is controlled
 by the RESULT_TYPE parameter. To output a single order use Option 24
 (ECH_SINGLE);  use  Option 25 (ECH_ALL) to switch back  to all-order
 processing.

 The output format is controlled by the RESULT_FORMAT parameter.  The
 choices are: NDF, for Starlink-standard data files; STACK, for DIPSO
 stack format; ASCII, for a text file listing of the data.

3  RESULT_FORMAT=_CHAR

 Selects the format of the output file.

 Options are:

   o NDF   - Output to the NDF specified by parameter ECH_RDCTN
   o ASCII - Output to the specified NDF and to the file specified
             by parameter ASCII_FILE
   o STACK - Output to the DIPSO stack specified by parameter STACK

3  RESULT_TYPE=_CHAR

 Selects the type of data to be saved.

 The following types are recognised:

  - EXTOBJ, the unscrunched extracted object orders.
  - EXTARC, the unscrunched extracted arc orders.
  - SCROBJ, the scrunched extracted object orders.
  - SCRARC, the scrunched extracted arc orders.
  - OSPECT, the merged object spectrum.

 The default is EXTOBJ.

3  ASCII_FILE=_CHAR

 The name of the ASCII data file to be produced.

 The default is echomop_output.txt.

3  ECH_RDUCD=_CHAR

 The name of the file to save data to.

3  STACK=_CHAR

 The name of the DIPSO stack to be produced.

 The '_STK.sdf' part of the filename should not be given.

 The default is ECHOMOP.

3  TUNE_AAACODE=_INTEGER

 Used only when  the program is  making use  of the  Astronomy &
 Astrophysics  Abstracts system  of information  categorisation.

 This scheme  consists of a  set of numbers  which correspond to
 topics  in Astronomy.  TUNE_AAACODE is  used to  supply an AAA-
 standard information category for the data being reduced.  This
 parameter is only used in conjunction with the archiving facil-
 ity, when TUNE_ARCHIVE=YES.

 INITIAL SUGGESTED VALUE: 1.

3  TUNE_AIRTOVAC=_LOGICAL

 If this parameter is set,  the vacuum wavelengths are converted
 using the procedure:

    wavm = 1.0 / ( old_wavelength * 1.0E-4 ) ** 2
    sum = 64.328 + 29498.1 / ( 146.0 - wavm ) +
                   255.4 / ( 41.0 - wavm )
    new_wavelength = old_wavelength * ( 1.0 + 1.0E-4 * sum )

 This  formula is  taken from  Allen's Astrophysical  Quantities
 (1973).

 Only the wavelength scales in the output file are effected; the 
 reduction database wavelength scales remain unchanged.

 INITIAL SUGGESTED VALUE: NO.

3  TUNE_ARCHIVE=_LOGICAL

 This parameter is no longer used.

 Set if automatic archiving of results files is to be performed.

 The default value is NO.

3  TUNE_USEAAA=_LOGICAL

 Set TRUE if the program is to make use of the `Astronomy &
 Astrophysics Abstracts' system of information categorisation.

 This consists of a set of numbers corresponding to topics in
 Astronomy.  If TUNE_USEAAA is active then the user will be shown
 the currently recognised categories and asked to select the one
 most relevant to the data being reduced.  This parameter is only
 used in conjunction with the archiving facility, when
 TUNE_ARCHIVE=YES.  The prompting process may be overridden by
 supplying a valid AAA code using the parameter TUNE_AAACODE = an
 integer.

 INITIAL SUGGESTED VALUE: YES.

2 ECH_SCRUNCH

 Function: Scrunch multiple orders to a linear wavelength scale.

 This task rebins a spectrum  order calibrated with a wavelength
 polynomial to a linear wavelength scale.

2  ECH_SKY

 Function: Model sky background.

 -- Adapted from the PAMELA routine FITSKY.

 This routine fits low-order (TUNE_SKYPOLY='sky_npoly' terms)
 polynomials with 'skyrej' reject cycles and reject threshold
 'thresh' to every X-position.  It fits to the pixels specified by
 'sky_mask' (sky_mask(I) = 1 indicates that pixel I is sky.  The
 polynomials are then evaluated in the region between the dekker
 limits.

 A special case occurs if TUNE_SKYPOLY=0, in which case the sky
 model is set to zero everywhere.

 This version of the module has additions to allow improved
 estimates to be made by fitting polynomials in the X-direction
 also.  This is enabled using the variable 'vari_sim' and is CPU
 intensive.

 If enabled then each offset from the order trace has a separate sky
 fit done in the X-direction.  These fits are then subjected to a
 simulation process to estimate the variance on the fitted sky
 values.  These variances and then used to weight the values used to
 fit in the spatial direction (between dekker limits).

 Regions suspected of containing sky lines are selected as those
 where the observed value deviates from the fit by more than
 'line_thresh' sigma, and for such values (and their 'xwin'
 neighbours on either side) the 'improved' estimates are not used in
 the per-X-increment fits.

3  Hints

 Normally the default `MEAN' algorithm will be adequate.  Optionally
 polynomial and spline functions may be fitted in both X- and Y-
 directions (X is actually along the order).  In addition, when it
 is essential to gain maximum S/N the sky-background errors may be
 modelled using a monte-carlo simulation (TUNE_SKYSIM=YES).  This
 should be used in conjunction with optimal extraction.

 The default behaviour is to estimate the sky errors on the basis
 of root-N statistics (i.e. error is approx. the square root of the
 intensity).

2  ECH_SLOPE

 Function: Estimate the slope of the orders across the frame.

 Slope estimation is only performed when frame checking is enabled
 (set TUNE_FCHECK=YES).

 This routine determines the slope of the orders in an echellogram.
 The method used is to first collapse or median filter samples of
 20 columns lying across the corner-corner diagonals of the input
 frame, into a 1-D array, and then applies a triangle filter to
 this array.

3  Hints

 When the slope cannot be reliably determined it is set to a
 default value of 0.0.

 As the slope is an average value it is only useful when the
 orders are fairly consistent.  In highly distorted frames it
 may be useful to set the slope manually prior to tracing a
 particularly wild order.  To set the slope use FIGARO SETOBJ

    SETOBJ object=/rdctn-file-name/.MORE.ECHELLE.ORDER_SLOPE value=n.nnn

 at the system command prompt.

2  ECH_TRACE

 Function: Trace order paths across frame.

 This routine attempts to trace the path of an order.  Starting at
 the central column it steps out to the left/right and determines
 local centroids.  When sufficient points have been determined a
 polynomial fit is made to the dataset.

2  ECH_TRCSIS

 Function: Enforce consistency amongst order trace fits.

 This routine models the relationship between inter-order-centre gap
 as a function of Y-position.  This model is re-evaluated at each
 X-coordinate, and the deviations of each fitted trace point are
 evaluated.  Deviant points are replaced by the model predictions
 and then the order is re-fitted with a new polynomial.

2  ECH_TRPLT

 Function: Plot order traces.

 This option simply plots a graph with the same dimensions as the
 raw data frames.  The graph shows the paths of the traced order
 polynomials across the frame.  The option should be used after
 option 2 or 3 to check that the traces are appropriate.

2  ECH_TUNER

 Function: Provides editing/viewing of all tuning parameters.

 This routine supports the interactive setup/inquiry of all the tuning
 parameters for ECHOMOP tasks.

3  Hints

 As tuning parameters will usually be set to their default values,
 ECHOMOP always displays messages relating to any non-defaulted
 tuning parameters immediately prior to their use by any task.

2  ECH_WVCSIS

 Function: Enforce consistent wavelength scales.

 This function performs a function analogous to that performed by
 Option 16 (order traces), only operating upon the wavelength fits.

 It is used after option 10 has calculated the wavelength scales.

 The wavelength-consistency check is confined to those areas beyond
 the range within which lines have been identified.  It therefore
 only corrects the very ends of the orders wavelength scales.

 These are the regions where problems are most likely to occur, as
 the polynomial fits can become unstable when a high number of
 coefficients has been used, and there are no fitted points for a
 substantial fraction of the order (e.g. first 20%).

3  Hints

 Wavelength consistency checking will not normally be required
 unless there is severe distortion induced by the detector (e.g.
 IPCS).  It only operates at the edges of the frames and will not
 change any already identified features.  It merely attempts to
 find new lines at the left/right extreme edges of the orders.

1  Starting_Up

   To start the menu-driven task type

      % echmenu ...any other parameters...

   at the command line prompt.

   This starts the fully-interactive version of ECHOMOP.
   All subsequent operations are carried out by selecting
   items from a menu, and providing various parameters.

   To start the package in automatic mode type

      % echmenu TUNE_AUTOMATE="a,b,c...,EXIT" ...any other parameters...

   where a,b,c etc. are the numbers of the processing steps which
   should be performed.  Any required parameters must have their
   values supplied and the last step requested should be EXIT (or 99)
   to ensure that the program terminates correctly after processing.

   This starts the automatic version of the package running at a
   terminal.  In this mode graphics may still be produced and
   all processes will report on their progress on the terminal.

   In the event of serious problems with the reduction you may be 
   prompted for assistance.  The automatic nature of this mode
   is confined to those situations where an option of automatic
   or interactive is available.  The programs will still prompt
   for the values of parameters they need, however supplying a
   single backslash (or using the NOPROMPT keyword) in response to
   any prompt will cause defaults to be used thereafter.
1  General_advice

 The subtopics contain hints on various types of processing strategies.
2  2D_distortion

 Detectors such as the IPCS often cause major geometric distortions
 in images created using them.  ECHOMOP provides a mechanism for
 modelling such distortion, and using the model to provide
 corrections during the extraction process. It is also possible
 to generate a 'corrected' version of each order for visual
 examination, or processing by other software.

 The distortion modelling uses a coordinate system based on
 X = calibrated wavelength at trace, Y = pixel offset from trace,
 and is thus performed independently for each order in turn.

 The arc frame is used to locate the position of each identified
 arc line at a variety of offsets from the trace centre.  The
 difference between the identified wavelength and that predicted
 by the wavelength polynomial is then calculated.  These
 differences are fitted using Chebyshev polynomials.

 Once a 2-D fit has been obtained, it is refined by either manual
 or automatic clipping of deviant points.  When done manually
 the positions of all the points being fitted (i.e. arc line centres)
 may be plotted in a highly exaggerated form, in which systematic
 distortions of sub-pixel magnitude are readily apparent.

 As the wavelength scale produced by the distortion fitting leads
 inevitably to some re-binning when the extraction takes place,
 it is normal to extract into a scrunched wavelength scale (e.g.
 constant bin size) and this is the default behavior of the 2-D
 extraction task/option.

2  Aborting_a_process

 Tasks may be aborted using /CTRL-C/, but this is not recommended
 as it may lead to corrupted files (in about 1% of cases).

 A 'clean' task abort may be done by typing !! in response to any
 parameter prompt.

 In echmenu, the recommended method of exit is to return to the main
 menu and then select the E/EXIT/99 option.

2  Arc_frames

 The wavelength calibration process may be performed using either
 a single arc frame, or two frames between which the wavelength scale
 is interpolated.

 The advantage of using a single frame (possibly generated by
 co-adding 'before' and 'after' arc frames) is that this allows
 the resolution of the final spectrum to be easily investigated.

 This is because the arc spectrum is always extracted in an
 identical manner to that of the object; using the first (and in this
 case only) supplied arc frame.

 Using two frames and having to interpolate the wavelength scale
 will be most useful when there is a significant shift during the
 exposure such that co-adding the two arcs would produce a frame
 with 'doubled' lines.

 It should be noted that in the two-arc situation the generated
 wavelength scale is only an estimate based on the assumption that
 difference between the two arcs was due only to a stable linear
 variation between the exposures.

2  Automation

 ECHOMOP provides automation to many aspects of echelle data
 reduction which have traditionally required substantial interactive
 assistance:

    - Order location

    - Cosmic ray pixel identification

    - Object/Sky pixel classification

    - Arc line identification

 The provision of these features permits complete automatic reduction
 of echelle data frames.  To help ensure the success of automatic
 reduction runs, special attention should be made to ensure that the
 following conditions are satisfied:

    - A bright continuous spectrum image is provided
      for order tracing.

    - The trace/arc/object images supplied are the
      correct ones.  For instance, supplying the wrong
      arc image will cause problems if the orders
      are in different places on the detector.

    - Constraints placed on expected range of wavelength
      and dispersion are wide enough.  E.g., If in doubt about
      the dispersion being 6 or 7 pixels per angstrom,
      provide limits of MIN_DISPERSION=5, MAX_DISPERSION=10.

2  Bad_rows/columns

 Some CCD detectors suffer from bad rows or columns.

 These typically present anomalously high counts (usually identical
 for each pixel in the row/column).  A facility is provided to check
 frames for this problem, any such pixels are then flagged as having
 bad data quality and omitted from consideration in the subsequent
 processing.

 As the presence of bad rows/columns is normally a static process
 (i.e. all images from a particular chip exhibit the same bad
 row/column), the package only examines one frame at the start of
 the reduction.  This should be the object frame, as the check will
 append a data quality array to the frame, and it needs to be
 attached to the object frame to be 'seen' by subsequent processing.

 Checking for bad row/columns is disabled by default and may be
 selected using the parameter TUNE_FCHECK.

 An additional parameter allows for 'saturated' pixels to also be
 flagged as bad, by setting the parameter TUNE_SATRTN to the
 threshold saturated pixel value.

2  Bias_subtraction

 ECHOMOP does not provide any facilities for the subtraction of the 
 bias current from CCD frames.  It does however, require that such 
 subtraction be performed before processing takes place.  The bias 
 subtraction may often be done automatically at the observatory by 
 the data recording software, but it is up to the user to check if
 this is the case.  KAPPA can be used to subtract the bias if 
 necessary.  For example;

    CSUB /frame/ /nnn/ /frame/

 will subtract bias /nnn/ from data frame /frame/.

 For cases where the bias subtraction represents a significant
 source of error it may be desirable to determine the error due
 to bias subtraction on a pixel-by-pixel basis using many bias
 frames.

 This procedure must be performed by the user, and the resulting
 error estimates copied into the object data frame error array.
 ECHOMOP will incorporate these errors when calculating the 
 variances on the extracted spectra.

2  Blaze_function

 If flux calibration is not being performed it is sometimes
 desirable to remove the blaze function from the extracted
 spectrum to assist in fitting line profiles etc. during data
 analysis.

 A task is provided for this purpose which operates by fitting
 polynomials to the flat-field orders.  The fits may be
 automatically or interactively clipped and the resulting blaze
 spectrum is normalised such that its median intensity is unity.
 The normalised blaze is then divided into the extracted spectrum.

 It is important to remember that this operation must be performed
 upon the extracted spectrum before any scrunching takes place.
 After a blaze function has been applied to the extracted order,
 the function is reset to unity to ensure that the order(s) cannot
 be re-flattened in error.  If the blaze is to be re-applied then
 the correct procedure is to first re-extract the order(s)
 concerned and then re-fit the blaze.

2  Cosmic_rays

 The package provides three major methods of cosmic ray identification:

 - The first approach is to apply two median filters to the
   data frame.  One in the X direction (along rows) and the other
   in the Y direction (along columns).  Both of these median
   images are then divided into the original and the resulting
   image histogrammed.  A threshold point on the displayed
   histogram is then selected.  All pixels generating samples
   above the clip threshold are flagged as cosmic rays.  This
   method does not rely on the echelle nature of the image and may
   be used on data frames of non-spectral type with some success.

 - The second cosmic ray removal routine, is more sophisticated
   in its approach and requires that the order traces are already
   known.  It works by examining the variations from expected
   intensity (calculated from the average profile) and then
   calculating the probability that such variations are due to
   chance.

   Significant pixels are then rejected and the whole order is
   re-processed.  Iterations continue until the overall significance
   of all outliers in the order is below a user-supplied threshold.
   Each order is processed independently in two parts, first the
   sky pixels, and then the object pixels.

   The significance of a fit is calculated by assuming a Gaussian
   distribution of deviations from expected intensities and using
   the Kolmogorov-Smirnov statistic.

   A post processor is used to counteract the tendency of cosmic
   ray identifiers to be fooled by sky line pixels.  This task
   examines the geometry of all 'connected' cosmic ray pixels
   and restores any which it adjudges are actually due to bright
   sky emission lines.

 -  If you have many `identical' object frames then these may
   be processed all together to provide a more reliable cosmic
   ray rejection.  The command

      $ECHOMOP_SOURCE/decos_many

   provides this facility and should be the preferred method when
   multiple frames are available.  The procedure calculates a
   median image and then rejects pixels which deviate by more than
   n sigma from the median value (note that this means that all
   the frames must be of equal exposure time).  Bad pixels are
   flagged by placing values in the quality array of the frame
   concerned.

2  Detector_types

 ECHOMOP has special facilities for particular detector-dependent
 problems.  In particular, for CCDs and similar detectors, the data
 may become obscured by cosmic-ray events over a long exposure.
 The package provides 2 methods of identifying and flagging such
 pixels.

 CCDs also necessitate the provision of a number of extra pieces
 of information to the reduction process.  Care must be taken to
 ensure these values are accurate as they can have a severe impact
 upon the resultant spectrum.

 For the IPCS detector, the frames can be highly distorted in
 both X- and Y-directions.  The package provides for a detailed
 2-D polynomial fit to be made to the distortions present in
 each order.

2  Determining_spatial_profiles

 The determination of the position of the object data within the
 slit proceeds by first locating the slit jaws.  To do this either
 an arc frame or (ideally) a flat-field frame may be used.

 The profile is calculated along the slit and the edges are then
 located by determining the points where the profile intensity drops
 below a tunable threshold.  For problem cases the dekker positions
 may also be indicated manually on a graph of the arc/Flat-field
 profile.

 Once the dekker limits have been determined, the object profile
 is measured.  The object is sampled by averaging the profile
 over all orders (using the central columns of the frame only).

 The median intensity of the profile inside the dekker limits
 is then calculated and used to set an expected sky threshold.

 The profile is then examined by stepping outwards from its peak
 until the profile intensity falls to the expected sky threshold.

 Masks are then created in which each pixel along the slit is
 flagged as sky or object.  These masks may be interactively
 edited and particular sections of the profile flagged as sky
 or object.  Only pixels flagged as 'object' will contribute
 to an extraction.

 Therefore, profile editing provides a simple (though tedious)
 mechanism for producing spatially resolved spectra (each spatial
 increment in turn is flagged as the only object pixel in the
 profile, and extracted).

 The default behaviour is to average all the orders together thus
 generating a composite profile.  In certain circumstances it may be
 necessary to derive a separate profile for each order (for instance
 for multi-fibre spectra).  To select this option set TUNE_USE_NXF=1.

2  Disabling_graphics

 ECHOMOP supports SOFT=NONE to disable all hard and soft graphics
 facilities which can save CPU time when such facilities are not
 required.  The SOFT parameter should be set using

     SOFT=NONE or SOFT=NULL

 to disable ECHOMOP graphics.

2  ECHARC_import/export

 In order to provide backward compatibility with the extensive
 line fitting FIGARO ECHARC software, ECHOMOP has the ability to
 import and export sets of line positions/identifications between
 itself and ECHARC.

 These facilities are provided from the main menu of the ech_idwave
 option/task.  The exchange of information takes place on two levels:

   - ECHARC requires an arc spectrum array organised on an
     NX by number-of-orders basis, plus a set of order numbers
     (1...n) in another array.

   - ECHARC requires an ASCII file listing the order number,
     positions and wavelengths of all identified features.

 The first file is created by ECHOMOP ech_idwave, option XP.  The
 name of the file should be given in response to the ECH_ECHAR prompt.
 The second file has the name ECHARC.LIS and is placed in the
 current directory automatically by XP.

 When starting ECHARC, give the first file name in response to the
 IMAGE prompt.  You should respond YES to the PREVIOUS prompt and
 the second file name should be given in reponse to the ARFILE
 prompt.

 ECHARC also uses the arc line reference lists (i.e. /arctype/.ARC)
 as ECHOMOP and the same file should of course be used with both
 programs.

 Note that the ECHOMOP ECHARC export option must be used first in
 order to create the data file required to use ECHARC, this must
 be done even if no lines are identified before ECHARC is run.

2  Error_arrays

 The ECHOMOP package can deal with errors from the following
 variety of sources:

  -  Errors on the flat-field frame which should be provided in
     the flat-field frame error array.   If no error array is
     provided then ECHOMOP will estimate the error using root-n
     statistics.

  -  Errors due to the readout-noise on CCD type detectors.
     The readout noise value is supplied as a parameter and
     is applied to the whole frame when calculating the variances
     on extracted pixels.

  -  Linear error sources determined manually may be treated
     by providing an error array associated with the object data
     frame. The values should represent an error source that does
     not vary with the intensity of the particular pixel involved.

     An example of this type of error source would be the bias
     subtraction.  If many bias frames are available then error could
     be determined for each detector pixel.  Supplying these errors
     as the object error array would then cause them to be correctly
     included in variance calculations during extraction.

  -  Multiplicative errors such as those due to errors on the
     balance factors (from the flat field) may be taken into
     account by incorporating the appropriate values in the
     error array supplied with the flat-field frame.  You must
     ensure that these variances correctly represent the combined
     effect of both the flat-field noise and any additional
     multiplicative error sources.

  -  Errors due to sky modelling and subtraction are calculated and
     processed internally by the extraction task.

  -  Errors due to detected cosmic-ray hits are treated by
     ignoring the contaminated pixel and rescaling the variance
     on the remaining pixels in that wavelength increment.

  -  All output spectra have an error array associated with them,
     these error arrays always contain the variance for the
     parallel entry in the data arrays.

2  Extended_objects

 Although explicit support for extraction of extended objects is not
 provided in this release, it is possible to use the package to
 extract an increment at a time.  To do this normal extraction
 should first be performed to obtain a reliable sky model.

 Then the ech_spatial option/task should be used to mask out all
 object increments except one.  The extraction should then be re-done
 and the resulting spectrum copied into a section of a user-created
 data array using KAPPA image processing facilities.

 This procedure needs repeating for each increment required and
 could be automated using a command file.

2  Flat_fielding

 ECHOMOP will use a flat-field frame if one is available.  The
 flat-field frame should be produced using a continuum lamp exposure
 with the instrument in an identical configuration to that used for
 the object exposure (to ensure that any wavelength-dependent
 behaviour of pixel response is taken into account).  The exposure
 should be of sufficient duration to attain high counts in the
 brightest parts of the image.

 ECHOMOP fits polynomials/splines in two directions; along the traces,
 and along the image columns.  The degree of function fitted can be
 changed, but the default (low) degree will normally be perfectly
 reasonable.  Each flat-field pixel in an order is then used to
 calculate a 'balance' factor.  This is a number close to unity which
 represents the factor by which a given pixel exceeds its expected
 value (predicted by the function).

 Note that this technique requires that the flat-field orders vary
 slowly and smoothly both along and across each order.

 If required, many flat-field frames (with identical instrument
 configuration) may be co-added to produce a single high
 signal-to-noise flat-field frame prior to using ECHOMOP.

 At present no special facilities are provided for calculating the
 actual error on such a co-added flat field; the expected error (derived
 from root N statistics) is what is used to calculate the error on the
 balance factors unless appropriate variances are provided in the
 flat-field frame error array.

 A special mode of operation is selected by setting the parameter
 FLTFIT=MEAN.  In this case the balance factors are calculated using the
 local mean value based on a 5-pixel sample.  This will normally be used
 when the flat field at the dekker limits cannot be modelled because its
 intensity changes too rapidly on a single-pixel scale due to
 under-sampling of the profile.

 Other special modes are available to help model difficult data,
 and the type of fit used is primarily selected using the FLTFIT
 parameter:

    - FLTFIT=POLY, normal polynomial fitting.
    - FLTFIT=SPLINE, bi-cubic spline fits.
    - FLTFIT=MEAN, local means.
    - FLTFIT=MEDIAN, local medians.
    - FLTFIT=SMOOTH, Gaussian smoothing.
    - FLTFIT=SLOPE, local slope.

 In the situation where a balance factor frame is independently
 produced, this may be fed to ECHOMOP as the flat-field frame.
 The parameter TUNE_PREBAL should then be set to YES.

 In this case the modelling will not take place and the balance factors
 will simply be copied from the supplied frame.  This should be used for
 special cases where the polynomial model cannot generate appropriate
 values.

 In cases where no flat-field frame is available then the parameter
 TUNE_NOFLAT=YES can be specified; or alternatively FFIELD=NONE
 set when prompted for the name of the flat-field frame.  In
 either case, all balance factors will be taken to be unity.

2  Flux_calibration

 This release of ECHOMOP provides no special support for flux
 calibration of the extracted spectra.  FIGARO provides extensive
 support for this procedure, including many standard star data
 tables.

 It should be noted that due to the extremely high resolution of
 the spectra produced by UCLES, there are unlikely to be sufficiently
 high resolution data available for the flux standards.

 A common situation is that the FIGARO table for the standard
 contains (at most) one sample (flux) point per order, and that such
 points are often 40 Angstrom averages.  In such cases it is
 difficult to ascribe much confidence to the resulting fluxes.

 A program of high-resolution observations (of commonly used flux
 standards) to combat this problem is being planned.

 Output ECHOMOP data files (generated using ech_result) may be read
 into the appropriate FIGARO tasks.

2  Frame_orientation

 The current release of the package is inflexible with relation
 to the orientation of orders within the data frames. It expects
 that the orders run (mainly) horizontally (i.e. an order trace will
 follow a path which increases much quicker with increasing X
 than with increasing Y).

 Diagram:

           -----------------------------------------------
           |                                             |
           |                                             |
           |                                             |
           |                                             |
           |                          ------------------ |
       Y   |          ----------------                   |
           |   -------                                   |
       ^   |---                                          |
       ^   |                                             |
       +   |                                             |
           |                                ------------ |
           |                ----------------             |
           |   -------------                             |
           |---                                          |
           |                                             |
           |                                             |
           |                                             |
           |                                             |
           -----------------------------------------------

                               + >> X

 Images not conforming to this format will need to be rotated
 through 90 degrees.

2  Graphics_display

 Graphics display may be controlled by specifying the SOFT parameter
 on the command line of any ECHOMOP task.  For example:

    % ech_trace SOFT=device

 (Note the CaSe is important on UNIX machines)

 ECHOMOP also supports SOFT=NONE which disables all interactive
 graphics facilities and saves CPU time when such facilities are not
 required.  The SOFT parameter should be set using

    SOFT=NONE or SOFT=NULL

 to disable ECHOMOP graphics.

 Hard copy graphics is directed to /device/ using the parameter

    HARD=device

 The ech_plot task also provides the ability to re-direct the
 graphics output to any device during a run of the program.  Typing
 >device at the ech_plot menu will direct future output to that
 device.  Additionally, ech_plot can make one-off hard copies of the
 last plotted graph by typing ^ at the ech_plot menu prompt.  Such
 plots will be output to the device specified using the hard
 parameter.

2  Image_display

 During some stages of processing (e.g. tracing) ECHOMOP will output
 images on the graphics display device.  The current graphics device
 is used and must therefore be capable of grayscale output. (GKS
 devices will simulate this by dithering).  If you want ECHOMOP to
 use this capability (which is CPU intensive) when plotting graphs
 during processing then set DISPLAY=YES.

 The imaging capability is used in the following situations:

    - overlay order traces on traced image
    - overlay dekker and object limits on extracted image

 The ech_plot task also uses imaging capabilities when operated in
 `BROWSE' and `GRAYSCALE' modes of operation (See ECH_PLOT).  These
 modes are not effected by the DISPLAY parameter.

2  In_batch

 Batch procedures may be created in two ways.  Create an ICL
 procedure to perform the required sequence, or edit a text
 file containing the sequence.  ECHMENU provides an assisted
 mode of operation which allows you to submit a set of ECHOMOP
 commands using a single task invocation.  To use this the
 TUNE_AUTOMATE parameter is set to an ASCII string holding
 the numbers of the echmenu options required.

 For example;

    ECHMENU TUNE_AUTOMATE="1,2,3,4,5"  -other parameters-

 would start ECHOMOP and run the first five steps of the 'normal'
 reduction sequence.  Note that any parameters required by the
 steps chosen must be supplied on the command line.

 If you wish to use this strategy to submit batch procedures
 then it is essential to ensure that all the prerequisites
 for unattended processing are met:

    - all required parameters have values set
    - the correct directory is set up as the current directory
    - all data files are present and unprotected

2  IUE_data

 ECHOMOP can be used process IUE data presented in the form of
 a SIHI file.  These files contain HIRES spectra which have been
 photometrically corrected, rotated and de-splayed.

 Some algorithmic optimisations are available specifically for IUE
 data.  These are activated by using the hidden parameter TUNE_IUE.

 This parameter should be supplied on the command line thus:

    ECH_TRACE TUNE_IUE=1

 Currently only TUNE_IUE=1 is supported, but other values may be
 provided in the future to optimise the extraction algorithm
 depending upon the object type.

2  Locating_the_orders

 Orders can usually be located completely automatically by ECHOMOP.
 The algorithm takes the central few columns of a the frame and
 cross-correlates them to provide an estimate of the average order
 separation.

 It then uses this estimate to size a sampling box.  The central
 columns are then re-sampled using averaging and a triangle filter
 to enhance the central peaks.  The resulting data is then searched
 to find the peaks representing the centre of each order.

 This technique can be severely affected by cosmic rays and other
 high-energy contaminants in the image.  It is recommended that only
 flat-field (or bright object) frames are used to perform order
 location and tracing.

 In cases where the algorithm cannot locate all the orders which are
 apparent by visual inspection, the orders may be located manually.
 To control this TUNE_AUTLOC=NO  should be set.  In this case ECHOMOP
 will display a graph of the central portion of the frame and wait for
 interactive verification of, or correction to, the located order
 positions.  For cases where the user is confident that the located
 orders will be correct, TUNE_AUTLOC=YES can be specified.

2  Manual_reduction

 Manual reduction using ECHOMOP is available at two levels:

 A menu driven, guided reduction.

    - ECHMENU     provides menu of all tasks

 A completely manual selection of processing steps one after another
 when required.  The set of tasks available to the user at this
 level consists of the following ECHOMOP specifics:

    - ECH_DECOS1  detects and flags cosmic ray pixels

    - ECH_DECOS2  detects and flags cosmic ray pixels

    - ECH_LOCATE  locates orders in a frame

    - ECH_SLOPE   measure average order slope

    - ECH_TRACE   traces orders already located

    - ECH_TRCSIS  does trace consistency checking

    - ECH_TRPLT   plots order traces graphically

    - ECH_SPATIAL calculates the profiles (spatial)

    - ECH_LINLOC  locates arc lines

    - ECH_IDWAVE  identifies and wavelength calibrates

    - ECH_WVCSIS  does wavelength scale consistency checking

    - ECH_EXTRCT  extracts orders

    - ECH_2DFIT   distortion fitting for an order

    - ECH_2DEXT   extracts distorted orders

    - ECH_MDLBCK  models global scattered light background

    - ECH_FFIELD  calculates flat field balance model

    - ECH_PROFILE calculates object profiles

    - ECH_SKY     calculates sky background

    - ECH_SCRUNCH scrunches extracted orders

    - ECH_TUNER   interactively sets tuning parameters

    - ECH_PLOT    plots/prints all stages of reduction

    - ECH_RESULT  handles output of results to files

    - ECH_ONE     set single order operations (in ICL only)

    - ECH_ALL     set all order operations (in ICL only)

    - ECH_FTRDB   generate a database file using a .ARC line list

 These commands may generally be used from an ICL command prompt or
 from the system shell prompt.

2  Multi-object_spectra

 Although ECHOMOP was produced for the reduction of data taken with
 the UCLES Echelle Spectrograph, it is in no way limited to processing
 data from this particular instrument, or even, to data from echelle
 spectrographs.  The package can equally well be used on multi-object
 spectra obtained, for example, using the popular fibre based
 instruments.  If you are processing this type of data the following
 points need to be remembered.

 Each spectrum will need to be independently wavelength calibrated
 as the expected inter-order relationship checked for by completely
 automatic calibration will not be valid.  Automatic identification
 of lines will however, still be possible on an object-by-object
 basis and if all the spectra have the same range (in wavelength),
 then the wavelength limits obtained on successfully calibrating
 the first object can be used as constraints for the others.
 In this instance the ech_idwave option/task would be run
 interactively for the first object, and then via a command such
 as the example below (for object 2), for all the remaining objects.

    % ech_idwave IDX_NUM_ORDERS=2 \
                 ARC=THAR ECH_FTRDB=ARCDIRS:THAR \
                 ID_INTERACT=NO \
                 ...other parameter settings...\
                 MIN_WAVE=3250. \
                 MAX_WAVE=3295. \
                 NOPROMPT

2  Pre-processing

 All raw data should be pre-processed in the following ways before
 processing with ECHOMOP:

  -  Ensure that the frame is stored in a Starlink-standard
     data file, or one accessible via the CONVERT utility.

  -  Rotate the data frame 90 deg. if necessary to achieve an
     orientation where the long axis of each order is
     in the X-pixel (horizontal) direction.

  -  Subtract the bias current value from all raw frames using
     the appropriate KAPPA or FIGARO command.

  -  Do not multiply CCD frames by the prevailing ADU-to-
     electron conversion factor prior to reduction.  ECHOMOP
     tasks prompt for this value and use it to generate resulting
     spectra with counts in photons.

 If a cosmic ray contaminated frame is to be used for tracing
 the paths of the orders across the frame then

  -  Use ech_decos1 to clean cosmic rays from the trace frame.
     Note: this task flags cosmic rays in a quality array and
     does not actually alter any of the data frame values.
     This is the recommended approach in this situation.  The
     ech_decos1 task may be used stand alone, or it may be
     invoked from the main task by setting TUNE_CRTRC=YES at
     the start of a reduction.

  -  If you have many `identical' object frames then these may
     be processed together to provide a more reliable cosmic
     ray rejection.  The command procedure

        $ECHOMOP_SOURCE/decos_many

     provides this facility and should be the preferred method when
     multiple frames are available.  The procedure calculates a
     median image and then rejects pixels which deviate by more than
     n sigma from the median value (note that this means that all
     the frames must be of equal exposure time).  Bad pixels are
     flagged by placing values in the quality array of the frame
     concerned.

2  Processing_steps

 The reduction cycle has been split into a set of steps, most
 of which perform some form of image analysis.  The results of
 these analysis steps provide various models describing the
 features of the image.

 All these steps take place before any extraction of data from
 the raw image.  The extraction is performed in a single step
 taking into account the previously established data characteristics.

 This provides for the efficient processing of multiple data frames
 where the same object has been observed, as many of the processing
 steps need only be done once for the first frame of the series.

 All the discrete processing steps are available as both individual
 tasks (providing efficient execution of single steps), and as
 options from a menu driven control task (providing automatic
 processing and context sensitive assistance).

 To execute a particular step you can either:

  - select the appropriate option from the main echmenu menu.
  - type its name at the command line.  For example:

    % ech_linloc

2  Quick_look_mode

 Invoking ECHOMOP tasks with the TUNE_QUICK=Y parameter will cause the
 automatic setting of parameters to values to minimise CPU usage.

 The following algorithmic optimisation will be used:

  -  order tracing will use centre-of-gravity to locate the centre
     of the order.

  -  maximum of 200 trace sample points per order will be measured.

  -  criteria for clipping points from the trace fit will be set
     at 1 pixel maximum deviation, and up to 5 pixels may be clipped
     per iteration.

  -  extraction will use the linear version of the 1-D algorithm
     which is faster than optimal/weighted extraction.

  -  arc line identification will assume the data is arranged
     with wavelength increasing with X-pixel address.

  -  no scrunching will be performed.

2  Readout-noise

 The signals from CCD detectors are subject to an uncertainty due to
 the charge-to-voltage conversion on the chip.

 This is called readout noise.  Most modern CCDs are run to not
 under-sample the noise signal, so the noise level is a couple to
 a few counts in each pixel.  Older chips with higher readout noise
 levels are still in  use.

 ECHOMOP expects the value for readout noise to be specified in
 the data frame itself (for CCD frames).  You should check that
 the correct value has been obtained.

 Some CCDs use multiple on-chip amplifiers to provide a more rapid
 readout facility.  Each of these will have its own readout noise
 value.  The best procedure for processing such frames is to split
 the image in to two sub-frames (or four for quad-amplifier chips).
 Each sub-frame should be separately processed in the normal way.

2  Repeating_steps

 In many cases the automatic sequence of steps provided by ECHMENU's
 main menu defaults will be enough to complete the reduction.  In
 some cases, however, it may be necessary to restart the reduction at
 a particular stage, maybe using a different raw image, different
 degree of polynomial etc.

 ECHOMOP allows the selection of any valid step of a reduction at
 any stage.  If the step requested needs results from steps which
 have not yet been performed then the user will be informed of this
 and the default next step will be set back to the step which
 generates the required information.

 If a single step task is invoked before all its input requirements
 are available (e.g. order tracing before order location) then the
 task will abort with a message indicating which task needs to be
 run in order to provide the necessary pre-requisites.

2  Scattered_light

 In some cases the user will want to subtract the contribution of
 scattered light from the object instead of using the sky pixels
 (which implicitly also contain scattered light information).

 The task ech_mdlbck performs this scattered light background
 fitting and places the resulting fitted values in the `sky fit'
 arrays used by the extraction routines.  The background fitter uses
 a similar set of parameters to the the normal sky modeller but
 applies its fits to the sets of inter-order pixels at each X- 
 position in the frame.  Note that this involves a lot of I/O and can
 be quite a slow operation for large frames.

 The degree of function to fit and its associated parameters are
 specified using the same parameters as for `sky' fitting.

2  Scrunching

 The scrunching of spectra into a (usually) linear wavelength scale
 provides exactly the same facilities available using the FIGARO
 SCRUNCH program, except that it works on an order-by-order basis.

 See the SCRUNCH documentation for details.

 The package provides both global (bin size constant for all orders)
 and per-order scrunching options.  The global option would normally
 be used when it is necessary to co-add the extracted orders from
 multiple data frames, and a standard bin-size is required.

 Your own linear wavelength scale may be defined by supplying start
 wavelength and bin size, or the defaults calculated by the program
 may be used.  In addition, there are options available to allow
 multiple spectra to be scrunched to the same output scale and
 the results to be merged together.

 The scruncher automatically merges multiple orders using the local
 median intensities as weighting factors.  In addition each order may
 either be scrunched to a global scale (i.e. all orders have the same
 bin size), or to its own optimal bin size (i.e. that which gives an
 equal number of bins to the original).

 To merge multiple spectra to the same output scale use the
 ech_mulmrg option/task.

2  Sky_estimation

 The sky intensity at each increment along the order may be
 modelled using a polynomial or spline curve.  The degree of the
 curve fit is adjustable.  By default it is set to zero to obtain
 the mean sky behavior.

 Higher-degree polynomials are useful when there is a gradient to
 the sky intensity along the slit, as they are used to predict the
 sky intensity at each object pixel in the order independently.

 Note that the meaning of 'increment' differs between regular and
 2-D distortion corrected extractions.

 For a simple extraction an increment is a single pixel column.

 For a 2-D extraction each increment is a scrunched wavelength scale
 unit, thus ensuring the accurate modelling of distorted bright
 emission lines in the sky.

 The selection of sky pixels is done using the masks determined by
 the profiling task/option.  These masks can be freely edited to
 cope with any special requirements as to which regions of the slit
 are to be used for the sky.  This facility is of use when
 processing frames where 'periscopes' have been used to add in sky
 regions when observing an extended source.  In such cases ECHOMOP
 currently provides no special treatment and the periscope sky
 pixels' positions will have to be edited into the sky mask using
 the ech_spatial task/option.

2  Sloping_orders

 A common problem when extracting echelle orders is that they are
 significantly sloped with respect to the pixel rows/ columns.

 ECHOMOP can cope with highly sloping orders because it works by
 first locating a single point in each order and then using this as
 the start point for tracing the order path.

 ECHOMOP also calculates the approximate slope of the orders prior
 to tracing, and uses this information to predict the order position
 when tracing fails (usually due to cosmic-ray contaminated pixels).

 The slope is estimated by taking averaged samples of the frame
 along two lines.  One running from top-left to bottom-right and the
 other from top-right to bottom-left of the frame.

 These diagonals are then searched for peaks, starting from the
 frame centre outwards towards the corners.  This convoluted method
 is immune from problems due to partial orders which affect other
 algorithms, as each must be identified twice to allow its slope to
 be estimated.  Partial orders which are only sampled once by the
 diagonals will not confuse the estimate.

 The estimate obtained by this method is however, an average value
 over all orders.  It is therefore not applicable when the orders are
 highly distorted, or when each order has a different slope.

 The slope as calculated by the program may be overridden manually
 using the FIGARO command SETOBJ:

    SETOBJ object=/rdctn-file/.MORE.ECHELLE.ORDER_SLOPE value=n.nnnn

 where n.nnnn= the X/Y pixel ratio.

2  Tracing_the_orders

 The tracing of the paths of the orders across the data frame is
 often a source of difficulty as it is fairly easy for blemishes in
 the frame to fatally deflect order tracing algorithms from the
 actual path of the order.  ECHOMOP provides a variety of options to
 help combat these problems.

 ECHOMOP order tracing first locates the positions of the orders at
 the centre of the frame, and estimates the average order slope.

 It uses this information to predict the existence of any partial
 orders at the top/bottom of the frame which may have been missed by
 the examination of the central columns during order location.
 Tracing then proceeds outwards from the centre of each order.

 At each step outwards a variable size sampling box is used to
 gather a set of averages for the rows near the expected order
 centre.  The centre of this data is then evaluated by one of the
 following methods:

 - Gaussian  Attempts to fit a Gaussian profile to the data.
             Works well for bright object frames.

 - Centroid  Calculates the centroid of the data.
             Most generally applicable method.

 - Edge      Detects the upper and lower edges of the data
             and interpolates.  Is less accurate but works well
             for difficult flat fields  (e.g. saturated).

 - Balance   Calculates the centre of gravity (balance point).
             Works well for difficult data when G and C methods
             are having problems.

 - Retrace   Uses a previous trace as a template to predict
             the trace whenever it cannot be centred.  Will
             normally be used in conjunction with automatic
             trace consistency checking to improve poorly
             traced orders.

 - User      The last resort allows manual indication of a set
             of points close to the order centre.  Then functions
             as for Retrace by using a polynomial through the
             supplied points to predict order position whenever
             it is lost.

 The trace algorithm will loop increasing its sampling box size
 when it fails to find an explicit centre.  The sample box can
 increase up to a size governed by the measured average order
 separation.

 When a set of centres have been obtained for an order, a polynomial
 is fitted to their coordinates.  The polynomial degree being is
 selectable.  For ideal data, these polynomials will represent an
 accurate reflection of the path of the order across the frame.

 For real data it is usually helpful to refine these polynomials by
 clipping the most deviant points, and re-fitting.  Options are
 provided to do this automatically or manually.

 When dealing with distorted data it is often necessary to use a
 high degree polynomial to accurately fit the order traces.

 This in turn can lead to problems at the edges of the frame when
 the order is often faint. Typically the polynomial will 'run away'
 from the required path.  The simplest solution is, of course, to
 re-fit with a lower order polynomial, however, this may not be
 satisfactory if the high degree is necessary to obtain a good fit
 over the rest of the order.

 In these circumstances, and others where one or more orders
 polynomials have 'run away', ECHOMOP provides an automatic
 consistency checker.  The consistency checking task works by fitting
 polynomials to order-number/Y-coordinate at a selection of positions
 across the frame.

 The predicted order centres from both sets of polynomials are then
 compared with each other and then mean and sigma differences
 calculated.  The 'worst' order is then corrected by re-calculating
 its trace polynomial using the remaining orders (but excluding its
 own contribution).  This process is repeated until the mean
 deviation between the polynomials falls below a tunable threshold
 value.

 The consistency checker will also cope with the 'bad' polynomials
 which can result when partial orders have been automatically
 fitted.

 The order traces may also be viewed overlaid on the trace frame if
 DISPLAY=YES is used.

2  Wavelength_calibration

 The wavelength calibration is done using a reference feature list,
 usually provided by an arc-lamp exposure.  The routine allows any
 candidate features to be identified and used as 'knowns' for the
 calibration (as position/intensity pairs).

 These features may then be manually identified using a reference
 lamp atlas.  Facilities are provided for adding/deleting lines and
 altering the degree of polynomial fit performed.

 An automatic line identifier is included which works by searching
 the suppled line list for multi-line 'features'.  This search can
 be optimised by constraining the space to be searched in terms of
 permissible wavelength and/or dispersions (in pixels/Angstrom).  In
 addition, the program will automatically constrain the search range
 further if it can determine the central order number and wavelength
 (by looking in the data frame header).

 As soon as two orders have been successfully calibrated, the search
 range for the remaining orders is re-evaluated to take this into
 account.  In general the automatic method will be most useful when
 you are unsure of the exact wavelength range covered.

 When the level of doubt is such that the wavelength scale may
 decrease from left to right across the frame, then the software may
 be instructed to automatically check for this 'reversed' condition.
 The parameter TUNE_REVCHK controls this process and defaults to NO
 to avoid wasting CPU time.

 Finally, the software is flexible as to the vertical orientation of
 the orders, i.e., higher wavelength orders may be at the top or
 bottom of the frame (for echelle data).

 Calibration may be performed using either 1 or 2 (before and after)
 arc frames at present.  See ARC_FRAMES for details.

 Options are presented in a menu form and selected by typing a one-
 or two-character string, followed by carriage return.  The following
 options are supported:

3  Automatic_identification

 AI (automatic identification), initiates a search and match of the
 feature database.  Any preset limitations on the wavelength and
 dispersion range will be taken into account.

 When a solution is found, a report including a probable status is
 made and the options to investigate the solution further (I), or
 search for further solutions (AI) are available.

3  Exit

 E (exit), leaves the line-identification  menu and  updates the
 reduction database copy of the wavelength polynomial to reflect
 the latest calculated fit.

3  Help

 H (help), provides interactive browsing of the relevant
 sections of the help library for line identification.

3  Interactive_identification

 The interactive option displays a plot of the arc and marks the
 positions of possible arc lines.  Any identified lines are
 labelled with their wavelengths.  Once a wavelength scale
 has been calculated then the positions of all the reference list
 arc lines are shown along the top of the plot.

 I  (interactive identification), enters the interactive line
 specification/examination section.  This section provides features
 for addition/deletion/re-fitting/listing etc. of identified lines.

 This submenu provides a set of interactive options to assist in
 identifying arc lines and fitting the wavelength polynomial to
 describe the variation along an order.  The options provided are
 as follows and are all selected using a single character.  Note that
 the RETURN key is not necessary for option selection, care is
 therefore needed to ensure that the cursor is correctly positioned
 before a cursor-dependent option is selected.

4  Auto

 A(uto), initiates an automatic search and match of the reference
 feature database.  Any preset limits on the wavelength and dispersion
 search range are taken into account.  Each possible solution is
 reported upon with an indication of its probable accuracy.  The
 fit may then be to rejected, or examined in detail for
 verification or modification.

4  Clear_all_identification

 C(lear), removes all identified line information for the order.
 The polynomial fit remains though, and any good lines could be
 recovered by using the R(e-interpolate) option.

4  Delete_a_line

 D(elete), removes an identified line from the set of identified
 lines.  This will usually be used to remove a suspect line
 which has been incorrectly automatically identified.  The identified
 line nearest to the cursor X-position when the D is pressed, will
 be the one which is deleted.

4  Exit

 E(xit),  leaves the interactive identification/fitting  routine
 and returns to the main line-ID menu. The current set of fitted
 lines  and the polynomial are saved  in the reduction database.

4  Fit_polynomial

 F(it), performs a polynomial fit to the positions/wavelengths of
 all currently identified lines.  Reports on the deviation of each
 line from the fit, and the improvement possible by deleting
 each line and re-fitting.  No check is made against the database
 to see if further lines may now be identified, use the R option
 if this is required.

4  Information

 I(nfo), reports information known about the nearest located line
 (relative to X-position of cursor when I is pressed).  Details
 include position, wavelength etc.

4  List_known_lines

 L(ist), examines the feature database to find the nearest features
 to the current X-position of the cursor, assuming the current
 polynomial fit predictions about the corresponding wavelengths.

4  Move_to_coord

 M(ove), when viewing a zoomed graph of lines, allows the central
 point of the plot to be moved to any point along the X-axis.
 A prompt is made for the exact co-ordinate required.

4  New_line

 N(ew), used to specify a completely new feature.  Should be used when
 you wish to identify a line which has not been located at all by
 the arc line location algorithm.  All located lines are indicated by
 a | appearing above their peak.  Identified lines additionally have
 the wavelength shown.

4  Outwards_zoom

 O(out-zoom), Reverses any currently selected zoom factor on the
 displayed graph of lines.

4  Quit

 Q(uit), leaves the manual identification/fitting routine without
 updating the polynomial in the reduction database. Note that any
 newly identified lines will be saved. Only the polynomial (which
 represents the outcome of an identification) is left unchanged.

4  Re-interpolate

 R(e-interpolate), a polynomial fit is made to the currently
 identified lines.  This polynomial is then used to search the
 database for any new line candidates.  All new candidates are then
 added into the fit and the polynomial iteratively re-fitted and
 clipped until a stable solution is obtained.

4  Set_line_wavelength

 S(et), is used to set the wavelength of a line.  The line whose
 wavelength is to be set should be the one nearest to the X-position
 of the cursor and may be an identified or unidentified line.

 Use the N(ew) option to create a new line where none had been
 auto-located.

4  Zoom_plot

 Z(oom), increases the magnification of the graph used to plot
 the line positions.  To reverse the effect use the O(ut-zoom)
 option.

4  Increment_polynomial

 (Plus key), increments the degree of polynomial used for the
 wavelength fitting. May  be increased up to the maximum specified
 by the tunable parameter TUNE_MAXPOLY.

4  Decrement_polynomial

 (Minus key), decrements the degree of polynomial used for the
 wavelength fitting.

4  Shift_right

 (Greater-than key), when a zoomed graph is plotted, will shift the
 viewpoint along to the right (plus X) by an amount sufficient to
 show the adjacent section of the plot.

4  Shift_left

 (Less-than key), when a zoomed graph is plotted, will shift the
 viewpoint along to the left (minus X) by an amount sufficient to
 show the adjacent section of the plot.

3  Import_ECHARC_data

 IM (import ECHARC data), is used to provide an interface to the
 ECHARC arc line identification program.  In general, the XP option
 should first be used to export data for ECHARC processing.  ECHARC
 would then be run, and finally the data IMported back into this
 package.

3  Order_selection

 O (order selection), is used to change the current selected order
 when operating manually.  The order number selected is prompted for.

3  Polynomial_degree

 P (polynomial degree), is used to alter the degree of polynomial
 to be used for the wavelength fitting.  This may vary up to the
 maximum specified by the parameter TUNE_MAXPOLY.

3  Export_ECHARC_data

 XP (export data for ECHARC), is used to provide an interface to the
 ECHARC arc line identification program.  In general, the XP option
 should first be used to export data for ECHARC processing.  ECHARC
 would then be run, and finally the data IMported back into this
 package.

2  Viewing_2D_correction

 The effect of the 2-D distortion correction can be examined by
 using the ech_scrn2d task to create a 'corrected' image of the
 orders.  This should be displayed using the FIGARO commands.

 It is also possible to use software intended for processing
 single spectra to process such corrected images.

 Note that the pixels in such images are no longer independent
 as they represent the scrunching of 2 or more pixels in most
 cases.

2  Viewing_cleaned_CR's

 The cosmic ray location tasks flag the locations of the bad pixels
 in a quality frame which is associated with the data frame
 concerned.  The pixels themselves are left unchanged.

 To allow the visual inspection of the Cosmic Ray locations both
 tasks create a 'cleaned' image frame in which all cosmic ray pixels
 have been replaced by the local 'magic value'.

2  Viewing_spectra

 It is often  useful when reducing 'difficult' data,  to be able
 to  examine various intermediate 'spectra' generated during the
 reduction process.  ECHOMOP  provides a very flexible method of
 examining any intermediate arrays.

 The ech_plot task (ECHMENU Option 27 "P") provides zooming, re-
 binning, re-scaling etc. on any array in the database.   Arrays
 may be specified by database object name,  or by an abbreviated
 name.

 To get a short listing of abbreviated names use the D(irectory)
 option in the ech_plot option/task.

 To obtain a full directory use the FD option.

2  Viewing_traced_paths

 The tracing of the echelle order paths is central to the entire
 extraction process and care should be taken to ensure the best
 traces possible.  ECHOMOP provides a large number of processing
 alternatives to help ensure this can be done.  Most of these
 provide information such as RMS deviations etc. when run.

 In general however, the best way of evaluating the success or
 failure of the tracing process is to visually examine the paths
 of the trace fitted polynomials.  Three methods of viewing the
 traced paths are provided.

  -  Viewing the fitted paths overlaid on an image of the
     trace frame as tracing is done (Set parameter DISPLAY=YES).


  -  Using a graphics device to plot the paths of all orders
     (ech_trplt task/option).

 For a single order, more detailed examination of the relation
 of a trace polynomial to the points it fits, can be obtained
 using the V(view) command in the ech_fitord task/option.

1  Problem_Hints

 This topic is automatically accessed by the context-sensitive HELP
 manager for ECHOMOP.  Each subtopic provides detailed hints for the
 solution or workaround when a specific anticipated problem occurs.

 In some cases this is just an explanation of the problem, in other
 cases, a variety of alternatives may be suggested.
2  Bad_diagonals

 The program is unable to determine the slope of the orders across
 the frame.

 In this situation the slope is assumed to be 0.  The most likely
 cause of this problem is cosmic-ray contamination.  This can be
 avoided by using the ech_decos1 option/task to clean the frame
 prior to slope determination.

 The order slope is only used when tracing very poor data and
 can usually be left at the default value of zero.

 In extreme cases you can set the slope manually using the FIGARO
 command SETOBJ:

    SETOBJ object=/reduction-file/.MORE.ECHELLE.ORDER_SLOPE value=nn.nn

 where nn.nn is the increase in Y-coordinate per X-pixel increment.

2  Bad_lower_dekker

 The program was unable to obtain a satisfactory estimate of the
 position of the dekker in the region below the trace.

 The algorithm for determining the dekker position steps out from the
 peak intensity until the intensity falls below a tunable threshold.
 If the predicted edge is reached before this occurs then the lower
 dekker is set to this predicted value (simply calculated as half
 way between the orders).

 TUNE_DEKTHR may be varied to adjust the threshold.  It is also 
 possible to manually adjust the status of each pixel in the profile 
 by setting PFL_INTERACT=Y.

2  Bad_sky_above

 The program was unable to obtain a satisfactory estimate of the
 position of the 'sky' in the region above the object.

 The algorithm for determining the sky extent uses the median
 intensity across the profile, and the relative peak intensity.
 The relative peak intensity is multiplied by a the value of the
 parameter TUNE_SKYHILIM and compared with 1.05 times the median
 intensity.  The lower of the two values is used as a threshold.
 When the intensity falls below this threshold, the program denotes
 the pixels from the current pixel to the edge of the dekker as 'sky'.

 TUNE_SKYHILIM may be varied to adjust the threshold.  It is  also 
 possible to manually adjust the status of each pixel in the profile 
 by setting PFL_INTERACT=Y.

2  Bad_sky_below

 The program was unable to obtain a satisfactory estimate of the
 position of the 'sky' in the region below the object.

 The algorithm for determining the sky extent uses the median 
 intensity across the profile, and the relative peak intensity. 
 The relative peak intensity is multiplied by the value of the 
 parameter TUNE_SKYHILIM and compared with 1.05 times the median 
 intensity.  The lower of the two values is used as a threshold. 
 When the intensity falls below this threshold, the program denotes 
 the pixels from the current pixel to the edge of the dekker as 'sky'. 

 TUNE_SKYHILIM may be varied to adjust the threshold.  It is also 
 possible to manually adjust the status of each pixel in the profile 
 by setting PFL_INTERACT=Y.

2  Bad_upper_dekker

 The program was unable to obtain a satisfactory estimate of the
 position of the dekker in the region above the trace. 

 The algorithm for determining the dekker position steps out from 
 the peak intensity until the intensity falls below a tunable 
 threshold. If the predicted edge is reached before this occurs 
 then the upper dekker is set to this predicted value (simply 
 calculated as half way between the orders).

 TUNE_DEKTHR may be varied to adjust the threshold.  It is also 
 possible to manually adjust the status of each pixel in the profile 
 by setting PFL_INTERACT=Y.

2  Bad_X_dimension

 A data frame has been specified whose X-dimension is different from
 that of the first frame specified during the reduction.

 All frames must have the same X- and Y-dimensions.  The most likely
 cause is that the frames are from different datasets.  If you really
 want to use this combination of data frames then you must use the
 facilities of FIGARO to 'grow' one of the data frames up to the
 dimensions of the other.  You must ensure that any image registration
 problems are taken care of before reduction is attempted.  In general,
 it will be necessary to re-start the reduction with a new reduction
 file after any such adjustments have been made.

2  Bad_Y_dimension

 A data frame has been specified whose Y-dimension is different from
 that of the first frame specified during the reduction.

 All frames must have the same X- and Y-dimensions.  The most likely
 cause is that the frames are from different datasets.  If you really
 want to use this combination of data frames then you must use the
 facilities of FIGARO to 'grow' one of the data frames up to the
 dimensions of the other.  You must ensure that any image registration
 problems are taken care of before reduction is attempted.  In general,
 it will be necessary to re-start the reduction with a new reduction
 file after any such adjustments have been made.

2  Cannot_create_db

 The program is unable to create an arc line database file.

 This will usually be due either to:

  - the destination directory being protected against write access,

 or,

  - a disk quota being being exceeded.

 Ensure that neither is the case before proceeding.

2  Cannot_create_ECH_ECHAR

 This error should not occur.

2  Cannot_create_ECH_FTRDB

 The specified file cannot be found and its automatic creation is
 illegal using the selected option.

 Please use the special task ech_ftrdb to perform arc line database
 creation.  This process should normally be left to the node manager
 who should place the database files in a commonly accessible
 directory (usually the same place as the .ARC files).

 If you wish to create a private database for your personally
 specified line list then use task ech_ftrdb to do so.  If you are
 not trying to create a private database then the most likely
 problem is that the environment variable $ARCDIRS has not been used
 to prefix the arc database name (e.g. $ARCDIRS/THAR), or that the
 named arc database does not exist (ask the system manager).

 If you wish to include a set of personally specified line list
 databases in the default search paths used by ECHOMOP, then their
 location should be added to the list held in $ARCDIRS.  The list of
 locations is searched in order of their appearance in the
 environment variable.  The default search path is:

    .                the current directory

    ADAM_USER        users ADAM specific directory

    ECHOMOP_EXEC     ECHOMOP base directory

2  Cannot_create_ECH_RDCTN

 The reduction database can not be created at this stage.

 Use echmenu Option 1 (ECH_LOCATE),  or the task ech_locate,   as the
 first reduction operation.  These ensure that the reduction database
 used by all other tasks and options is created and initialised corr-
 ectly.

2  Cannot_create_ECH_RDUCD

 This error should not occur.

2  Cannot_create_here

 The program was unable to create a reduction database as
 specified.

 The most probable causes of this are that: the target directory
 does not exist,  or the target  directory is  protected against
 write access.

 Use "ls" to check for each of these conditions:

    % ls

 to verify that the target directory exists, and

    % ls -alF ../name-of-directory

 to see what access rights you have.

 If you own the  directory in which file creation was  attempted
 and  have the required  access rights  then  the  most probable
 causes are either that you have run out of disk space or filled
 your allocation of disk space.

 Use "df" to check how much of the target disk is unused:

    % df

 and "quota" to  check that you have not used up your allocation

    % quota

 You may find that  the "quota" command is not available in your
 path: ask your system manager if you are uncertain how to check
 your own disk quotas.

2  Cannot_create_object

 The program is  attempting to create  an object  in a reduction
 database and the underlying file  access routines have reported
 a problem.

 The most probable causes of this are:

    - the target directory is protected against write access

    - you have run out of disk space (disk full)

    - you have filled your allocation of disk space

 Use "ls" to see what access rights you have to the database:

    % ls -alF /name/of/directory/reduction-database

 Use "df" to check how much of the target disk is unused:

    % df

 and "quota"  to check that you have not used up your allocation

    % quota

 You may find that the "quota" command  is not available in your
 path: ask your system manager if you are uncertain how to check
 your own disk quotas.

 The most likely cause of this problem is lack of disk space. In
 particular,  the  sky and  flat-field models create  very large
 array objects.

2  Corrupt_db

 A 'read' operation on the arc line database has failed.  The most
 likely cause is that an inadvertent database creation has been
 performed which has resulted in an incomplete copy of the database.
 Check the database files using

    hdstrace -arc-list-type-

 and delete any files which produce errors.  You may have to
 regenerate the database or copy it from the $ARCDIRS directory.

2  Dimension_conflict

 An attempt  has been made to access a reduction object using
 dimensions different  from those  operative  at the  time of
 its creation.

 This will often be due to the alteration of a parameter used
 to specify the dimension, or due to a  change in  wavelength
 scale during scrunching  (which changes dimensioning objects
 NX_REBIN and NO_OF_BINS). The name of the parameter is shown
 along with its previous and current value.

 If a tuning parameter is involved then there are two courses
 of action available.  The first option is to reset the para-
 meter to its previous value and continue with the reduction.
 The second option is to delete the object from the reduction
 database, and re-create it using the new parameter value, by
 invoking the relevant  processing options.  The program will
 prompt asking which course of action is required.  It should
 be noted that in some cases deletion an object may force you
 to re-run an earlier option in order to re-create the object
 and re-calculate its contents.  If this is the case, ECHOMOP
 will inform you which step needs repeating.

2  Feature_list_too_small

 The package uses a special arc line information database to
 optimise its search algorithm.  This algorithm requires sets of
 about 12 lines with which to work.  The database consists of lines
 and their 10 nearest neighbours on each side (left and right).

 The arc line list supplied (.ARC file) does not contain sufficient
 lines for the database to be useful.  Either more lines must be
 added to the list, or another program (such as ECHARC) must be used
 for the line identification phase.  It is permissible to add dummy
 entries to the line list just to overcome this limitation, however,
 in this case it is unlikely that automatic identification will work
 and the program will probably need to be run interactively.

2  Lost_left_trace

 The program has failed to trace the order outwards from the centre
 of the frame towards the left-hand side (decreasing X).

 If tracing is being attempted using a cosmic-ray-contaminated frame
 then the ech_decos1 option/task should be used to clean the frame
 prior to tracing.

 The parameter TUNE_MXBADSMP sets the maximum number of failed
 samples allowed before the trace is deemed 'lost'.

 The parameter TUNE_MXSMP determines the number of samples across
 the frame and thus their separation.  In general, increasing
 TUNE_MXSMP will assist the program in tracing difficult orders.

 Experimenting with the various modes of tracing set by the parameter
 TRACE_MODE should allow most cases to be traced.

 As a last resort, the program also provides a manual trace mode in
 which points specified using a graphics cursor can be used as the
 basis for the tracing process.

2  Lost_right_trace

 The program has failed to trace the order outwards from the centre
 of the frame towards the right-hand side (increasing X).

 If tracing is being attempted using a cosmic-ray-contaminated frame
 then the ech_decos1 option/task should be used to clean the frame
 prior to tracing.

 The parameter TUNE_MXBADSMP sets the maximum number of failed
 samples allowed before the trace is deemed 'lost'.

 The parameter TUNE_MXSMP determines the number of samples across
 the frame and thus their separation.  In general, increasing
 TUNE_MXSMP will assist the program in tracing difficult orders.

 Experimenting with the various modes of tracing set by the parameter
 TRACE_MODE should allow most cases to be traced.

 As a last resort, the program also provides a manual trace mode in
 which points specified using a graphics cursor can be used as the
 basis for the tracing process.

2  Needs_rotating

 A data frame has been specified whose dimensions are orthogonal
 to those of an already-processed frame in this reduction.

 The most  likely cause is that one of the frames is rotated and
 the other not.   The required frame geometry for the package is
 to have the dispersion axis  aligned with  the frame horizontal
 (X-axis).   The solution to the  problem is  to ensure that all
 frames are consistent and then re-start the reduction.   In the
 case  that the  first frame  specified needs to be rotated then
 the  reduction process must be  re-started from  the  beginning
 using  a new  reduction database  (delete the current reduction
 database).  In the case that that the first frame specified was
 alright,  then simply correcting the other frame and continuing
 with the reduction will suffice.

2 No_cloneable_object

 The  program is unable to copy  reduction database objects from
 the specified reduction database.

 The possible causes are that:  the object does not exist in the
 reduction database given  (either using  TUNE_CLONE or  the '<'
 indirection operator in echmenu), or that the object is  dimen-
 sioned differently from the corresponding object in the primary
 reduction  database.  Objects  can  only  be copied  when their
 dimensionalities are identical (i.e., they have the same number
 of X-pixels, number of orders etc.)

 To check  the dimensions of the object you are trying to clone,
 use the hdstrace command and the object path as reported by the
 program.  If the only dimensions which differ are controlled by
 TUNE_ parameters, then you may adjust the relevant parameter to
 allow the  object to be successfully copied  (Note that this in
 turn  may necessitate  re-running parts of the reduction to re-
 generate other  objects also dimensioned using the same  tuning
 parameter).

2  No_orders

 The task has been unable to find any orders in the frame supplied.

 The most likely cause is that the frame has been incorrectly
 specified and contains no orders.  Another possibility is that the
 frame has the wrong orientation (orders long axis not horizontal)
 although at least one order would usually be 'found' in such a
 case.  If the frame is correctly specified and orientated then
 possible causes are as follows:

 - Cosmic ray noise;
   use the ech_decos1 option to clean the cosmic rays before
   re-trying order location.

 - Very poor S/N data;
   set the parameter TUNE_AUTLOC=Y to specify the positions of
   the orders manually using a graphics cursor.

2  No_trace_width

 The program failed to determine the width of the order traces.

 The algorithm for this process requires that the intensity falls to
 less than the fraction TUNE_TWTHR of the intensity at the peak.

 The parameter may be adjusted (probably increasing it), or specified
 directly using the FIGARO command

    SETOBJ object=-rdctn-file-.MORE.ECHELLE.TRACE_WIDTH value=nn

 where nn is the approximate width in pixels.

2  No_update_access

 The program is unable to obtain update access to an array.

 This may be either a DATA, QUALITY or ERROR array; and the most most
 probable cause is that the file containing the array is protected
 against write access in some way.  If the file is not 'owned' by
 you, and in your directory, then it is usually easiest to copy it
 into a directory to which you have full access rights.

2  Not_a_reduction_format

 The specified file exists but is not a reduction database defined
 by ECHOMOP.   The most probable  cause is that  a data frame file
 name has been provided by mistake.

 The  reduction database  must be created before the reduction can
 proceed.  The option/task ECH_CHECK_FRAME/ECH_LOCATE is currently
 the only task available to create a reduction database.

2 Read-Only_RDCTN_file

 The program  is unable to obtain  update access to an object in
 the reduction database.

 This is probably  because the  file is  protected against write
 access.  Do an

    % ls -alF reduction-database.sdf

 to check the file protection mask.

 The program will continue,  but note that it will  be unable to
 write the results  of the current  step back into the reduction
 database.  You might want to copy the file to a directory where
 you have full access before proceeding.

2  Untraceable

 The program could not trace the order at all.

 Check that:

  o the correct frame is being traced.

  o the frame is oriented so that the orders run with the dispersion
    direction parallel to the X-axis of the frame.

 If tracing is being attempted using a cosmic-ray-contaminated frame
 then try using the option/task ech_decos1 to clean the frame prior
 to tracing.

 The parameter TUNE_MXSMP determines the number of sampled increments
 across the frame and thus their separation.  In general, increasing
 TUNE_MXSMP will assist the program in tracing difficult orders.
 It is worth experimenting with the various modes of tracing (set by
 the TRACE_MODE parameter).  Usually, at least one of the available
 options will handle difficult or unusual cases.

 As a last resort a manual-trace mode, in which points specified using
 a graphics cursor are used as the basis for the tracing process,
 is available.

2  Vmem_exhausted

 The program has run out of virtual memory space.

 In some cases erroneous setting of some of the TUNE_ parameters can
 lead to virtual memory exhaustion.  To check if this is the problem,
 use a second process to run "top" whilst repeating the commands
 which led to the problem.  The size of virtual memory used by the
 process is shown on the display and the exact point at which it
 exceeds its limiting value determined.

 In many cases the problem may be solved by re-starting the program,
 but frequent occurrences should be investigated as described above.

 A diagnostic listing is also produced which specifies the current
 state of allocated memory.  This listing is saved in
 ECH_MEM_USAGE.DMP and should be kept for examination by the package
 maintainer in difficult cases.

2  Vmem_release

 The program has been unable to release allocated memory correctly.

 The most likely cause of this is attempting to continue processing
 after having run out of virtual memory (Vmem_exhausted).  The only
 solution is to abort the package and re-start.

2  Wave-fit_deviations

 The fitted polynomial has been rejected due to an excessive RMS
 deviation measure.

 Usually the rejection will be valid and the program will proceed
 to locate a better set of identifications.  However, if looking at
 the other orders it is determined that this identifications was
 likely to be correct for the order, then ech_idwave should be used
 in manual mode.  Specifying an appropriate search range for the
 order and using the AI option will let the program relocate the set
 of identifications it rejected when running automatically.  The set
 can then be accepted and interactively improved by adding or
 removing individual line identifications.

2  Wave-fit_start/end

 The automated polynomial fit in wavelength has generated a
 wavelength range which is inconsistent with the expected scope of
 wavelengths (either as specified by the user, or as calculated from
 previously identified orders).

 The user should investigate the identification of this order manually
 to verify the situation.  In most such cases allowing a larger search
 scope for the order and/or manually rejecting the incorrect
 identification using the AI option in ech_idwave will lead to a more
 favorable identification.

1  Input_data_files

 ECHOMOP performs most of its data access using Starlink subroutine
 libraries.  All data frames are assumed to be contained in Starlink- 
 standard files, or files automatically accessible via the CONVERT
 utility.

 A few ASCII format files are also read by the package:

    o /arctype/.ARC - Line list files are stored in ASCII format
      for ease of maintenance.  ECHOMOP reads the line list(s) and
      creates its own proprietary file format.

    o ECHARC.LIS - A list of identified features and their
      properties.  Used for data exchange with the ECHARC program.

 A few container files are also read by the package:

    o /name/.sdf - These Feature databases are created by ECHOMOP
      using the arc line lists as input.  A feature database
      describes the relationship of each feature (arc line) to its
      nearest neighbours and is used in automatic identification.
2  Arc_line_lists

 Line list files are stored in ASCII format for ease of maintenance.
 ECHOMOP reads the line list(s) and creates its own proprietary file
 format.  Line-list filenames are expected to have the extension
 .ARC and are searched for in the standard FIGARO search paths.

 The format of arc line lists is as follows

    ! comment lines start with a !

    nnnn.mmm   iii.jj    text

    nnnn.mmm   iii.jj    text

    nnnn.mmm   iii.jj    text

 where

    nnnn.mmm   is a wavelength in Angstroms
    iii.jj     is an (optional) intensity estimate
    text       is a description of the line e.g. Th II

 In addition, a special comment line is recognised which allows the
 units of wavelength to be specified:

    !WAVELENGTH_UNITS=some-unit=specifier

 The default units are Angstroms and the package does not use the
 units string except for output messages.

 User-created lists should be placed in the directory pointed
 to by the environment variable $ADAM_USER.

2  Calibration_tables

 No information is currently available.

2  Data_frame_format

 The input data frames should be stored in  the Starlink Extens-
 ible N-Dimensional Data Format  (NDF), or in  files  accessible
 via the CONVERT package.

2  Definition_file

 Definition files  are used by  ECHOMOP to specify the structure
 of the files used to store objects produced during a reduction.

 Each of these objects is referred to internally via a reference
 name.  The definition file contains translations of these names
 into actual path specifications within the database.

 For instance; the object referred to as OBS_LINES internally is
 actually stored in the reduction database in the object:

    MORE.ECHELLE.WAVE_FIT_1D.OBS_LINES[TUNE_MXRFLN,NUM_ORDERS]

 All such objects  can be moved within the reduction database by
 altering their specified paths.

 The default paths are likely to be adequate for most cases.

 For more information see 'Redefining Object paths'.

2  Flux_calibration_frames

 If flux calibration is to be done then the calibration frame must
 be presented in a data file in the same form as the data frame.

 ECHOMOP presently insists that all frames are of the same X- and
 Y-dimensions (a pretty safe bet).  Care should be taken to ensure
 the correct extraction of the calibration frame.  For example,
 a different CCD bias voltage may have been used to that which used
 for the object data frame, etc.

 Flux calibration is not usually performed on the very-high-resolution
 spectra produced by UCLES.  This is due in the main to the lack of
 suitable reference tables.  As more UCLES data become available this
 situation should improve.

2  Multiple_arc_frames

 Multiple arc lamp images are usually taken to monitor any
 possible shift in the object spectrum which may have occurred
 during the exposure.

 When no shift is evident then the simplest course is to add the
 two arc frames together and provide the result to the ECHOMOP
 package whenever it prompts for the arc frame name.

 When a shift can be discerned you must decide whether meaningful
 wavelength calibration can still be applied.  If so, then there
 are two courses of action available:

  - Add the two frames together as usual, providing a single
    image for calibration, albeit with degraded resolution.
    This permits an estimate of the resolution in the final
    spectrum because the arc frame is extracted in an
    identical manner to the object, and the resolution
    observed directly.

  - Calibrate each arc frame separately and interpolate
    between the wavelengths (possibly taking into account
    time elapsed between arc1 - object - arc2).  This
    technique allows the calibration to proceed even when
    a gross shift has taken place, but you should be cautious
    about the resulting wavelength scale unless independent
    confirmation can be obtained from features in the object
    spectrum itself.

2  Multiple_object_frames

 ECHOMOP is  primarily designed  for processing  of single-frame
 observations.   There are facilities  contained in the Starlink
 Software  Collection for the  combination of  multiple  spectra
 produced by the reduction of a set of data frames. ECHOMOP does
 provide  assistance where the data  frames are well registered,
 removing  the need for  steps such as order location,  tracing,
 and  profiling to be done  for each frame.   The 'clone' option
 allows the  selective copying of  parts of a previously-created
 reduction database,  which  then becomes  the reference for the
 reduction of another frame. Optionally, the definition file can
 be altered to permit the extension of the reduction database to
 include multiple spectra from a single source  (See 'Redefining
 Object paths' for an example of this).

2  Reduction_database

 The  reduction database is a Starlink-standard format file used
 to hold objects produced during the steps of the reduction. For
 example, a list of order locations, wavelength polynomial fits,
 etc.

 The  file is created at the outset of a reduction cycle  with a
 user-provided name, and grows  in size  until  the reduction is
 complete. At this point it contains a fairly complete record of
 any  intermediate results, thus allowing particular sections of
 a reduction to be tuned and repeated as required.

 Usually it will not be necessary to access the file  except via
 ECHOMOP commands. The package provides facilities for examining
 and plotting data from all the objects in the file.

 The  reduction database also contains objects which  record all
 major processing decisions taken, and the data frames involved.
 Options  are provided to reduce the size of reduction databases
 once a reduction is complete.

2  Saving_disk_space

 ECHOMOP makes substantial use of disk space throughout the
 reduction process.  This is due to the intermediate storage of
 information in the reduction database.  Much of the information
 stored is on a per-order basis.  For data frames with many orders
 the disk usage may be substantially reduced by the following:

    % cp $ECHOMOP_SOURCE/ECH_COMPACT.DEF $ADAM_USER/ECH_RDCTN.DEF

    % source $ECHOMOP_SOURCE/echomop_setup

 this must be done before any reductions are embarked upon as it
 will not save any space retroactively on work already in progress.

 NOTE: When this procedure is used, it is essential to ensure that
 the per-order mode of operation is used and that the orders are
 fully processed one-by-one, i.e., flat-field, model sky, extract,
 and save result for order 1, then for order 2 etc.  This is because
 the compact version only stores reduction arrays for the last
 processed order.  Thus flat-field modelling order 3 and then order 4
 would cause the calculated model for order 3 to be overwritten by
 the one for order 4.

1  Output_files

   The various output files created during a reduction are described.
2  Output_spectra

 The reduced spectra may be output in various ways:

    - A graphics plot file for printing.
    - An file containing a single-order spectrum.
    - An file containing one spectrum per order.
    - An file containing a merged spectrum.
    - An ASCII file listing data pairs of wavelength vs flux.

2  Reduction_database

 The  reduction database is a Starlink-standard format file used
 to hold objects produced during the steps of the reduction. For
 example, a list of order locations, wavelength polynomial fits,
 etc.

 The  file is created at the outset of a reduction cycle  with a
 user-provided name, and grows  in size  until  the reduction is
 complete. At this point it contains a fairly complete record of
 any  intermediate results, thus allowing particular sections of
 a reduction to be tuned and repeated as required.

 Usually it will not be necessary to access the file  except via
 ECHOMOP commands. The package provides facilities for examining
 and plotting data from all the objects in the file.

 The  reduction database also contains objects which  record all
 major processing decisions taken, and the data frames involved.
 Options  are provided to reduce the size of reduction databases
 once a reduction is complete.

2  Event_log

 NOT IMPLEMENTED (except diagnostics).

 Although the major characteristics of a reduction are  recorded
 in the reduction database, it may also be useful to have a text
 record of the detailed sequence of  events.  The event log file
 serves this purpose.  The level of detail with which events are
 logged can be adjusted to taste using the following parameters.
 The available classes are:

    - TUNE_DIAGNOSE, used when a bug is suspected to log data of
      potential use to the maintainer of the package.

    - FULL,  comprehensive event/problem/tuning/result/parameter
      logging.  All categories except DIAGNOSTIC.

    - INTERACTIVE, all user input and task (to screen) output.

    - PROBLEM, all problem reports and the users choices.

    - TUNING, all performance/parameter tuning information.

    - PARAMETERS, values of all active parameters.

    - BRIEF, only major data such as data frame file names are
      logged.

    - NONE, no log file is produced.  This  option should not be
      used in normal circumstances.

 Logged messages consist of  type tags  followed  by a variable-
 length message text.  They may be examined using any text
 editor.

2  Diagnostics_log

 Activating the diagnostics class of event logging (See 'Event log')
 causes ECHOMOP to produce a very detailed trace of the operations
 performed during the reduction.  This slows the reduction down
 substantially and may also occupy a fair amount of disk space.
 Diagnostics should therefore only be enabled when a problem with
 the software is suspected (or it crashes).

 To create a diagnostics event log, set TUNE_DIAGNOSE=YES, then
 repeat the operations which led to the problem or crash.

 You should then report the problem to starlink@jiscmail.ac.uk.

2  Arc_line_lists

 Line list files are stored in ASCII format for ease of maintenance.
 ECHOMOP reads the line list(s) and creates its own proprietary file
 format.  Line-list filenames are expected to have the extension
 .ARC and are searched for in the standard FIGARO search paths.

 The format of arc line lists is as follows

    ! comment lines start with a !

    nnnn.mmm   iii.jj    text

    nnnn.mmm   iii.jj    text

    nnnn.mmm   iii.jj    text

 where

    nnnn.mmm   is a wavelength in Angstroms
    iii.jj     is an (optional) intensity estimate
    text       is a description of the line e.g. Th II

 In addition, a special comment line is recognised which allows the
 units of wavelength to be specified:

    !WAVELENGTH_UNITS=some-unit=specifier

 The default units are Angstroms and the package does not use the
 units string except for output messages.

 User-created lists should be placed in the directory pointed
 to by the environment variable $ADAM_USER.

1  User_parameters

2  2D_INTERACT=_LOGICAL

 Set for interactive control of 2-D polynomial fitting of
 distortion corrections.

 Polynomials are fitted in two perpendicular directions (rows and
 columns) and generate the point-to-point predicted deviation from
 wavelength fit for each pixel centre.  Interactive operation allows
 viewing of an exaggerated version of the fitted points, and
 selective clipping of points on the basis of their deviations from
 the fit.

2  ARC=_CHAR

 The names of all reference images to be used for wavelength
 calibration.

 The number of supplied images should be the same as the value of
 NREF_FRAME.  The image names should be separated by commas,
 for example:

    reffrm1,reffrm2

 Note that in most circumstances there will only be one or possibly
 two reference frames.

 If you do not wish to provide an arc frame at all then you may reply
 NONE in response to this prompt or, alternatively, set the parameter
 TUNE_NOARC=YES.

 If no arc is available ECHOMOP can not currently be used to build
 wavelength scales and they must be provided by other means if
 required.

2  ARC_TYPE=_CHAR

 The arc lamp type specifies the name of a file of extension .ARC
 containing the list of known reference features.

 In addition, a similarly named line database file is required,
 which will usually be located in $ARCDIRS/<name>.

2  AUTO=_LOGICAL

 If AUTO=TRUE then ECHOMOP will use all the options available
 to automate the processes it invokes.  Currently the following
 parameters will be affected:

    - TRC_INTERACT     set to NO

    - TRC_VETO         set to NO

    - ID_INTERACTIVE   set to NO

    - CR_INTER         set to NO

    - 2D_INTERACT      set to NO

    - PFL_INTERACT     set to NO

2  AUTO_ID=_LOGICAL

 Specifies that automation is required when arc line identification
 is being done.

 Interactively, options are available to tune the fitted wavelength
 polynomial, add and delete features etc.

 If AUTO_ID is TRUE then the package will try to identify the arc line
 features automatically.  For orders with sufficient features
 (>12 lines) this will usually be successful.

 A useful strategy is often to do an automatic run first, then
 manually examine the fitted features to verify their suitability.

2  BAD_ORDER=_INTEGER

 Specifies an order which is to be disabled from further processing.

 The default value is zero which is ignored, in case of a mistake.

 Orders are disabled by writing the 'bad value' quantity into the
 first coefficient of the trace polynomial.  This ensures that they
 also appear disabled to other tasks (almost all of which will need
 the trace polynomials).

 To re-enable an order, re-fit a polynomial to its traced path, using
 the task ech_fitord/echmenu option 3.

2  BIN_SIZE=_REAL

 Specifies the bin size in wavelength units.

 This bin size is only used when scrunching to a global wavelength
 scale.  By default, the program will calculate an appropriate bin
 size for you, but this parameter allows you to override this by
 supplying a non-zero value.

 INITIAL SUGGESTED VALUE: 0.0.

2  BLZFIT=_CHAR

 This parameter selects the type of line fit for blaze function
 fitting.

 The available functions are POLY (the default), MEDIAN and SPLINE.

 Note that the required maximum number of coefficients is different
 in each case.  For POLY the maximum number of coefficients corres-
 ponds to the number of degrees plus one, so for a cubic use coeffs=4.
 For a SPLINE the maximum number of coefficients corresponds to
 (knots+7)*2, so for 3 knots use coeffs=20.  If you are using SPLINE
 fits then you should ensure that the value of TUNE_MAXPOLY is set
 accordingly, as well as using an appropriate value for BLZ_NPOLY.

 When MEDIAN is selected local medians of X-extent BLZ_NPOLY
 pixels are used as the blaze function.

 INITIAL SUGGESTED VALUE: POLY.

2  BLZ_INTERACT=_LOGICAL

 Set TRUE if blaze fitting is to be done interactively.
 Automatic fitting is performed otherwise.

 INITIAL SUGGESTED VALUE: NO.

2  BLZ_NPOLY=_INTEGER

 The default number of coefficients to be used when fitting functions
 to the order blaze.

 The type of function to be used is set using the parameter BLZFIT
 (default is POLY for polynomial).

 When BLZFIT=POLY then the number of coefficients should be set to
 degree of polynomial + 1.

 When BLZFIT=SPLINE the number of coefficients should be set to
 (number of knots + 7) * 2.

 When BLZFIT=MEDIAN the number of coefficients should be set to the
 number of pixels over which a local median value of the blaze function
 is to be found.

 For example, setting BLZ_NPOLY to 4 would permit the fitting of
 polynomials of the form:

    constant + a.x + b.x-squared + c.x-cubed

 INITIAL SUGGESTED VALUE: 7.

2  CENTRAL_ONUM=_INTEGER

 The number of the central order in an echelle frame.

 Often this can be determined by inspecting the FITS headers for
 one  or other of the input data frames,  or, by looking  at the
 manual for the instrument used to  take the data.  If the value
 is not known it can be left at zero.

 The value is used in conjunction with the central wavelength to
 estimate the wavelength  range covered  in an echelle spectrum.

 Default value: 0.

2 CENTRAL_WAVE=_REAL

 The central wavelength in an echelle frame.

 Often this can be determined by inspecting the FITS headers for
 one  or other of the input data frames,  or, by looking  at the
 manual for the instrument used to  take the data.  If the value
 is not known it can be left at zero.

 The value is used in  conjunction with the central order number
 to estimate the wavelength range covered by the spectrum.

 Default value: 0.0.

2  CR_OUTPUT=_CHAR

 The name of the output image containing a copy of the original
 with suspected cosmic-ray pixels replaced either by interpolation,
 or by flag values.

2  DECIMG=_CHAR

 The name of the raw image in which cosmic-ray-pixel detection is to
 be performed.

 Pixels may be either replaced with an interpolated value, or by a
 flag value.

2  DISPLAY=_LOGICAL

 If DISPLAY=YES is used, then an imaging device is assumed to be
 available and some programs in the package will overlay plots on
 the image to help illustrate their results.

 For example, the paths of the orders as fitted with polynomials will
 be overlaid on a part of the traced image.

 INITIAL SUGGESTED VALUE: NO.

2  ECH_ECHAR=_CHAR

 The name of the file to use to exchange data with the ECHARC
 program.

2  ECH_FTRDB=_CHAR

 The name of the file containing the reference line list database.

 The database is built from a .ARC file using the task ech_ftrdb.

 The database should have the same file name as the .ARC file used
 for its creation.  The default is to use $ARCDIRS/THAR.  Note the use
 of the $ARCDIRS environment variable to specify the search path for
 arc databases.  This should normally be used as it searches in the
 normal FIGARO order.  If you wish to specify a private database then
 the full pathname may be provided, e.g., /mydisk/mydir/sub/ANARC.

 If no arc database exists for the .ARC list you want to use then
 use the ech_ftrdb task to create a copy.  You might like to check
 to see if anyone local already has the database you need.

 INITIAL SUGGESTED VALUE: '$ARCDIRS/THAR'.

2  ECH_RDCTN=_CHAR

 The name of the database created to hold the data reduction history.

 This file will normally be created by the first ECHOMOP task run.

 By default the file is created in the current directory.

2  ECH_RDUCD=_CHAR

 The name of the file to save data to.

2  ECH_STRUCT=_CHAR

 The name of the file containing the structure definition used to
 create a reduction database.

2  EXTRACT_MODE=_CHAR

 The type of extraction to perform.

 This may be one of the following:

    O - Optimal (default).
    S - Simple.
    P - Profile weighted.

2  FFIELD=_CHAR

 The name of the flat-field frame.

 The package uses this frame to calculate balance factors on a
 per-pixel basis.  If a balance frame is already available, then the
 frame should be supplied instead of a flat field, and the parameter
 TUNE_PREBAL should be set TRUE.

 If you do not wish to supply a flat field at all, then you may
 either reply NONE to this prompt (must be upper case) or set the
 parameter TUNE_NOFLAT=YES.

 If no flat-field frame is supplied then the balance factors will be
 set to unity for all pixels.

2  FLAG=_REAL

 If interpolation is not required, the suspected cosmic ray pixels
 will be replaced using the supplied flag value.

2  FLTFIT=_CHAR

 The type of fit to be used for flat-field modelling.

 The available functions are MEAN (the default), POLY, SPLINE, MEDIAN,
 SLOPE and SMOOTH.

 All modes except POLY and SPLINE use local neighbourhoods delineated
 using a sample size (in pixels) defined by TUNE_FFLSMP.

 Note that the required maximum number of coefficients for POLY and
 SPLINE are different.  For POLY, the maximum number of coefficients
 corresponds to the number of degrees plus one, so for a cubic use
 coeffs=4.  For a SPLINE the maximum number of coefficients corresponds
 to (knots+7)*2, so for 3 knots use coeffs=20.  If you are using SPLINE
 fits then you should ensure that the value of TUNE_MAXPOLY is set
 accordingly, as well as using an appropriate value for TUNE_FFNXPLY
 and/or TUNE_FFNYPLY.

 INITIAL SUGGESTED VALUE: MEAN.

2  FRAME_CHECK=_LOGICAL

 Set FRAME_CHECK=TRUE if the processed frames are to be checked for bad
 row/columns.

 The trace frame is used and the other frames are assumed to have
 identical bad rows/columns features.

2  HARD=_CHAR

 If a value for HARD is specified, the plot is written to a file
 in the format defined by the HARD parameter.

 For example, ps_l would generate Landscape format PostScript files.

2  HELIO_COR=_REAL

 The heliocentric correction is applied to the output wavelength
 scale of any of the results files.

 INITIAL SUGGESTED VALUE: 0.0.

2  HI_WAVE=_REAL

 The longest wavelength which you expect to be present in the spectrum.

 The identification of lines proceeds faster for smaller search
 ranges, so specify a smaller, rather than an arbitrarily large, value
 if you are guessing a value for HI_WAVE.

 The units in which the wavelength is expressed must be the same as
 those used in the .ARC line list file, normally Angstroms.

2  IDX_NREF_FRAME=_INTEGER

 Specifies the number of the frame to be processed.

 IDX_ parameters provide  a method of indexing reduction database
 arrays by order number and frame number.

 A  non-zero value for  IDX_NREF_FRAME causes  processing  of the
 selected frame only.

 IDX_NREF_FRAME=0 causes automatic looping through all values for
 the 'index', i.e., processing of all arc frames.

<H3>IDX_NUM_ORDERS=_INTEGER</H3>
2  IDX_NUM_ORDERS=_INTEGER

 Specifies which order is to be processed.

 The 'IDX_'  parameters provide a method of indexing reduction
 database arrays by order number and frame number.

 A non-zero value for IDX_NREF_ORDERS causes processing of the
 selected order only.

 IDX_NREF_ORDERS=0 causes automatic looping through all values
 for the 'index', i.e., processing of all orders.

<H3>ID_INTERACTIVE=_LOGICAL</H3>
2  ID_INTERACTIVE=_LOGICAL

 Specifies that interactive arc line identification is required.

 Many options are available in this mode to allow the tuning of
 the fitted wavelength polynomial, addition and deletion of features
 etc.

 If ID_INTERACTIVE is FALSE then the ECHOMOP will try to identify
 arc line features automatically.  For orders with enough features
 (>12 lines) this will usually be successful.

 A useful strategy is often to do an automatic run first, and then
 manually examine the fitted features to verify their suitability.

2  INDIRECT=_CHAR

 Internal parameter used to indirect reduction objects to be copied
 from other  reduction databases  instead of being calculated  (the
 < function in ECHOMOP).

2  INPTIM=_CHAR

 The name of the file holding the frame to be extracted.

 This will usually be the Object frame, however, the Standard-Star
 frame may also be extracted.  In cases where there are multiple
 frames of the same Object, then they may each be extracted by
 re-running this task and specifying a different frame each time
 (assuming the multiple data frames are perfectly registered).

2  LOW_WAVE=_REAL

 The shortest wavelength which you expect to be present in the spectrum.

 The identification of lines proceeds faster for smaller search
 ranges, so specify a larger, rather than an arbitrarily small, value
 if you are guessing a value for LOW_WAVE.

 The units in which the wavelength is expressed must be the same as
 those used in the .ARC line list file, normally Angstroms.

2  MAX_DISPERSION=_REAL

 The maximum dispersion to be searched by the automatic line
 identifier.  Specified in unit-per-pixel.

 Care should be taken to ensure that the specified dispersion range 
 is sufficiently wide.  If in doubt use a wider range than is probably 
 needed.  For example, if the actual dispersion is expected to be about 
 0.5, then a range specified by MIN_DISPERSION=0.2, MAX_DISPERSION=0.8 
 would be appropriate, whereas a range of 0.4 to 0.6 could possibly be 
 too restrictive.

 The normal wavelength units will be Angstroms, but alternative units may 
 be used by providing an appropriate .ARC line list.

2  MIN_DISPERSION=_REAL

 The minimum dispersion to be searched by the automatic line
 identifier.  Specified in unit-per-pixel.

 Care should be taken to ensure that the specified dispersion range 
 is sufficiently wide.  If in doubt use a wider range than is probably 
 needed.  For example, if the actual dispersion is expected to be about 
 0.5, then a range specified by MIN_DISPERSION=0.2, MAX_DISPERSION=0.8 
 would be appropriate, whereas a range of 0.4 to 0.6 could possibly be 
 too restrictive.

 The normal wavelength units will be Angstroms, but alternative units may 
 be used by providing an appropriate .ARC line list.

2  NREF_FRAME=_INTEGER

 The number of wavelength reference frames to be used.

 These will usually be arc spectra.  The default is a single frame,
 but it is possible to use two frames which bracket the object
 exposure in time.  In this case it is assumed that the shift
 between exposures has been due to smooth variation, an assumption
 which it is usually not possible to verify.

 Note: the names of all frames must be supplied in response to the
 arc prompt when locating the reference features.  For example:

    ARC=<frame1>,<frame2>

2  NUM_ORDERS=_INTEGER

 Specifies the number of orders present in the frames to be reduced.

2  OBJFIT=_CHAR

 This parameter selects the type of curve fit for object profiling.

 The available functions are POLY (the default) and SPLINE.

 Note that the required maximum number of coefficients is different
 in each case.  For POLY the maximum number of coefficients corres-
 ponds to the number of degrees plus one, so for a cubic use coeffs=4.
 For a SPLINE the maximum number of coefficients corresponds to
 (knots+7)*2, so for 3 knots use coeffs=20.  If you are using SPLINE
 fits then you should ensure that the value of TUNE_MAXPOLY is set
 accordingly, as well as using an appropriate value for TRC_NPOLY.

 INITIAL SUGGESTED VALUE: POLY.

2  OBJ_SKY_GAP=_INTEGER

 There is no information on this parameter available at this time.
2  OUTPUT_IMAGE=_CHAR

 Specifies an output frame (container file name).  The frame will
 contain a full 2-D image array and associated errors if
 appropriate.

2  PFL_INTERACT=_LOGICAL

 PFL_INTERACT=TRUE selects interactive control of profiling tasks.

 When interactive profiling is selected, a graphics cursor can be used
 to specify the required attributes of each pixel in the spatial
 profile.  The characteristics may be globally applicable, or
 specified independently for each order.  In addition, any polynomial
 profile-fitting is also performed interactively, with the degree of
 polynomials used adjustable and the fits and residuals at each
 sub-sample position viewable.

2  PFL_MODE=_CHAR

 The profiling mode used to specify which profiles are to be
 calculated/edited.

 The options are:

    D  -  Calculate/edit Dekker limits.
    O  -  Calculate/edit Object profile.
    S  -  Calculate Flux standard profile.
    A  -  All, do each of the above in turn.

 Normally this parameter would be set to A, and the program run
 automatically.  The profile and calculated limits examined as the
 program ran, and then re-run interactively with one of the above
 options.

2  PHOTON_TO_ADU=_REAL

 The number of incident photons corresponding to each count
 recorded by the detector.

 Some detectors produce many electrons (counts) for each incident
 photon, or alternatively, one count for many photons.  In order to
 be able to calculate using photon events it is necessary to take
 account of this factor.  The PHOTON_TO_ADU parameter should be set
 appropriately.

2  RBNOBJ=_CHAR

 The rebinned image is used to store the distortion-corrected version
 of the data.

 It is only needed in cases of severe geometric distortion and is
 organised such that pixel columns correspond to linear wavelength
 bins in a given order.

2  READOUT_NOISE=_REAL

 The detector readout noise in electrons (i.e., detected photons).

 Some electronic detectors produce a significant amount of noise
 during the readout process.  Older CCDs are often thus afflicted.
 If a non-zero value for READOUT_NOISE is supplied then it will
 be used to adjust the variances during extraction to take this
 error into account.

2  RESULT_FORMAT=_CHAR

 Selects the format of the output file.

 Options are:

   o NDF   - Output to the NDF specified by parameter ECH_RDCTN
   o ASCII - Output to the specified NDF and to the file specified
             by parameter ASCII_FILE
   o STACK - Output to the DIPSO stack specified by parameter STACK

2  RESULT_TYPE=_CHAR

 Selects the type of data to be saved.

 The following types are recognised:

  - EXTOBJ, the unscrunched extracted object orders.
  - EXTARC, the unscrunched extracted arc orders.
  - SCROBJ, the scrunched extracted object orders.
  - SCRARC, the scrunched extracted arc orders.
  - OSPECT, the merged object spectrum.

 The default is EXTOBJ.

2  SCRUNCH_TYPE=_CHAR

 The type of spectrum to be scrunched.

 This may be one of the following:

  - OBJ, the object.
  - STAR, the reference star.
  - ARC, the arc lamp.

2  SET_WSCALE=_LOGICAL

 This parameter determines the overall type of scrunching to use when
 scrunching extracted orders.

 Set TRUE if the current frame wavelength range is to be used (all
 orders) to generate a full range wavelength scale to scrunch into;
 i.e., all orders are scrunched into the same bin size, but the
 number of X-axis bins in each order will vary.

 Set FALSE if each order is to be scrunched to its own scale.
 This retains the X-dimension of the orders, but each order will be
 scrunched into a slightly different bin size.

2  SKYFIT=_CHAR

 The type of fit to be used for sky-background modelling.

 The available functions are MEAN (the default), POLY and SPLINE.

 Note that the required maximum number of coefficients for POLY and
 SPLINE are different.  For POLY, the maximum number of coefficients
 corresponds to the number of degrees plus one, so for a cubic use
 coeffs=4.  For a SPLINE the maximum number of coefficients corresponds
 to (knots+7)*2, so for 3 knots use coeffs=20.  If you are using SPLINE
 fits then you should ensure that the value of TUNE_MAXPOLY is set
 accordingly, as well as using an appropriate value for TUNE_SKYPOLY
 and/or TUNE_SKYXPLY.

 INITIAL SUGGESTED VALUE: MEAN.

2  SLITIM=_CHAR

 The frame to be used for determining the limits of the dekker.

 This should be a frame which clearly delineates the inter-order gap
 and the full extent of the slit.  In general the arc-lamp frame is
 used, but a flat-field frame may also work.

2  SOFT=_CHAR

 If SOFT is specified, the plot is written to the device defined as
 the current softcopy device.

2  STACK=_CHAR

 The name of the DIPSO stack to be produced.

 The '_STK.sdf' part of the filename should not be given.

 The default is ECHOMOP.

2  STAR=_CHAR

 The name of the image which contains the reference stellar spectrum.

 This is normally used for the initial order location and tracing,
 and then for flux calibration.

2  START_WAVE=_REAL

 This parameter is only used when a user-specified wavelength scale
 is being generated (BIN_SIZE>0).  It specifies the start wavelength
 for the rebinned wavelength scale.  

 The default is to calculate the start wavelength from the fitted 
 wavelength scale when this parameter has value zero or is not
 specified.

 INITIAL-SUGESTED-VALUE: 0.0.

2  TRACE_MODE=_CHAR

 The type of tracing method to be used.

 The following options are available:

  U - indicates user (ICUR) coords are supplied.
  R - selects re-tracing using old trace as baseline.
  T - indicates that a triangle filter is to be applied
      before centre location.
  A - indicates that in cases of failure, the program is to
      automatically fall-back to the next-least demanding
      centering mode.

 Plus one of the following mandatory selections:

  B - basic, simple-minded centre of gravity.
  E - locate profile edges and interpolate.
  C - find centroid of profile.
  G - fit a Gaussian across profile.

 For example:

  TAG  would fit Gaussians to triangle-filtered data and
       automatically fall-back to try centroiding for problem
       samples.

  B    would do simple centre-of-gravity calculations on the raw
       profile, with no automatic fallback being used.

 The default mode is C which provides a reasonable balance of
 probability-of-a-good-trace vs. time-taken.  The order of
 specification is significant and must obey the following rules:

  - Optional U or R followed by
  - Optional T and/or A followed by
  - One of B, E, C or G.

2  TRACIM=_CHAR

 The name of the file containing a frame to be used for the tracing of
 orders.

 Tracing may be attempted using a wide variety of data frame types.
 If the object frame has a good signal-to-noise ratio then this should
 be used.  In cases where the object is faint, or exhibits large-scale
 absorption features, then either the flat-field or flux-calibration
 reference frame should be used.

2  TRCFIT=_CHAR

 This parameter selects the type of line fit for order tracing.

 The available functions are POLY (the default) and SPLINE.

 Note that the required maximum number of coefficients is different
 in each case.  For POLY the maximum number of coefficients corres-
 ponds to the number of degrees plus one, so for a cubic use coeffs=4.
 For a SPLINE the maximum number of coefficients corresponds to
 (knots+7)*2, so for 3 knots use coeffs=20.  If you are using SPLINE
 fits then you should ensure that the value of TUNE_MAXPOLY is set
 accordingly, as well as using an appropriate value for TRC_NPOLY.

 INITIAL SUGGESTED VALUE: POLY.

2  TRC_INTERACT=_LOGICAL

 Determines whether order fitting/clipping is interactive.

 Set TRUE for interactive order fitting/clipping.

 If FALSE, order fitting/clipping proceeds automatically.  When 
 automatic fitting is engaged there are two parameters which 
 may be adjusted to optimise the performance of the program.
 These are: TUNE_CLPMXDEV, which defines the clipping point, and 
 TUNE_CLPBY, which is the number of points to clip in each iteration.

 The default value is TRUE.

2  TRC_NPOLY=_INTEGER

 The default number of coefficients to be used when fitting functions
 to the order trace.

 The type of function to be used is set by the parameter TRCFIT.
 (Default value is POLY for polynomial.)

 When TRCFIT=POLY then the number of coeffs should be set to degree
 of polynomial+1.

 When TRCFIT=SPLINE the number of coeffs should be set to (number
 of knots+7)*2.

 For example, setting TRC_NPOLY to 4 would permit the fitting of
 polynomials of the form:

    constant + a.x + b.x-squared + c.x-cubed

 INITIAL SUGGESTED VALUE: 4.

2  TRC_VETO=_LOGICAL

 Set to YES if the order consistency is to be checked interactively.
 Automatic checking is performed otherwise.

 When automatic checking is engaged there are two parameters which
 may be adjusted to optimise the performance of the program.

 These are TUNE_CLPMXDEV which defines the clipping point, and
 TUNE_CLPBY which is the number of points to clip in each iteration.

 When TRC_VETO is set, the option to reject a re-fitted order at
 each iteration is available.

 It is strongly recommended that this option is not used until you
 have a clear understanding of the algorithm used by the consistency
 checker, as it is possible to 'drive' the fit off by injudicious
 rejection of the re-fits proposed by the program.

1  Tuning_parameters


2  TUNE_AAACODE=_INTEGER

 Used only when  the program is  making use  of the  Astronomy &
 Astrophysics  Abstracts system  of information  categorisation.

 This scheme  consists of a  set of numbers  which correspond to
 topics  in Astronomy.  TUNE_AAACODE is  used to  supply an AAA-
 standard information category for the data being reduced.  This
 parameter is only used in conjunction with the archiving facil-
 ity, when TUNE_ARCHIVE=YES.

 INITIAL SUGGESTED VALUE: 1.

2  TUNE_AIRTOVAC=_LOGICAL

 Determines whether  the wavelength  scales in  output datafiles
 are to be converted from air to to vacuum wavelengths.

 If this parameter is set,  the vacuum wavelengths are converted
 using the procedure:

    wavm = 1.0 / ( old_wavelength * 1.0E-4 ) ** 2
    sum = 64.328 + 29498.1 / ( 146.0 - wavm ) +
                   255.4 / ( 41.0 - wavm )
    new_wavelength = old_wavelength * ( 1.0 + 1.0E-4 * sum )

 This  formula is  taken from  Allen's Astrophysical  Quantities
 (1973).

 Only the wavelength scales in the output file are effected; the 
 reduction database wavelength scales remain unchanged.

 INITIAL SUGGESTED VALUE: NO.

2  TUNE_ARCHIVE=_LOGICAL

 This parameter is no longer used.

 Set if automatic archiving of results files is to be performed.

 The default value is NO.

2  TUNE_AUTLOC=_LOGICAL

 Set this parameter  if the positions  of the  orders are  to be
 determined automatically.

 When this parameter is not set,  the program allows interactive
 selection of the  order centres on a  graphic display.  This is
 useful when you want to select a subset of the available orders
 in the frame, or to check the centres found automatically.

 The default value is NO.

2  TUNE_AUTOMATE=_CHAR

 This hidden parameter allows multiple options to be automatically
 invoked upon startup of the monolithic task.

 Any options required must be supplied on the command line or
 the user will be prompted as usual.  For example:

    TUNE_AUTOMATE=1,2,3,EXIT

 would run the first 3 processing options and then exit.

 If EXIT is not given as an option, ECHOMOP will start the menu task
 ech_menu when the list of options specified by TUNE_AUTOMATE has
 been exhausted.

2  TUNE_BLZRSET=_LOGICAL

 This parameter controls whether or not the blaze function is to be
 reset to unity after being applied.

 The default is TRUE thus preventing accidental re-application of the
 blaze function to an extracted spectrum.

 In some cases it may be necessary to keep the blaze function to apply
 it to a number of extracted object spectra.  In this case set
 TUNE_BLZRSET=NO.

 The default value is YES.

2  TUNE_CLONE=_CHAR

 The reduction database from which to clone information.

 The reduction database should have been created by ECHOMOP
 previously.  Objects which would normally be calculated by
 ECHOMOP will instead be copied from the named file.

2  TUNE_CLPBY=_INTEGER

 This parameter sets the number of points automatically clipped 
 per order-trace fit/clip iteration.

 The TUNE_CLPBY most-deviant points are clipped before a re-fit is 
 attempted, this process is then repeated until either:

  - all points have deviations of less than TUNE_CLPMXDEV from the 
    polynomial,

 or 
 
  - so many points have been clipped that a meaningful fit can no 
    longer be attempted.

 In the latter case the order will be automatically disabled.
 The user may manually re-fit the trace if the order is still
 to be processed.

 The default value is 1.
2  TUNE_CLPMXDEV=_REAL

 The maximum deviation used when automatically clipping traced
 points to fit order tracing polynomials.

 It is expressed in units of pixels and will usually be a fraction
 of a pixel.

 Any traced point which is further than this limit from the fitted
 polynomial (for that X-coordinate) is liable to be clipped.  Automatic
 clipping only stops when either all points have deviations of less than
 TUNE_CLPMXDEV from the polynomial; or when so many points have been
 clipped that a meaningful fit can no longer be attempted.  In this
 latter case, the order will be automatically disabled.  The user may
 re-fit manually if the order is still to be processed.

 The default value is 0.5.

2  TUNE_CMWVDEV=_REAL

 Specifies the threshold for deciding whether the values generated
 by the order-specific polynomial and the all-order polynomial are
 consistent at a particular increment.

 TUNE_CMWVDEV is the maximum difference between the two (in pixels)
 which is accepted as consistent.

 The default value is 0.5 pixels.

2  TUNE_CNSDEV=_REAL

 Specifies the threshold for deciding whether the values generated
 by the order-specific polynomial and the all-order polynomial are
 consistent at a particular increment.

 TUNE_CNSDEV is the maximum difference between the two (in pixels)
 which is accepted as consistent.

 The default value is 0.5 pixels.

2  TUNE_CRCLEAN=_LOGICAL

 When set TRUE, optimal extraction will attempt to identify cosmic
 rays by examining the local variance.

 This option will only effect optimal extraction, i.e., reductions
 with EXTRACT_MODE=O.

 This option will not normally be used as more flexible tasks for
 cosmic-ray removal are provided separately to optimal extraction.

 See also ECH_DECOSMIC.

2  TUNE_CRINTER=_LOGICAL

 Determines how cosmic-ray-contaminated pixels are to be treated.
 (Only used when cosmic-ray checking is enabled by TUNE_CRTRC=TRUE.)

 When set to TRUE cosmic-ray pixels are replaced in the output
 image by interpolated values.

 When set to FALSE cosmic-ray pixels are marked with a flag value.

 The default is FALSE.

2  TUNE_CRMAX=_INTEGER

 The number of pixels expected to be contaminated by cosmic rays.
 (Only used when cosmic-ray checking is enabled by TUNE_CRTRC=TRUE.)

 This may be estimated by the user, or be generated by an automatic
 modeller.

 If no estimate is available, then zero should be used.  The program
 will then display a histogram of the ratio of original divided-by 
 median image and allow manual selection of a clipping point.  The 
 number of pixels to be clipped (flagged as cosmic rays) will then 
 be shown.

2  TUNE_CRTRC=_LOGICAL

 Set to TRUE if the trace frame is to be checked for possible
 cosmic-ray contamination.

 This will not usually be necessary and is provided for the
 case where only a faint, contaminated object frame is available
 for order tracing.

 INITIAL SUGGESTED VALUE: NO.

2  TUNE_CRXBOX=_INTEGER

 X-dimension of the area used to calculate median values.

2  TUNE_CRYBOX=_INTEGER

 Y-dimension of the area used to calculate median values.

2  TUNE_DB_SCOPE=_INTEGER

 This parameter sets the number of nearest-neighbours to take
 account of when constructing/using a reference feature database
 (FDB).  It will not normally require adjusting.

 The default value is 10.

2  TUNE_DEKABV=_INTEGER

 This parameter sets the upper extraction limit for the dekker
 in the spatial direction.

 A non-zero value for this parameter will over-ride the
 automatic dekker extent calculated by ECH_SPATIAL.

 TUNE_DEKABV can be used when the dekker extent and position
 relative to the order traces are well known.  Typically, it will
 be used when the first of a set of similar frames has been manually
 extracted and automation of the extraction of the remaining
 frames is required.

 INITIAL SUGGESTED VALUE: 0.

2  TUNE_DEKBLW=_INTEGER

 This parameter sets the lower extraction limit for the dekker
 in the spatial direction.

 A non-zero value for this parameter will over-ride the
 automatic dekker extent calculated by ECH_SPATIAL.

 TUNE_DEKBLW can be used when the dekker extent and position
 relative to the order traces are well known.  Typically, it will
 be used when the first of a set of similar frames has been manually
 extracted and automation of the extraction of the remaining
 frames is required.

 INITIAL SUGGESTED VALUE: 0.

2  TUNE_DEKTHR=_REAL

 The threshold level for automatic determination of the dekker extent.

 This is the percentage (of maximum intensity) below which the spatial
 profile is to fall before being classified as outside the dekker.
 In general an Arc frame will be used to establish the dekker limits,
 and a value of 80% will suffice.

 The default value is 0.8.  (i.e. 80%).

2  TUNE_DIAGNOSE=_LOGICAL

 This parameter should be set TRUE only for short periods when a
 problem has occurred (and can be reproduced).  It enables the
 production of a log file containing detailed information of use to
 the maintainer of ECHOMOP.  This log is stored in the file

    echomop_diagnostics.log

 In the event of a problem mail this file, with details of the
 problem, to the Starlink software librarian at:

    starlink@jiscmail.ac.uk

2  TUNE_DPRBTHR=_REAL

 The threshold probability for differences between observed and
 theoretical (based on observed mean, sigma) CDFs.

 The Kolmogorov-Smirnov test is used to evaluate the probability that
 the measured deviation between observed and theoretical CDFs is a
 chance occurrence (i.e., that the two distributions are actually the
 same).

 In general, any significant probability indicates that the two
 distributions compare very well.  When the K-S probability exceeds
 the TUNE_DPRBTHR threshold, clipping stops and the fit is accepted.

 The default value is 0.9.  (i.e. 90%).

2  TUNE_DSGMTHR=_REAL

 The sigma-clipping threshold for deciding which pixels to clip at
 each iteration of CDF matching.

 Normally clipping should be set to 2 to 3 sigma.  At each iteration
 the deviation of each pixel from its predicted value is evaluated in
 terms of the mean and sigma for all pixels (on a per order basis).

2  TUNE_FCHECK=_LOGICAL

 Set this parameter to TRUE if the processed frames are to be
 checked for 'bad' row and/or columns.

 The trace frame is checked and other frames are then assumed
 to have identical 'bad' features.

2  TUNE_FFINTER=_LOGICAL

 Set TRUE if the degree of polynomial used to model the flat
 field is to be under interactive control.

2  TUNE_FFLMED=_LOGICAL

 Whether the median is to be used when calculating the behaviour
 of the flat field using only local pixels.

 Set this parameter if the median value is to be used.

 This applies only when TUNE_FFNXPLY=1 (no polynomial model), in
 which  case the local  median or mean is taken over the nearest
 TUNE_FFLSMP pixels.   This is useful  in cases where there is a
 significant small-scale structure in the flat field.

 INITIAL SUGGESTED VALUE: NO.

2  TUNE_FFLSMP=_INTEGER

 The number of samples per point to use when the flat-field model
 is based on the local behaviour only.

 This parameter is only used when the X-polynomial degree,
 TUNE_FFNXPLY=1 (which implies a constant flat field).

 The parameter TUNE_FFLMED controls whether a local mean or
 median value is used.

 INITIAL SUGGESTED VALUE: 10.

2  TUNE_FFNXPLY=_INTEGER

 Specifies the number of polynomial coefficients in X for the
 flat-field model, and the re-fitted model.

 A model of the flat field is made by fitting a polynomial at
 each X- and Y-increment.  These polynomials are then used to
 calculate the balance factors at the 'Object' pixel positions.

 NOTE: If the parameter is set to zero then no modeling in the
 X-direction will be performed.  If the parameter is set to 1, then
 no polynomials are used (they would be constant), but the balance
 factors are calculated using the local mean value based on a
 TUNE_FFLSMP pixel sample.  This option should be used when
 undersampling etc. is preventing the fitting of polynomials at all.

 The default value is 1.
2  TUNE_FFNXREJ=_INTEGER

 Specifies the number of clip/reject/remodel cycles in X
 (dispersion direction) flat-field modelling.

 The model of the flat field is made by fitting a polynomial at each
 X- and Y-increment.  These polynomials are then used to calculate
 the balance factors at the 'Object' pixel positions.

2  TUNE_FFNYPLY=_INTEGER

 Specifies the number of polynomial coefficients in Y for the
 flat-field model, and the re-fitted model.

 The model of the flat field is made by fitting a polynomial at each 
 X- and Y-increment.  These polynomials are then used to calculate the
 balance factors at the 'Object' pixel positions.

 The default value is 0.

2  TUNE_FFNYREJ=_INTEGER

 Specifies the number of clip/reject/remodel cycles in Y
 (dispersion direction) flat-field modelling.

 The model of the flat field is made by fitting a polynomial at each
 X- and Y-increment.  These polynomials are then used to calculate
 the balance factors at the 'Object' pixel positions.

2  TUNE_FFSUBSMP=_LOGICAL

 Whether subsampling is to be used when doing X-polynomial fits.

 Set this parameter if subsampling is to be done.

 This parameter is only used when polynomial fitting in the
 X-direction is enabled (TUNE_FFNXPLY > 1) and causes the program to
 subsample (10 samples per pixel) the spatial profile during
 fitting.  This is useful when the balance factors `outside' the dekker,
 or at the very edge of the dekker (where the intensity changes 
 quickly from pixel-to-pixel) are needed.

 INITIAL SUGGESTED VALUE: NO.

2  TUNE_FFTHRESH=_REAL

 Specifies the rejection threshold for the flat field.

 Any pixels which deviate by more than TUNE_FFTHRESH sigma from the
 fitted polynomial model will be clipped and the model re-fitted.

 The polynomial model of the flat field is made by fitting a polynomial
 at each X- and Y-increment.  These polynomials are then used to
 calculate the balance factors at 'Object' pixel positions.

 The default value is 10.0 sigma.

2  TUNE_FINCPLY=_INTEGER

 The number of polynomial coefficients to be used for fitting each
 individual sampling increment in the spatial direction.

 Increments consist of all pixels at a specific distance above or
 below an order trace.

2  TUNE_FLAX=_LOGICAL

 Used only when TUNE_SCRMODE=1.

 Indicates that the output wavelength scale has bins which vary
 on a LOG scale.

2  TUNE_FLUX=_LOGICAL

 Set TRUE if flux is to be conserved.

 Set FALSE to maintain the mean height of the data.

2  TUNE_IDINMN=_INTEGER

 Specifies the minimum number of features to be used when generating
 ratios for initial identification.

 In general, a good solution can be found using only the strongest
 8-16 features.  The program increases the number of features used
 until an adequate solution is found.  In cases where the orders are
 distorted, it may be advantageous to increase the minimum number of
 features to cover the majority of located features.

 INITIAL SUGGESTED VALUE: 8.

2  TUNE_IDINMX=_INTEGER

 Specifies the maximum number of features to be used when generating
 ratios for initial identification.

 In general, a good solution can be found using only the strongest
 8-16 features.  The program increases the number of features used
 until an adequate solution is found.  However, there may be large
 numbers of weak features present which are not in the reference
 database.  This parameter sets the maximum number of features
 to be considered for each order.

 INITIAL SUGGESTED VALUE: 30.

2  TUNE_IDMDLT=_INTEGER

 Specifies the maximum number of neighbouring features (on each
 side) to examine when generating ratios for pattern matching.

 Increasing the value of the parameter will lead to an exponential
 increase in CPU time.  Only increase the value when all other
 possibilities for wavelength fitting have been exhausted.

 The default value is 6.

2  TUNE_IDMXDIF=_REAL

 Specifies the maximum difference between the ratios derived from
 observed features, and those in the database with which a match is
 attempted.

 The difference is evaluated by calculating

    ABS( 1 - ABS( observed / reference ) )

 giving a fractional measure of the difference.  For example:
 difference = 0.01 indicates that the two quantities differ by
 approximately 1% of their average magnitude.  Values much larger
 than 0.1 are likely to generate a lot of coincidence matches,
 values less than 0.01 may well miss 'good' matches in
 less-than-ideal data.

 The default value is 0.03.

2  TUNE_IDSDLT=_INTEGER

 Specifies the starting number of neighbouring features (on each
 side) to examine when generating ratios for pattern matching.

 Increasing the value of this parameter will lead to an exponential
 increase in CPU time.

 Higher values are automatically tried by the program if no solution
 can be found.  The number of neighbours considered is incremented
 until it reaches the maximum specified by TUNE_IDMDLT, at which
 point the program will give up automatic matching.

 The value of TUNE_IDMDLT should only be increased when all other
 possibilities for wavelength fitting have been exhausted.

 The default value is 3.

2  TUNE_IDSTRNG=_REAL

 The minimum strength of those features to be used for initial line
 identifications.

 This is given as the ratio of the strongest feature in the order
 to the strength of the weakest feature to be used.  Any features of
 strength greater than or equal to max/TUNE_IDSTRNG will be included
 in the initial set.

 For example, with TUNE_IDSTRNG=10.0 all features which are at least
 one tenth as strong of the strongest feature will be eligible for
 identification.

 The default value is 10.0.

2  TUNE_INSTR=_CHAR

 The name of the instrument used to take the data.  The package uses
 a definitions file with the name ECH_name_SPECIFIC.DEF to check for
 any useful information which may be present in the data frame headers.

 To check which instruments have recognised headers use:

    ls ADAM_PROG_* ECH*SPECIFIC.DEF.

2  TUNE_INTR=_LOGICAL

 Selects linear interpolation when re-binning.

2  TUNE_LOG=_LOGICAL

 Used only when TUNE_SCRMODE=1.

 Indicates that the output wavelength scale has bins which vary
 on a LOG scale.

2  TUNE_MAXPOLY=_INTEGER

 The maximum number of polynomial coefficients to be allowed for the
 duration of this reduction.

 For POLY trace fits, the order of the polynomials used for each fit 
 may be varied up to this limit, but may not be set to higher values.

 For SPLINE trace fits this is the maximum number of fit parameters
 which can be used.  A high vale may be needed.  The number of 
 parameters required is (knots+7)*2.

 The default value is 32, which should be acceptable in most cases.

2  TUNE_MAXRFLN=_INTEGER

 The  maximum number of  reference lines allowed for each order.

 This  parameter is used to  dimension objects  in the reduction
 database and should not normally need to be altered.

 You may  want to lower the value of this parameter to avoid the
 profusion of 'false'  line candidates  produced  by ECH_LINLOC,
 however, if automatic line identification is being used,  faint
 feature positions  are needed for the automatic  identification
 to work well.

2  TUNE_MERGE=_LOGICAL

 Set TRUE if the scrunched object spectrum is to be merged into
 the 1-D spectrum.

 The default is to zero the 1-D spectrum before output.  Setting
 TUNE_MERGE=TRUE allows the weighted co-addition of spectra from
 multiple frames into the a single output spectrum.

 The algorithm is the same as that used by FIGARO ECHMERGE.

 INITIAL SUGGESTED VALUE: NO.

2  TUNE_MINCR=_REAL

 Specifies the threshold level for deciding whether pixels located 
 as 'possibly cosmic ray contaminated' should be flagged as such.

 Only those pixels with intensities greater than TUNE_MINCR will be 
 flagged.  This provides a limit for the case where cosmic-ray 
 identifiers become over enthusiastic due to the nature of the frame.

 Normally this parameter should be set to zero, and therefore, 
 have no effect.

 INITIAL SUGGESTED VALUE: 0.0.

2  TUNE_MXBADSMP=_INTEGER

 The maximum number of consecutive bad samples permitted 
 before abandoning an order trace.

 The default value is 10.

2  TUNE_MXSKYPIX=_INTEGER

 The maximum  number of pixels allowed in the spatial  direction
 for each order.

 This parameter is used to  dimension objects  in  the reduction
 database and may need to be increased when working with objects
 with a large spatial extent.

 Note that  increasing the value of TUNE_MXSKYPIX causes a large
 increase in the size of a reduction database,  so the parameter
 should be set to the smallest value possible for your data.

2  TUNE_MXSMP=_INTEGER

 The maximum number of independent X-samples to use when tracing an
 order.

 If the X-dimension is less then 500 every X-increment will be
 sampled.

 The default value is 500.

2  TUNE_NOARC=_LOGICAL

 Set TRUE if there is no arc frame to use for wavelength
 calibration.

 This may also be specified by replying NONE when prompted for
 the name of the arc frame (parameter ARC).

 Default value: FALSE.

2  TUNE_NOFLAT=_LOGICAL

 Set TRUE if there is no flat-field frame to use for balance factor
 calculation.

 This may also be setting the parameter FFIELD to 'NONE' when prompted
 for the name of the flat-field frame.

 In the absence of a flat-field frame, all balance factors are set to
 unity.

 INITIAL SUGGESTED VALUE: NO.

2  TUNE_OBJABV=_INTEGER

 This parameter sets the upper extraction limit for the object
 in the spatial direction.

 A non-zero value for this parameter will over-ride the
 automatic object extent calculated by ECH_SPATIAL.

 TUNE_OBJABV can be used when the object extent and position
 relative to the order traces are well known.   Typically, it will
 be used when the first of a set of similar frames has been manually
 extracted and automation of the extraction of the remaining
 frames is required.

 INITIAL SUGGESTED VALUE: 0.

2  TUNE_OBJBLW=_INTEGER

 This parameter sets the lower extraction limit for the object.

 A non-zero value for this parameter will over-ride the automatic
 object spatial-extent calculated by ECH_SPATIAL.

 TUNE_OBJBLW can be used when the object extent and position 
 relative to the order traces are well known.  Typically, it will 
 be used when the first of a set of similar frames has been manually
 extracted and automation of the extraction of the remaining
 frames is required.

 INITIAL SUGGESTED VALUE: 0.

2  TUNE_OBJPOLY=_INTEGER

 Specifies the degree of polynomial to use when trying to fit to the
 object intensity at any single X- (lambda-) increment.

 Normally, a model of the profile is formed by averaging subsamples
 from all orders.  The polynomial model (per increment) should only
 be used when the profile varies markedly along an order due to
 atmospheric or instrumental peculiarities.

 The default value is 0.

2  TUNE_OBJREJ=_INTEGER

 Specifies the number of reject cycles for which object profile
 samples will be clipped, and the model re-fitted.

 The polynomial model of the object's spatial profile is made by
 fitting a polynomial at each X-sample.  These polynomials are then
 used to estimate the profile at each spatial sample of the object.

2  TUNE_OBJRTHR=_REAL

 Specifies the reject-threshold for object pixels.

 Any pixels which deviate by more than TUNE_OBJRTHR sigma from the
 fitted polynomial model, will be clipped, and the model re-fitted.
 The polynomial model of the object profile is made by fitting a
 polynomial at each X-increment.  These polynomials are then used
 to estimate the signal at each spatial sample of the object.

 INITIAL SUGGESTED VALUE: 5.0.

2  TUNE_PAGE=_INTEGER

 This parameter specifies the number of lines on the terminal screen.

 When set to a non-zero value, after each TUNE_PAGE lines of non-menu
 output the program will pause and wait for a key to be hit before
 continuing.  A variety of options are available at this point:

    D,d,uparrow,KP8,p,P,b,B    - Scroll back one line.

    U,u,downarrow,KP2,f,F,n,N  - Scroll forward a line.

    space                      - Resume output.

    return                     - Output next line only.

    pageup                     - Previous full screen.

    pagedown                   - Next full screen.

 The program maintains a buffer of lines output to the screen and
 the user may move around using the keys mentioned above.  Only the
 space or return keys will resume regular program output.  If the
 parameter value is not positive then no paging is done.

 INITIAL SUGGESTED VALUE: 0.

2  TUNE_PARTORD=_LOGICAL

 Set to TRUE if the program is to make use of order slope and
 inter-order distance data to look for partial orders at the 
 top and bottom of the trace frame.

 The default value is NO.

2  TUNE_PFLSSAMP=_INTEGER

 The maximum number of subsamples used when determining the
 subsampling rate to be used for the generation of the averaged
 profile.

 This parameter should only need to be changed when processing 
 frames with a very large number of pixels sampling the object in 
 the spatial direction.

 The default value is 301 subsamples, which will normally be more
 than is needed.

2  TUNE_PREBAL=_LOGICAL

 Set to TRUE if the flat-field frame supplied has already been
 pre-processed to contain balance factors for the pixel-to-pixel
 variations.

 If TRUE, flat-field modelling will not take place and the balance
 factors will simply be copied from the supplied frame. This should
 be used for cases where the polynomial model cannot generate 
 appropriate values.

 NOTE: The removal of the blaze function is a separate operation and
 will require the use of the original, raw flat-field frame (or
 equivalent).

2  TUNE_QUAD=_LOGICAL

 Selects QUADRATIC interpolation when re-binning.  This is usually
 more accurate than LINEAR interpolation.

 The default value is YES.

2  TUNE_QUICK=_LOGICAL

 Set TRUE if data are to be processed in quick-look mode.

 This enables fast reduction by automatically tailoring parameters.
 In particular: all fits are clipped automatically; no flat fielding
 is performed; and a simple summed extraction is used.

 Prior to quick-look extractions the object extent should be specified
 by the parameters TUNE_OBJBLW and TUNE_OBJABV.

 INITIAL SUGGESTED VALUE: NO.

2  TUNE_REPORT=_CHAR

 This parameter is used to control the variety of reporting output
 by the program.

 It will usually be left blank to indicate default reporting to
 the terminal/batch log file.  Options include:

    F  - Specifies full reporting of task/module entry.

    L  - Specifies duplicate log of reports to disk file
         (ECH_REPORT.LOG in the current directory).

    B  - Brief reporting, task starts only.

    S  - Silent, no terminal reports at all.

    E  - Error reports to override other setting (BS).

    P  - Print log file on completion (only with L).

 Specifiers may be concatenated in any order, thus

     BELP

 would specify minimal reporting, except for task startup and error
 reports.  Reports to be copied to a log file and printed upon
 completion.

 INITIAL SUGGESTED VALUE: ' '.

2  TUNE_REVCHK=_LOGICAL

 Normally the arc line identification task assumes that wavelength
 increases from left to right (increasing X-coordinate).

 If you are not sure that this is the case then set this parameter
 TRUE and the program will check both orientations.

 TUNE_REVCHK=YES will take twice as much time as TUNE_REVCHK=NO.

 The default value is NO.

2  TUNE_RFLNTHR=_REAL

 Specifies the degree to which arc line features are required to
 exceed the continuum intensity before they are considered as valid
 features.

 The default value of 1.25 is deliberately low to allow the automatic
 line-identifier access to very faint features.  This parameter should
 not need adjusting unless the arc spectrum has a difficult continuum
 or other special problems associated with it.  The line identification
 task provides interactive control over the minimum intensity for
 'fitted' features via its (T)hreshold option.

 The default value is 1.25.

2  TUNE_SATRTN=_REAL

 Specifies the threshold level for deciding whether any pixels 
 should be flagged as saturated.

 Flagged pixels do not contribute to the extraction in any way.  
 Only pixels with intensities less than the TUNE_SATRTN level will 
 be used by subsequent tasks.

 INITIAL SUGGESTED VALUE: 1.0E20.

2  TUNE_SCFRACT=_REAL

 Specifies the mixing fraction for two wavelength ranges (fitted).

 This is only required when there are arc exposures bracketing the
 science data and there is a significant difference between the two.

 The fraction is used as follows:

    Lambda = Lambda1 + (Lambda2 - Lambda1) * Fraction

 No facility is provided for calculating the appropriate fraction,
 but it will usually be estimated as the the ratio of elapsed times
 between the object frame, and the before/after arc frames (assumes
 a constant 'drift' of the wavelength scales.

2  TUNE_SCRADD=_INTEGER

 Used only when TUNE_SCRMODE=0, and indicates the number of input
 bins to be added into each output bin.  This is used mainly to
 increase the signal-to-noise of a weak spectrum, at the expense
 of resolution.

2  TUNE_SCRMODE=_INTEGER

 If equal to zero, selects mode 0, in which input bins can be
 grouped and shifted to form output bins.

 If not equal to zero, selects mode 1, in which the input bins are
 transferred to the output bins in accordance with the wavelength
 scale(s).

 See also TUNE_SCRADD.

2  TUNE_SKEW=_REAL

 The number of bins the input array is to shifted (in mode 0 only).
 A positive value shifts data to HIGHER pixel numbers - this is a
 FIGARO convention, and is the opposite of that used by Lolita.

2  TUNE_SKVRCORR=_LOGICAL

 When this parameter is set to YES then weights are modified to
 include uncertainty in sky fit optimal variances equivalent to
 maximising:

    sum over I [W(I)**2 * V(I)] + sum over I,J [W(I)*W(J)*V(I,J)]
    -------------------------------------------------------------
                         ( sum W(I) * F(I) )**2

 where:

    W(I) is the weight on pixel I
    V(I) is the variance on the value of pixel I
    V(I,J) is the covariance of the skyfit between pixels I and J
    F(I) is the normalised profile at pixel I

 This reduces to solving:

    A(I,J) W(J) = F(I)

 where:

    A(I,J) = V(I,J) I not equal to J and
    A(I,I) = V(I) + V(I,J)

 This option is slow as it is computationally intensive.

2  TUNE_SKYHILIM=_REAL

 Specifies the upper threshold used when automatically determining
 the location of 'sky' pixels in the object spatial profile.

 The algorithm used is:

    - Median filter profile and multiply by 1.05
    - Calculate the threshold point:

       Min + (Max-Min)*TUNE_SKYHILIM

    - Take the minimum of the two quantities

 This minimum is used as the maximum sky intensity allowed along
 the spatial profile.

 The default value is 0.5 (i.e. 50%).

2  TUNE_SKYINTER=_LOGICAL

 Set TRUE if the modelling of sky backgrounds is to be under interactive
 control.

2  TUNE_SKYLINW=_INTEGER

 Specifies the maximum expected width of sky lines in pixels.

 This is only used when a wavelength-dependent model is being used to
 predict sky intensities using whole-order polynomials.  In this
 case, any pixel whose intensity differs from the fit by more than
 TUNE_SKYLTHR * sigma will be treated as a sky-line candidate, and
 its actual intensity entered into the model in place of the fit
 prediction.  The same procedure is also applied to the pixels'
 TUNE_SKYLINW nearest neighbours to ensure that the entire sky line
 is entered into the model, even when its wings are within the sigma
 constraint described above.  This parameter only has effect when
 TUNE_SKYXPLY > 0.

 The default value is 5 pixels.

2  TUNE_SKYLTHR=_REAL

 Specifies the threshold level for the treatment of sky-line
 candidates in the wavelength-dependent sky model produced when
 TUNE_SKYXPLY is greater than zero.

 In this case, any pixel whose intensity differs from the fit by 
 more than TUNE_SKYLTHR * fit-sigma will be treated as a sky-line
 candidate, and its actual intensity entered into the model in place
 of the prediction.  The same procedure is also applied to the
 pixels TUNE_SKYLINW nearest neighbours to ensure that the entire
 sky line is entered into the model even when its wings are within
 the sigma constraint described above.

 INITIAL SUGGESTED VALUE: 3.0.

2  TUNE_SKYPOLY=_INTEGER

 TUNE_SKYPOLY > 0 specifies the degree of polynomial to use
 when trying to fit to the sky intensity at each X- (lambda-)
 increment.

 These polynomials are used to predict the sky intensity in object
 pixels.

 The default value of 0 gives sky averaging (i.e., the sky model is
 constant at each order/column).

 Set TUNE_SKYPOLY=-1 when there is no sky to be modeled (i.e., sky model
 is zero everywhere).

 The default value is: 0.

2  TUNE_SKYREJ=_INTEGER

 Specifies the number of reject cycles for which sky will be
 clipped, and the model re-fitted.

 The polynomial model of the sky background is made by fitting a
 polynomial at each X-increment.  These polynomials are then used to
 estimate the signal level at each spatial sample of the sky.

2  TUNE_SKYRTHR=_REAL

 Specifies the reject-threshold for sky pixels.

 Sky pixels which deviate by more than TUNE_SKYRTHR sigma from the
 fitted polynomial model, will be clipped, and the model re-fitted.

 The polynomial model of the sky background is made by fitting a
 polynomial at each X-increment.  These polynomials are then used to
 estimate the sky signal level at each spatial sample.

 INITIAL SUGGESTED VALUE: 5.0.

2  TUNE_SKYSIM=_LOGICAL

 Set to YES if simulations are to be used to estimate the variance
 of the sky using polynomial fits in the wavelength direction.

 These simulations are CPU intensive.

 The default value is NO.

2  TUNE_SKYXPLY=_INTEGER

 Specifies the degree of polynomial to use when trying to fit to the
 sky intensity over the whole order at a spatial increment.

 This facility will be most useful when the sky is very uniform, or
 possibly when trying to model the scattered light in the inter-order
 region.  The intensities predicted by the wavelength-dependent model
 are used as input to the spatial model only when they fall within a
 user-defined distance from the observed value, and when they are not
 possible sky-line features.

 (See also TUNE_SKYLINW and TUNE_SKYLTHR).

 The default value is 0.

2  TUNE_TRCNS=_REAL

 Specifies the degree to which traces may be inconsistent.

 Expressed as a percentage of the number X-samples.

 For example, for traces up to 10% inconsistent, as measured
 against the other traces, then set TUNE_TRCNS=0.1.

 The default value is 0.05.

2  TUNE_TWTHR=_REAL

 The 'trace-width-threshold' is provided for the case where the signal-
 to-noise ratio of the frame used to locate the orders is very low.

 The threshold is the degree to which off-trace pixels must fall below
 the pixel at trace centre (in the spatial direction) in order to be
 considered as 'off-order'.  I.e., the trace width is estimated
 by stepping pixel-by-pixel above and below the trace until the
 intensity falls below (1.0 - TUNE_TWTHR) * intensity-at-trace-centre.

 The default value is 0.95 (95%).

2  TUNE_USEAAA=_LOGICAL

 Set TRUE if the program is to make use of the `Astronomy &
 Astrophysics Abstracts' system of information categorisation.

 This consists of a set of numbers corresponding to topics in
 Astronomy.  If TUNE_USEAAA is active then the user will be shown
 the currently recognised categories and asked to select the one
 most relevant to the data being reduced.  This parameter is only
 used in conjunction with the archiving facility, when
 TUNE_ARCHIVE=YES.  The prompting process may be overridden by
 supplying a valid AAA code using the parameter TUNE_AAACODE = an
 integer.

 INITIAL SUGGESTED VALUE: YES.

2  TUNE_USE_NXF=_REAL

 Specifies the fraction of the X-dimension of the frame to be used
 for determining the profiles.

 This is set low (0.2 = 20%) by default for speed.

 Very poor data may benefit from an increase in this parameter,
 which provides a more accurate sampling of the object profile, and thus
 more accurate extraction weights.  The central fraction from each order
 is sampled and the average profile over all orders is calculated.

 A special mode is selected by setting TUNE_USE_NXF=1, which makes the
 sampling independent for each order.

 The default value is 0.2. (i.e. 20%).

2  TUNE_WVCNS=_REAL

 Specifies the degree to which order wavelength scales may be
 inconsistent.

 Expressed as a percentage of X-samples.

 For example, if an order may be a maximum of 10% inconsistent as
 measured against the other orders, then TUNE_WVNCS should be set
 to 0.1.

 The default value is 0.05.

2  TUNE_XBOX=_INTEGER

 This parameter allows the sampling size (in X pixels) used when
 performing order location to be altered.

 This should be necessary when only one frame is available
 for tracing the orders, and this frame is of poor quality.

 Some care must be taken to ensure that the sampling box is kept
 sufficiently small that all samples come from the same order
 for each sampling box position.

2  TUNE_YBLAZE=_LOGICAL

 Set TRUE if automatic Y-blaze correction is to be used.

 This correction proceeds  by examining the scrunched orders and
 re-scaling them so that the  extremes of adjacent orders match.

 This should only  be used when no flux calibration is available
 and  there is a real  need for it.  It requires  that the blaze
 fit be scrunched before being applied, and so requires a blaze- 
 fit followed by a scrunch. The blaze correction is only applied
 to scrunched (and merged) orders in this case.

 When TUNE_YBLAZE=FALSE the blaze fit is applied directly to the
 extracted orders and these may be scrunched later.

 INITIAL SUGGESTED VALUE: NO.

