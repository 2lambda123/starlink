      SUBROUTINE DASHDB (IPAT)
      COMMON/INTPR/IPAU,FPART,TENSN,NP,SMALL,L1,ADDLR,ADDTB,MLLINE,
     1    ICLOSE
C
C USER ENTRY POINT.
C DASHDB GIVES AN INTERNAL REPRESENTATION TO THE DASH PATTERN WHICH IS
C SPECIFIED IN ITS ARGUMENTS. THIS INTERNAL REPRESENTATION IS PASSED
C TO ROUTINE CFVLD IN THE COMMON-BLOCK DSHD.
C
C
C IN DSHD AN INTERNAL REPRESENTATION OF THE DASH PATTERN IS PASSED TO
C ROUTINE CFVLD.
      COMMON /DSHD/   ISL        ,L          ,IP(16)
C IFSTFL IS A FLAG TO CONTROL THAT FRSTD IS CALLED BEFORE VECTD IS
C CALLED.
      COMMON /DSHDA/  IFSTFL
C
C IFCFLG IS THE FIRST CALL FLAG FOR DASHDB. IT IS INITIALIZED IN DASHBD.
C MASK HAS TO BE SAVED FOR SUBSEQUENT CALLS TO DASHDB.
C
      COMMON /DSHDD/ IFCFLG, MASK
C
C NECESSARY ON SOME MACHINES TO GET BLOCK DATA LOADED
C
      EXTERNAL DASHBD
      SAVE
C
C THE FOLLOWING CALL IS FOR LIBRARY STAISTICS GATHERING AT NCAR
C
      CALL Q8QST4 ('GRAPHX', 'DASHLINE', 'DASHDB', 'VERSION 01')
      IF (IFCFLG .EQ. 2) GOTO 10
C
C CHECK IF THE CONSTANTS IN THE BLOCKDATA DASHBD ARE LOADED CORRECTLY.
C
      IF (ISL .EQ. 1) GOTO 6
      CALL SETER('DASHDB - BLOCKDATA DASHBD APPARRENTLY NOT LOADED CORRE
     -CTLY',1,2)
    6 CONTINUE
C
C INITIALIZATION
C
C MASK IS AN ALL SOLID PATTERN TO BE PASSED TO OPTN (65535=177777B).
C
      MASK=IOR(ISHIFT(32767,1),1)
C
      IFCFLG = 2
C
C L - NUMBER OF WORDS IN THE FINAL PATTERN, POINTER TO IP ARRAY.
C ISL - FLAG FOR ALL SOLID PATTERN (1) OR ALL GAP PATTERN (-1).
C IFSTFL - FLAG TO CONTROL THAT FRSTD IS CALLED IN CFVLD BEFORE VECTD IS
C          CALLED, WHENEVER DASHDB HAS BEEN CALLED.
C
   10 CONTINUE
      L = 0
      ISL = 0
      IFSTFL = 1
C
C     FOR EXAMPLE, IF IPAT IS 0010001100000000 (BINARY), THEN L=5 AND
C       IP(1) = -2*IPAU
C       IP(2) =  1*IPAU
C       IP(3) = -3*IPAU
C       IP(4) =  2*IPAU
C       IP(5) = -8*IPAU
C
      ICRT = IPAU*ISHIFT(1,15-10)
      IF (IPAT .NE. 0) GO TO 260
      ISL = -1
      RETURN
  260 IF (IPAT .NE. MASK) GOTO 270
      ISL = 1
      RETURN
  270 NMODE1 = IAND(ISHIFT(IPAT,-15),1)
      DO 290 I = 1,16
      IF (NMODE1 .NE. IAND(ISHIFT(IPAT,I-16),1)) GO TO 280
      NMODE1 = 1 - NMODE1
      L = L + 1
      IP(L) = 0
  280 IP(L) = IP(L) + ICRT*(1-2*NMODE1)
  290 CONTINUE
      RETURN
      END
      SUBROUTINE DRAWPV (IX,IY,IND)
C
C DRAWPV INTERCEPTS THE CALL TO PLOTIT TO CHECK IF THE PEN HAS TO BE
C MOVED OR IF IT IS ALREADY CLOSE ENOUGH TO THE WANTED POSITION.
C IF IND=2 NEVER MOVE PEN, JUST UPDATE VARIABLES IXSTOR AND IYSTOR.
C
C IN IXSTOR AND IYSTOR THE CURRENT POSITION OF THE PEN IS SAVED.
C
      COMMON /DSHDC/ IXSTOR,IYSTOR
C
      COMMON/INTPR/IPAU,FPART,TENSN,NP,SMALL,L1,ADDLR,ADDTB,MLLINE,
     1    ICLOSE
      SAVE
      IIND = IND + 1
      GOTO (100,90,105), IIND
C
   90 CONTINUE
C
C DRAW LINE AND SAVE POSITION OF PEN.
C
      IXSTOR = IX
      IYSTOR = IY
      CALL PLOTIT (IXSTOR,IYSTOR,1)
      GOTO 110
C
  100 CONTINUE
C
C CHECK IF PEN IS ALREADY CLOSE ENOUGH TO THE WANTED POSITION.
C
      IF ((IABS(IXSTOR-IX)+IABS(IYSTOR-IY)) .LE. ICLOSE) GO TO 110
C
      IXSTOR = IX
      IYSTOR = IY
      CALL PLOTIT (IXSTOR,IYSTOR,0)
      GOTO 110
C
  105 CONTINUE
C
C DO NOT MOVE PEN. JUST UPDATE VARIABLES IXSTOR AND IYSTOR.
C
      IXSTOR = IX
      IYSTOR = IY
C
  110 CONTINUE
C
      RETURN
      END
      SUBROUTINE CFVLD (IENTRY,IIX,IIY)
C
C CFVLD CONNECTS POINTS WHOSE COORDINATES ARE SUPPLIED IN THE ARGUMENTS,
C ACCORDING TO THE DASH PATTERN WHICH IS PASSED FROM ROUTINE DASHDB IN
C THE ARRAY IP IN COMMON DSHD.
C
C
      COMMON /DSHD/   ISL        ,L          ,IP(16)
      COMMON /DSHDA/  IFSTFL
      COMMON /DSHDB/ X,Y,X2,Y2,M,BTI,IB,IX,IY
      COMMON/INTPR/IPAU,FPART,TENSN,NP,SMALL,L1,ADDLR,ADDTB,MLLINE,
     1    ICLOSE
      SAVE
C
C CMN IS USED TO DETERMINE WHEN TO STOP DRAWING A LINE SEGMENT
C
      DATA CMN/1.5/
C
C IMPOS IS USED AS AN IMPOSSIBLE PEN POSITION.
C
      DATA IMPOS /-9999/
C
C
C  ISL= -1  ALL BLANK  ) FLAG TO AVOID MOST CALCULATIONS
C        0  DASHED     )   IF PATTERN IS ALL SOLID OR
C        1  ALL SOLID  )   ALL BLANK
C
C     X,IX,Y,IY    CURRENT POSITION
C     X1,Y1        START OF A USER LINE SEGMENT
C     X2,Y2        END OF A USER LINE SEGMENT
C
C  SEGMENT TYPES ARE RECOGNIZED AS FOLLOWS
C     SOLID - WORD IN IP-ARRAY CONTAINS POSITIVE INTEGER LESS THAN
C              16*IPAU*2**(15-10)
C     GAP - WORD IN IP-ARRAY CONTAINS NEGATIVE INTEGER, ABSOLUTE VALUE
C              OF WHICH IS LESS THAN 16*IPAU*2**(15-10)
C     THE IP ARRAY IS COMPOSED OF L ELEMENTS.
C
C     BTI - BITS THIS INCREMENT
C     BPBX,BPBY BITS PER BIT X(Y)
C
C
C BRANCH DEPENDING ON FUNCTION TO BE PERFORMED.
C
      GO TO (330,305,350),IENTRY
C
C INITIALIZE VARIABLES (ENTRY FRSTD ONLY)
C
   30 CONTINUE
      X = IX
      Y = IY
      X2 = X
      Y2 = Y
      M = 1
      MX = IABS(IP(1))
      BTI = MX
      IB = ISIGN(1,IP(1))
      GO TO 300
C
C MAIN LOOP START
C
   50 CONTINUE
         X1 = X2
         Y1 = Y2
         MX = IIX
         MY = IIY
         X2 = MX
         Y2 = MY
         DX = X2-X1
         DY = Y2-Y1
         D = SQRT(DX*DX+DY*DY)
         IF (D .LT. CMN) GO TO 190
         BPBX = DX/D
         BPBY = DY/D
         CALL DRAWPV (IX,IY,0)
   70    BTI = BTI-D
         IF (BTI) 100,100,80
C
C LINE SEGMENT WILL FIT IN CURRENT PATTERN ELEMENT
C
   80    X = X2
         Y = Y2
         IX = X2
         IY = Y2
         IF (IB) 200,300,90
   90    CALL DRAWPV (IX,IY,1)
         GO TO 200
C
C LINE SEGMENT WONT FIT IN CURRENT PATTERN ELEMENT
C DO IT TO END OF ELEMENT, SAVE HOW MUCH OF SEGMENT LEFT TO DO (D)
C
  100    BTI = BTI+D
         D = D-BTI
         X = X+BPBX*BTI
         Y = Y+BPBY*BTI
         IX = X+.5
         IY = Y+.5
         IF (IB) 110,300,120
  110    CALL DRAWPV (IX,IY,0)
         GO TO 130
  120    CALL DRAWPV (IX,IY,1)
C
C GET THE NEXT PATTERN ELEMENT
C
  130    M = MOD(M,L)+1
         MX = IABS(IP(M))
         BTI = MX
         IB = ISIGN(1,IP(M))
         GO TO 70
  190    X2 = X1
         Y2 = Y1
  200 CONTINUE
  300 RETURN
C
C *************************************
C
C ENTRY VECTD (XX,YY)
C
  305 CONTINUE
C
C TEST FOR PREVIOUS CALL TO FRSTD.
C
      IF (IFSTFL .EQ. 2) GO TO 310
C
C INFORM USER - NO PREVIOUS CALL TO FRSTD. TREAT CALL AS FRSTD CALL.
C
      CALL SETER('CFVLD - VECTD CALL OCCURS BEFORE A CALL TO FRSTD',
     -           2,2)
      GO TO 330
  310 CONTINUE
      IF (ISL) 300,50,320
  320 IX = IIX
      IY = IIY
      CALL DRAWPV (IX,IY,1)
      GO TO 300
C
C *************************************
C
C     ENTRY FRSTD (FLDX,FLDY)
C
  330 IX = IIX
      IY = IIY
      IFSTFL = 2
C AVOID UNEXPECTED PEN POSITION IF CALLS TO SYSTEM PLOT PACKAGE
C ROUTINES WERE MADE.
      CALL DRAWPV (IMPOS,IMPOS,2)
      IF (ISL) 300,30,340
  340 CALL DRAWPV (IX,IY,0)
      GO TO 300
C
C *************************************
C
C     ENTRY LASTD
C
  350 CONTINUE
C
C     THIS ENTRY JUST FOR UPWARD COMPATIBILITY
C
      GO TO 300
      END
      SUBROUTINE FRSTD (X,Y)
      SAVE
C USER ENTRY PPINT.
      CALL FL2INT (X,Y,IIX,IIY)
      CALL CFVLD (1,IIX,IIY)
      RETURN
      END
      SUBROUTINE VECTD (X,Y)
      SAVE
C USER ENTRY POINT.
      CALL FL2INT (X,Y,IIX,IIY)
      CALL CFVLD (2,IIX,IIY)
      RETURN
      END
      SUBROUTINE LASTD
      SAVE
C USER ENTRY POINT. SEE DOCUMENTATION FOR PURPOSE.
      DATA IDUMMY /0/
      CALL CFVLD (3,IDUMMY,IDUMMY)
      CALL PLOTIT (0,0,0)
      RETURN
      END
      SUBROUTINE CURVED (X,Y,N)
      DIMENSION X(N),Y(N)
      SAVE
C
      CALL FRSTD (X(1),Y(1))
      DO 10 I=2,N
         CALL VECTD (X(I),Y(I))
   10 CONTINUE
      CALL LASTD
C
      RETURN
      END
      SUBROUTINE LINED (XA,YA,XB,YB)
      SAVE
C USER ENTRY POINT.
      DATA IDUMMY /0/
      CALL FL2INT (XA,YA,IXA,IYA)
      CALL FL2INT (XB,YB,IXB,IYB)
C
      CALL CFVLD (1,IXA,IYA)
      CALL CFVLD (2,IXB,IYB)
      CALL CFVLD (3,IDUMMY,IDUMMY)
C
      RETURN
      END
      BLOCKDATA DASHBD
C
C DASHBD IS USED TO INITIALIZE VARIABLES IN NAMED COMMON.
C
      COMMON/INTPR/IPAU,FPART,TENSN,NP,SMALL,L1,ADDLR,ADDTB,MLLINE,
     1    ICLOSE
      COMMON /DSHD/   ISL        ,L          ,IP(16)
      COMMON /DSHDA/  IFSTFL
      COMMON /DSHDC/ IXSTOR,IYSTOR
      COMMON /DSHDD/ IFCFLG, MASK
      SAVE
C
C ISL IS A FLAG FOR AN ALL SOLID PATTERN (+1) OR AN ALL GAP PATTERN (-1)
C
      DATA ISL /1/
C
C
C IFSTFL IS A FLAG TO CONTROL THAT FRSTD IS CALLED BEFORE VECTD IS
C CALLED ANY TIME WHEN DASHDB HAS BEEN CALLED.
C
      DATA IFSTFL /1/
C
C  INTERNAL PARAMETERS
C
      DATA IPAU/3/
      DATA FPART/1./
      DATA TENSN/2.5/
      DATA NP/150/
      DATA SMALL/128./
      DATA L1/70/
      DATA ADDLR/2./
      DATA ADDTB/2./
      DATA MLLINE/384/
      DATA ICLOSE/6/
C
C IFCFLG IS THE FIRST CALL FLAG FOR DASHDB.
C
      DATA IFCFLG /1/
C
C IXSTOR AND IYSTOR CONTAIN THE CURRENT PEN POSITION. THEY ARE
C INITIALIZED TO AN IMPOSSIBLE POSITION
C
      DATA IXSTOR,IYSTOR /-9999,-9999/
C
C
C REVISION HISTORY--------
C
C APRIL 1984        CONVERTED TO FORTRAN77 AND GKS.
C
C DECEMBER 1979     ADDED STATISTICS CALL AND REVISION HISTORY
C                   DID NOT CHANGE CARD COUNT
C
C------------------------------------------------------------
      END
