      SUBROUTINE CONRAN (XD,YD,ZD,NDP,WK,IWK,SCRARR)
      EXTERNAL        CONBDN
      DIMENSION       LNGTHS(4)  ,HOLD(4)
        CHARACTER*110   IWORK
        CHARACTER*13    ENCSCR,  ENSCRY
        CHARACTER*1     ICHAR
        CHARACTER*500   DPAT
        REAL            WIND(4),   VIEW(4),  NWIND(4), NVIEW(4)
      DIMENSION       XD(*)      ,YD(*)      ,ZD(*)      ,WK(*)      ,
     1                IWK(*)     ,SCRARR(*)
C
C
      COMMON /CONRA1/ CL(30)     ,NCL        ,OLDZ       ,PV(210)    ,
     1                FINC       ,HI         ,FLO
      COMMON /CONRA2/ REPEAT     ,EXTRAP     ,PER        ,MESS       ,
     1                ISCALE     ,LOOK       ,PLDVLS     ,GRD        ,
     2                CINC       ,CHILO      ,CON        ,LABON      ,
     3                PMIMX      ,SCALE      ,FRADV      ,EXTRI      ,
     4                BPSIZ      ,LISTOP
      COMMON /CONRA3/ IREC
      COMMON /CONRA4/ NCP        ,NCPSZ
      COMMON /CONRA5/ NIT        ,ITIPV
      COMMON /CONRA6/ XST        ,YST        ,XED        ,YED        ,
     1                STPSZ      ,IGRAD      ,IG         ,XRG        ,
     2                YRG        ,BORD       ,PXST       ,PYST       ,
     3                PXED       ,PYED       ,ITICK
      COMMON /CONRA7/ TITLE      ,ICNT   ,ITLSIZ
      COMMON /CONRA8/ IHIGH      ,INMAJ      ,INLAB      ,INDAT      ,
     1              LEN      ,IFMT       ,LEND       ,
     2                IFMTD      ,ISIZEP     ,INMIN
      COMMON /CONRA9/ ICOORD(500),NP         ,MXXY       ,TR         ,
     1                BR         ,TL         ,BL         ,CONV       ,
     2                XN         ,YN         ,ITLL       ,IBLL       ,
     3                ITRL       ,IBRL       ,XC         ,YC         ,
     4                ITLOC(210) ,JX         ,JY         ,ILOC       ,
     5                ISHFCT     ,XO         ,YO         ,IOC        ,NC
      COMMON /CONR10/ NT         ,NL         ,NTNL       ,JWIPT      ,
     1                JWIWL      ,JWIWP      ,JWIPL      ,IPR        ,
     2                ITPV
      COMMON /CONR11/ NREP       ,NCRT       ,ISIZEL     ,
     1                MINGAP     ,ISIZEM         ,
     2                TENS
      COMMON /CONR12/ IXMAX      ,IYMAX      ,XMAX       ,YMAX
      LOGICAL         REPEAT     ,EXTRAP     ,PER        ,MESS       ,
     1                LOOK       ,PLDVLS     ,GRD        ,LABON      ,
     2                PMIMX      ,FRADV      ,EXTRI      ,CINC       ,
     3                TITLE      ,LISTOP     ,CHILO      ,CON
      COMMON /CONR13/XVS(50),YVS(50),ICOUNT,SPVAL,SHIELD,
     1               SLDPLT
      LOGICAL SHIELD,SLDPLT
      COMMON /CONR14/LINEAR
      LOGICAL LINEAR
      COMMON /CONR15/ ISTRNG
        CHARACTER*64 ISTRNG
        COMMON /CONR16/ FORM
        CHARACTER*10 FORM
        COMMON /CONR17/ NDASH, IDASH, EDASH
        CHARACTER*10 NDASH, IDASH, EDASH
        COMMON /RANINT/ IRANMJ, IRANMN, IRANTX
        INTEGER OPLASF, OTXASF, LASF(13), OCOLI, OTEXCI
        SAVE
C
C
        DATA LNGTHS(1),LNGTHS(2),LNGTHS(3),LNGTHS(4)/13,4,21,6/
C
C ICONV CONVERT FORM 0-32767 TO 1-1024
C
        DATA ICONV/32/
C
C IABOVE AMOUNT TITLE IS PLACED ABOVE PLOT
C IBELOW, IBEL2 AMOUNT MESSAGE IS BELOW PLOT
C
        DATA IABOVE,IBELOW,IBEL2/30,-30,-45/
C
C
C  THE FOLLOWING CALL IS FOR MONOTORING LIBRARY USE AT NCAR
C
      CALL Q8QST4 ('NSSL','CONRAN','CONRAN','VERSION 01')
C
C  LIST THE OPTION VALUES IF REQUESTED
C
      IF (LISTOP) CALL CONOUT (2)
C
C  SET SWITCH TO MAP TRIANGLES, IN CONLOC, FOR QUICK SEARCHES
C
      NIT = 0
C
C  TEST TO SEE IF ENOUGH INPUT DATA
C
      IF (NDP.GE.NCP) GO TO    10
      CALL SETER (' CONRAN - INPUT PARAMETER NDP LESS THAN NCP',1,
     1             IREC)
      RETURN
C
   10 IF (NCPSZ.GE.NCP .AND. NCP.GE.2) GO TO    20
      CALL SETER (' CONRAN - NCP LT 2 OR GT NCPSZ',2,IREC)
C
   20 IWK(1) = NDP
      IWK(2) = NCP
      IWK(3) = 1
C
C  SET POLYLINE COLOR ASF TO INDIVIDUAL
C
        CALL GQASF(IERR,LASF)
        OPLASF = LASF(3)
        LASF(3) = 1
        OTXASF = LASF(10)
        LASF(10) = 1
        CALL GSASF(LASF)
C
C  INQUIRE CURRENT POLYLINE AND TEXT COLOR
C
        CALL GQPLCI(IERR,OCOLI)
        CALL GQTXCI(IERR,OTEXCI)
C
C  SET POLYLINE AND TEXT COLOR TO VALUE IN COMMON
C
        CALL GSPLCI(IRANMJ)
      CALL GSTXCI(IRANTX)
C
C CONSTRUCTION OF WORK SPACE POINTERS
C
C TRIANGLE POINT NUMBERS
C
      JWIPT = 16
C
C SCRATCH SPACE
C
      JWIWL = 6*NDP + 1
C
C  END POINTS OF BORDER LINE SEGMENTS AND TRIANGLE NUMBER
C
      JWIPL = 24*NDP + 1
C
C  POINT NUMBERS WHERE THE NCP DATA POINTS AROUND EACH POINT
C
      JWIPC = 27*NDP + 1
C
C  SCRATCH SPACE
C
      JWIWP = 30*NDP + 1
C
C  PARTIAL DERIVATIVES AT EACH DATA POINT
C
      IPR = 8*NDP + 1
C
C  TEST IF REPEAT (JUST NEW CONTOURS OF INTERPOLATED DATA)
C  OR NO REPEAT (TRIANGULATE AND CONTOUR)
C
      IF (REPEAT) GO TO    30
C
C TRIANGULATES THE X-Y PLANE.
C
      CALL CONTNG (NDP,XD,YD,NT,IWK(JWIPT),NL,IWK(JWIPL),IWK(JWIWL),
     1             IWK(JWIWP),WK)
      IF (NERRO(ITEMP).NE.0) RETURN
C
      IWK(5) = NT
      IWK(6) = NL
      NTNL = NT+NL
C
C  SKIP IF NOT LINEAR INTERPOLATION
C
      IF (.NOT.LINEAR) GO TO 25
C
C  FIND THE COEFICENTS FOR LINER INTERPOLATION OF EACH TRIANGLE
C
      CALL CONLIN(XD,YD,ZD,NT,IWK(JWIPT),WK(IPR))
      GO TO 35
C
C
C DETERMINES NCP POINTS CLOSEST TO EACH DATA POINT.
C
 25   CALL CONDET (NDP,XD,YD,NCP,IWK(JWIPC))
C
C  ESTIMATE THE PARTIAL DERIVATIVES AT ALL DATA POINTS
C
      CALL CONINT (NDP,XD,YD,ZD,NCP,IWK(JWIPC),WK(IPR))
C
C  VERIFY DATA VALUES VALID
C
   30 NT = IWK(5)
      NL = IWK(6)
      NTNL = NT+NL
C
C  COMPUTE STEP SIZE FOR CONTOURING
C
 35   CALL CONSTP (XD,YD,NDP)
C
C  SAVE ORIGINAL WINDOW, VIEWPORT OF TRANSFORMATION 1, AND ORIGINAL
C  LOG SCALING FLAG.
C
        CALL GQCNTN(IER,IOLDNT)
        CALL GQNT(IOLDNT,IER,WIND,VIEW)
        RX1 = VIEW(1)
        RX2 = VIEW(2)
        RY1 = VIEW(3)
        RY2 = VIEW(4)
C  SAVE NORMALIZATION TRANSFORMATION 1
        CALL GQNT(1,IER,WIND,VIEW)
        CALL GETUSV('LS',IOLLS)
C
C  DETERMINE SCALING OPTION
C
      ISC = ISCALE+1
      GO TO (   40,   60,   50),ISC
C
C  CONRAN SETS SCALING FACTOR
C
   40 CALL SET(PXST,PXED,PYST,PYED,XST,XED,YST,YED,1)
      GO TO 60
C
C  CONRAN PLOTS WITHIN USERS BOUNDARIES
C
   50 CALL SET(RX1,RX2,RY1,RY2,XST,XED,YST,YED,1)
C
C  IF TRIANGULATION PLOT ONLY BRANCH
C
   60 IF (EXTRI) GO TO   390
C
C  GENERATE CONTOURS IF NONE SUPPLIED BY USER
C
      CALL CONCLS (ZD,NDP)
      IF (NERRO(ITEMP).NE.0) RETURN
C
C  REORDER THE CONTOUR LINES FOR CORRECT PATTERN DISPLAY
C
      MAJLNS = 0
      IF (LABON) CALL CONREO (MAJLNS)
C
C  MAKE SURE INTEGER COORDINATES IN 1-1024 RANGE
C
      CALL SETUSV('XF',10)
        CALL SETUSV('YF',10)
C
C  SET THE DASH PATTERNS TO DEFAULT IF THEY HAVE NOT BEEN SET
C
C
      IF (IDASH(1:1).NE.' ') GO TO        80
C
C  SET POSITIVE CONTOUR VALUE TO DEFAULT
C
        IDASH = '$$$$$$$$$$'
   80 IF (NDASH(1:1).NE.' ') GO TO       100
C
C  SET NEGATIVE CONTOUR DASH PATTERN TO DEFAULT
C
        NDASH = '$$$$$$$$$$'
  100 IF (EDASH(1:1).NE.' ') GO TO   120
C
C  SET EQUAL CONTOUR DASH PATTERN TO DEFAULT
C
        EDASH = '$$$$$$$$$$'
C
C  INITIALIZE THE CONTOURING DATA STRUCTURE
C
  120 IF (.NOT.EXTRAP) YST = YST+STPSZ
C
C  LOAD THE SCRATCH SPACE
C
      CALL CONLOD (XD,YD,ZD,NDP,WK,IWK,SCRARR)
C
C  PERFORM SHIELDING IF SO REQUESTED
C
      IF (SHIELD) CALL CONSLD(SCRARR)
C
C  *******************************************************
C  *                                                     *
C  * IF THE USER NEEDS TO DIVIDE THE PROGRAM UP          *
C  * THIS IS THE BREAK POINT.  ALL SUBROUTINES CALLED    *
C  * PRIOR TO THIS MESSAGE ARE NOT USED AGAIN AND        *
C  * ALL ROUTINES AFTER THIS MESSAGE ARE NOT USED        *
C  * ANY EARLIER.  NOTE THIS ONLY REFEARS TO ENTRY POINTS*
C  * WHICH ARE PART OF THE CONRAN PACKAGE.               *
C  * ALL DATA STRUCTURES AND VARIABLES MUST BE RETAINED. *
C  *******************************************************
C
C
C  PLOT RELATIVE MINIMUMS AND MAXIMUMS IF REQUESTED
C
      IF (PMIMX) CALL CONPMM (SCRARR)
C
C
      LENDAS = NREP*10
C
C  SET THE ERROR MODE TO RECOVERY FOR THE CONTOURING STORAGE ERROR
C
      CALL ENTSR (IROLD,1)
C
C  DRAW THE CONTOURS
C
      DO   250 I=1,NCL
C
          CONV = CL(I)
          IF (CONV.GE.BPSIZ) GO TO   150
C
C  SET UP NEGATIVE CONTOUR PATTERN
C
              DO   140 J=1,10
                ICHAR = NDASH(J:J)
                  DO   130 K=1,NREP
                DPAT( J+( 10*(K-1) ): J+( 10*(K-1)) ) = ICHAR
  130             CONTINUE
  140         CONTINUE
          GO TO   210
C
C  SET UP POSITIVE CONTOUR DASH PATTERN
C
  150     IF (CONV.EQ.BPSIZ) GO TO   180
              DO   170 J=1,10
                ICHAR = IDASH(J:J)
                  DO   160 K=1,NREP
                  DPAT( J+( 10*(K-1) ): J+( 10*(K-1)) ) = ICHAR
  160             CONTINUE
  170         CONTINUE
          GO TO   210
C
C  SET UP EQUAL CONTOUR DASH PATTERN
C
  180         DO   200 J=1,10
                ICHAR = EDASH(J:J)
                  DO   190 K=1,NREP
                DPAT( J+( 10*(K-1) ): J+( 10*(K-1)) ) = ICHAR
  190             CONTINUE
  200         CONTINUE
C
  210     IF (I.GT.MAJLNS) GO TO   230
C
C  SET UP MAJOR LINES
C
          CALL GSPLCI (IRANMJ)
          CALL CONECD (CONV,IWORK,NCUSED)
          NCHAR = LENDAS + NCUSED
        DPAT(LENDAS+1:NCHAR) = IWORK(1:NCUSED)
          GO TO   240
C
C  SET UP MINOR LINES
C
  230     NCHAR = 10
      CALL GSPLCI (IRANMN)
C
C  PROCESS FOR ALL CONTOURS
C
  240     CALL DASHDC (DPAT(1:NCHAR),NCRT,ISIZEL)
C
C  DRAW ALL CONTOURS AT THIS LEVEL
C
          CALL CONDRW (SCRARR)
C
C  GET NEXT CONTOUR LEVEL
C
  250     CONTINUE
C
C  CONTOURING COMPLETED CHECK FOR OPTIONAL OUTPUTS ON PLOT
C
C  FIRST SET ERROR MODE BACK TO USERS VALUE
C
      CALL RETSR (IROLD)
C
C  GET PLOT BOUNDRIES FOR TITLING AND MESSAGE POSITIONING
C
      CALL GQCNTN(IER,ICN)
        CALL GQNT(ICN,IER,NWIND,NVIEW)
        XST = NWIND(1)
        XED = NWIND(2)
        YST = NWIND(3)
        YED = NWIND(4)
        CALL GETUSV('LS',LT)
C
C  RESET POLYLINE COLOR INDEX TO MAJOR (NORMAL)
C
        CALL GSPLCI (IRANMJ)
C
C  DRAW SHIELD ON PLOT IF REQUESTED
C
      IF(SLDPLT.AND.SHIELD) CALL CONDSD
C
C  DRAW PERIMETER ARROUND PLOT IF DESIRED
C
      IF (PER) CALL PERIM (ITICK,0,ITICK,0)
C
C  DRAW GRID IF REQUESTED
C
      IF (GRD) CALL GRID (ITICK,0,ITICK,0)
C
C  PLOT THE DATA VALUES IF REQUESTED
C
      IF (.NOT.PLDVLS) GO TO   260
      CALL CONPDV (XD,YD,ZD,NDP)
C
C  OUTPUT TITLE IF REQUESTED
C
  260 IF (.NOT.TITLE) GO TO   270
        CALL GSTXCI (IRANTX)
      CALL FL2INT (XED,YED,MX,MY)
      MY = (MY/ICONV)+IABOVE
        ILAST = 64
        DO 261 I = 64,1,-1
            IF (ISTRNG(I:I) .NE. ' ')THEN
                  ILAST = I + 1
                  GOTO 262
            ENDIF
  261 CONTINUE
  262 CONTINUE
C
C  POSITION STRINGS PROPERLY IF COORDS ARE IN PAU'S
C
      CALL GQCNTN(IER,ICN)
      CALL GSELNT(0)
      XC = ( NVIEW(1) + NVIEW(2)) / 2.
      YC = CPUY(MY)
      CALL WTSTR(XC,YC,ISTRNG(1:ILAST),ITLSIZ,0,0)
      CALL GSELNT(ICN)
C
C
C  OUTPUT MESSAGE IF REQUESTED
C
  270 IF (.NOT.MESS) GO TO   390
C
        CALL GSTXCI(IRANTX)
      CALL FL2INT (XST,YST,MX,MY)
      MY = (MY/ICONV)
C
C  IF PERIMETER OR GRID PUT OUT TICK INTERVAL
C
        IMSZ = 0
      IF (.NOT.PER .AND. .NOT.GRD) GO TO   300
        IWORK(1:36) = 'X INTERVAL=              Y INTERVAL='
        WRITE(ENCSCR,'(G13.5)')XRG
        WRITE(ENSCRY,'(G13.5)')YRG
        IWORK(12:24) = ENCSCR
        IWORK(37:49) = ENSCRY
        IMSZ = 50
  300 IF (SCALE .EQ. 1.) GOTO 330
            IWORK(IMSZ:IMSZ+10) = ' SCALED BY '
            WRITE(ENCSCR,'(G13.5)')SCALE
            IWORK(IMSZ+11:IMSZ+23) = ENCSCR
            IMSZ = 73
  330 IF (IMSZ .NE. 0) THEN
        ILAST = IMSZ
        DO 291 I = IMSZ,1,-1
            IF (IWORK(I:I) .NE. ' ')THEN
                  ILAST = I + 1
                  GOTO 292
            ENDIF
  291 CONTINUE
  292 CONTINUE
C
C  POSITION STRINGS PROPERLY IF COORDS ARE IN PAU'S
C
      CALL GQCNTN(IER,ICN)
      CALL GSELNT(0)
      YC = CPUY(MY+IBEL2)
      CALL WTSTR(XC,YC,IWORK(1:ILAST),8,0,0)
      CALL GSELNT(ICN)
        ENDIF
C
C  PRODUCE CONTOUR INFO
C
      IWORK(1:42) = 'CONTOUR FROM              TO              '
      IWORK(43:77) = 'CONTOUR INTERVAL OF                '
      HOLD(1) = FLO
      HOLD(2) = HI
      HOLD(3) = FINC
        WRITE(ENCSCR,'(G13.5)')HOLD(1)
        IWORK(13:25) = ENCSCR
        WRITE(ENCSCR,'(G13.5)')HOLD(2)
        IWORK(29:41) = ENCSCR
        WRITE(ENCSCR,'(G13.5)')HOLD(3)
        IWORK(62:74) = ENCSCR
C
C  IF IRREGULAR SPACED CONTOURS MODIFY CONTOUR INTERVAL STATEMENT
C
      IF (FINC.GE.0.) GO TO   380
      NC = 62
          IWORK(NC:NC+15) = ' IRREGULAR      '
C
        ILAST = 77
  380 DO 381 I = 77,1,-1
            IF (IWORK(I:I) .NE. ' ')THEN
                  ILAST = I + 1
                  GOTO 382
            ENDIF
  381 CONTINUE
  382 CONTINUE
C
C  POSITION STRINGS PROPERLY IF COORDS ARE IN PAU'S
C
      CALL GQCNTN(IER,ICN)
      CALL GSELNT(0)
      YC = CPUY(MY+IBELOW)
      CALL WTSTR(XC,YC,IWORK(1:ILAST),8,0,0)
      CALL GSELNT(ICN)
C
C
C
C  PLOT TRIANGLES IF REQUESTED
C
  390 IF (LOOK) THEN
          CALL GSPLCI(IRANMN)
          CALL CONTLK (XD,YD,NDP,IWK(JWIPT))
          CALL GSPLCI(IRANMJ)
      ENDIF
C  RESTORE NORMALIZATION TRANSFORMATION 1 AND LOG SCALING
      IF (ISCALE .NE. 1) THEN
        CALL SET(VIEW(1),VIEW(2),VIEW(3),VIEW(4),
     -           WIND(1),WIND(2),WIND(3),WIND(4),IOLLS)
      ENDIF
C RESTORE ORIGINAL NORMALIZATION TRANSFORMATION NUMBER
      CALL GSELNT (IOLDNT)
C
C  RESTORE ORIGINAL COLOR
C
      CALL GSPLCI(OCOLI)
      CALL GSTXCI(OTEXCI)
C
C  RESTORE POLYLINE COLOR ASF TO WHAT IT WAS ON ENTRY TO GRIDAL
C
        LASF(10) = OTXASF
        LASF(3) = OPLASF
        CALL GSASF(LASF)
      RETURN
      END
