      SUBROUTINE FRSTC (MX,MY,IENT)
      SAVE
C
      COMMON /ISOSR2/ LX         ,NX         ,NY         ,ISCR(8,128),
     1                ISCA(8,128)
      COMMON /ISOSR4/ RX         ,RY
      COMMON /ISOSR5/ NBPW       ,MASK(16)   ,GENDON
      LOGICAL         GENDON
      COMMON /ISOSR8/ NMASK(16)  ,IXOLD      ,IYOLD      ,IBTOLD     ,
     1                HBFLAG     ,IOSLSN     ,LRLX       ,IFSX       ,
     2                IFSY       ,FIRST      ,IYDIR      ,IHX        ,
     3                IHB        ,IHS        ,IHV        ,IVOLD      ,
     4                IVAL       ,IHRX       ,YCHANG     ,ITPD       ,
     5                IHF
      LOGICAL         YCHANG     ,HBFLAG     ,FIRST      ,IHF
C
C
C  DRAW LINE TO THE POINT MX,MY
C
C  ENTER THE POINT INTO THE CURRENT SCREEN, ISCR, IF THE POINT CONFORMS
C  TO THE SHADING ALGORITHM.
C  THE POINT IS NOT ENTERED WHEN;
C  1. IT IS THE SAME POINT USED IN THE LAST CALL, RESOLUTION PROBLEM
C  2. IT IS PART OF A HORIZONTAL LINE BUT NOT AN END POINT
C  3.  THE ENTIRE CONTOUR RESTS ON A HORIZONTAL PLANE
C
C  WHEN DRAWING A HORIZONTAL LINE THREE CONDITIONS EXIST;
C  1. WHEN THE LINE IS A HORIZONTAL STEP ENTER ONLY THE OUTSIDE POINT.
C     A HORIZONTAL STEP IS DEFINED BY THE ENTERING AND EXITING Y
C     DIRECTION THAT IS THE SAME.
C  2. ENTER BOTH END POINTS OF A HORIZONTAL TURNING POINT. A HORIZONTAL
C     TURNING POINT IS A LINE WITH GREATER THAN 1 HORIZONTAL BITS
C     AND THE ENTERING AND EXITING Y DIRECTION IS DIFFIRENT.
C  3.  WHEN THE ENTIRE CONTOUR IS A HORIZONTAL LINE NO POINTS ARE
C      ENTERED. THIS CONDITION IS DETECTED BY THE STATUS OF YCHANG.
C      IF IT IS TRUE THEN THE CONTOUR IS NOT A SINGLE HORIZONTAL LINE.
C
C  THE PREVIOUS POINT IS ERASED IF IT IS A VERTICAL TURNING POINT.
C  A VERTICAL TURNING POINT IS A HORIZONTAL LINE WITH ONLY 1 POINT
C  AND THE ENTERING AND EXITING Y DIRECTION DIFFERS.THIS DATA IS
C  IN THE VARIABLES IOSLSN-OLD SLOPE AND ISLSGN-NEW SLOPE.
C  THE CHANGE IN SLOPE MUST BE -1 TO 1 OR 1 TO -1.
C
C  OTHERWISE THE POINT IS ENTERED INTO ISCR.
C
C  THE TWO ENTRY POINTS ARE REQUIRED BY THE HARDWARE DRAWING ROUTINES.
C  FIRSTC IS USED FOR THE FIRST POINT ON THE CONTOUR. THE REMAINING
C  POINTS ON THE SAME CONTOUR ARE ENTERED VIA VECTC.
C
      DATA IONE/1/
      AVE(A,B) = (A+B)*.5
C
C  COMPUTE VISIBILITY OF THIS POINT
C
C  WARNING
C  IF X OR Y PLOTTER MAXIMUM VALUE RANGES FALL BELOW 101 THEN THE
C  FOLLOWING TWO STATEMENTS WHICH SET IX AND IY MUST BE CHANGED.
C  REPLACE THE CONSTANT 1.0 BY 0.5 IN THE STATEMENTS WHERE THE
C  MAXIMUM PLOTTER VALUE IS LESS THAN 101 FOR THAT DIRECTION.  THE
C  PLOTTER CORDINATE RANGES ARE SET IN SET32.
C
      IX = FLOAT(MX-1)*RX+1.0
      NRLX = IX
      IY = FLOAT(MY-1)*RY+1.0
      IBIT = NBPW-MOD(IX,NBPW)
      IX = IX/NBPW+1
      IVNOW = IAND(ISHIFT(ISCA(IX,IY),1-IBIT),IONE)
C
C  DECIDE IF FRSTC OR VECTC CALL
C
      IF (IENT .NE. 1) GO TO  10
C
      XOLD = MX
      YOLD = MY
C
C
C  SET INITIAL VALUES
C
      IHF = .FALSE.
      IYDIR = 0
      ITPD = 0
      IVAL = 0
      IOSLSN = 0
      IFSX = NRLX
      IFSY = IY
      LASTV = IVNOW
      HBFLAG = .FALSE.
      YCHANG = .FALSE.
      CALL PLOTIT (IFIX(XOLD),IFIX(YOLD),0)
      GO TO 180
C
C****************************  ENTRY VECTC  ****************************
C     ENTRY VECTC (MX,MY)
C
   10 XNOW = MX
      YNOW = MY
      JUMP = IVNOW*2+LASTV+1
      GO TO ( 20, 30, 40, 50),JUMP
C
C BOTH VISIBLE
C
   20 CALL PLOTIT (IFIX(XNOW),IFIX(YNOW),1)
      GO TO  50
C
C JUST TURNED VISIBLE
C
   30 CALL PLOTIT (IFIX(AVE(XNOW,XOLD)),IFIX(AVE(YNOW,YOLD)),0)
      GO TO  50
C
C JUST TURNED INVISIBLE
C
   40 CALL PLOTIT (IFIX(AVE(XNOW,XOLD)),IFIX(AVE(YNOW,YOLD)),1)
C
C BOTH INVISIBLE
C
   50 XOLD = XNOW
      YOLD = YNOW
      LASTV = IVNOW
C
C  TEST FOR RESOLUTION PROBLEM
C
      IF (NRLX.EQ.LRLX .AND. IY.EQ.IYOLD) RETURN
C
C  TEST FOR HORIZONTAL BITS
C
      IF (IYOLD .NE. IY) GO TO  70
C
C  HORIZONTAL BITS DETECTED. SET FLAG AND EXIT.
C  THIS AND THE NEXT HORIZONTAL BIT TEST IS NECESSARY FOR ISCR TO
C  CONFORM TO THE SHADING ALGORITHM IN SUBROUTINE FILLIN
C
C
C  IF HORIZONTAL LINE PREVIOUSLY DETECTED EXIT
C
      IF (.NOT.HBFLAG) GO TO  60
C
C  IF END OF CONTOUR ON A HORIZONTAL LINE BRANCH FOR SPECIAL PROCESSING.
C
      IF (NRLX.EQ.IFSX .AND. IY.EQ.IFSY) GO TO 210
      GO TO 200
C
C  SAVE SLOPE PRIOR TO HORIZONTAL LINE
C
   60 IHX = IXOLD
      IHB = IBTOLD
      IHS = IOSLSN
      IOSLSN = 0
      HBFLAG = .TRUE.
      IHRX = LRLX
      IHV = IVOLD
      IF (LRLX.EQ.IFSX .AND. IYOLD.EQ.IFSY) IHF = .TRUE.
C
C  THIS IS THE SECOND TRAP FOR END OF CONTOUR ON A HORIZONTAL LINE.
C
      IF (NRLX.EQ.IFSX .AND. IY.EQ.IFSY) GO TO 210
      GO TO 200
C
C  COMPUTE THE SLOPE TO THIS POINT
C
   70 IF (IY-IYOLD)  80, 90,100
   80 ISLSGN = 1
      GO TO 110
   90 ISLSGN = 0
      GO TO 120
  100 ISLSGN = -1
  110 IF (IYDIR .EQ. 0) IYDIR = ISLSGN
  120 CONTINUE
C
C  IF PROCESS REACHES THIS CODE THE CONTOUR IS NOT CONTAINED ON A SINGLE
C  HORIZONTAL  PLANE, SO RECORD THIS FACT BY SETTING Y CHANGE FLAG.
C
      YCHANG = .TRUE.
C
C  TEST FOR END OF HORIZONTAL LINE
C
      IF (.NOT.HBFLAG) GO TO 160
      HBFLAG = .FALSE.
C
C  HORIZONTAL LINE JUST ENDED
C
C  TEST FOR REDRAW
C
      ITEMP = IAND(ISCR(IXOLD,IYOLD),MASK(IBTOLD))
      IF ((IHV .EQ. 0) .AND. (ITEMP .EQ. 0)) GO TO 130
C
C  REDRAWING ERASE THIS POINT
C
      ISCR(IXOLD,IYOLD) = IAND(ISCR(IXOLD,IYOLD),NMASK(IBTOLD))
      ISCR(IHX,IYOLD) = IAND(ISCR(IHX,IYOLD),NMASK(IHB))
      GO TO 170
C
C  TEST FOR STEP PROBLEM
C
  130 IF (IHS .NE. ISLSGN) GO TO 140
C
C  STEP PROBLEM
C
      GO TO 170
C
C  TURNING PROBLEM HORIZONTAL LINE IS A TURNING POINT
C
  140 CONTINUE
C
C  ENTER THE TURNING POINT ONLY IF IT IS NOT THE SECOND SUCCEEDING
C  EVENT IN A ROW
C
      ICTPD = 1
      IF (IHRX .GT. NRLX) ICTPD = -1
      IF (ICTPD .NE. ITPD) GO TO 150
      ITPD = 0
C
C  ERASE THE FIRST POINT
C
      ISCR(IHX,IYOLD) = IAND(ISCR(IHX,IYOLD),NMASK(IHB))
      GO TO 170
C
C  ENTER THE TURNING POINT
C
  150 CONTINUE
      ITPD = ICTPD
C
C  ENTER THE SECOND POINT
C
      ISCR(IXOLD,IYOLD) = IOR(ISCR(IXOLD,IYOLD),MASK(IBTOLD))
      GO TO 170
C
C  CHECK IF PREVIOUS ENTRY WAS A VERTICAL TURNING POINT.
C  IF SO ERASE IT.
C
  160 IF (ISLSGN.EQ.IOSLSN .OR. (IOSLSN.EQ.0 .OR. ISLSGN.EQ.0))
     1    GO TO 170
      ITPD = 0
      ISCR(IXOLD,IYOLD) = IAND(ISCR(IXOLD,IYOLD),NMASK(IBTOLD))
C
  170 IOSLSN = ISLSGN
C
C  CHECK IF THIS GRID POINT PREVIOUSLY ACTIVATED
C
      IVAL = IAND(ISCR(IX,IY),MASK(IBIT))
C
C  IF GRID POINTS ACTIVATED BRANCH
C
      IF (IVAL .NE. 0) GO TO 190
C
C  GRID POINT NOT ACTIVATED   SET AND EXIT
C
  180 CONTINUE
      ISCR(IX,IY) = IOR(ISCR(IX,IY),MASK(IBIT))
      GO TO 200
C
C  THIS POINT IS BEING REDRAWN SO ERASE IT.
C  (THIS IS TO CONFORM WITH THE SHADING ALGORITHM, FILLIN.
C  HOWEVER IF BACK TO STARTING POINT DO NOT ERASE
C
  190 IF (NRLX.EQ.IFSX .AND. IY.EQ.IFSY) RETURN
      ISCR(IX,IY) = IAND(ISCR(IX,IY),NMASK(IBIT))
C
C
  200 IXOLD = IX
      LRLX = NRLX
      IYOLD = IY
      IBTOLD = IBIT
      IVOLD = IVAL
      RETURN
C
C  PERFORM THIS OPERATION WHEN A CONTOUR STARTS OR ENDS ON A HORIZONTAL
C  LINE.
C
  210 CONTINUE
C
C  ERASE THE FIRST POINT OF A CONTOUR WHEN IT IS PART OF A HORIZONTAL
C  LINE SEGMENT AND IS NOT THE ENDPOINT OF THE SEGMENT
C
      IF (.NOT.IHF) GO TO 220
      ISCR(IX,IY) = IAND(ISCR(IX,IY),NMASK(IBIT))
  220 CONTINUE
C
C  ERASE THE FIRST POINT OF A HORIZONTAL LINE SEGMENT WHEN IT ENDS
C  THE CONTOUR AND IS NOT THE HIGHEST LINE SEG ON THS SIDE.
C
      IF (.NOT.YCHANG) GO TO 230
      IF (IYDIR .NE. IHS) GO TO 200
  230 ISCR(IHX,IY) = IAND(ISCR(IHX,IY),NMASK(IHB))
      GO TO 200
      END
