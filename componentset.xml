<!DOCTYPE componentset SYSTEM "componentinfo.dtd">
<componentset>

<component id="messgen">
  <version>1.2</version>
  <path>applications/messgen</path>
  <description>Starlink Facility Error Message Generation</description>
  <abstract>
    <p>The MESSGEN program creates files
      required for proper operation of the system for associating messages with
      Starlink facility status values on UNIX platforms.
      The utility program CREMSG can be used to produce
      source files for MESSGEN.</p>
  </abstract>
  <dependencies >
    <sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>A J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
    <person>
      <name>B K McIlwrath</name>
      <uname>bkm</uname>
      <email>B.K.McIlwrath@rl.ac.uk</email>
    </person>
    <person>
      <name>Norman Gray</name>
      <uname>nxg</uname>
      <email>norman@astro.gla.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="sst">
  <version>1.1</version>
  <path>applications/sst</path>
  <description>SST - A Simple Software Tools Package</description>
  <abstract><p>SST is now considered obsolete; it is included to
      support those applications which currently use it, but it should
      not be used for new code.</p>
    <p>The Simple Software Tools package (SST) is a package of
      applications designed to help with the production of software
      and documentation, with particular emphasis on ADAM programming
      using Fortran 77.</p>
    <p>As its name suggests, SST is intended for performing fairly
      simple manipulation of software, but it aims to tackle some of
      the commonly encountered problems which are not catered for in
      more sophisticated commercial software tools (such as FORCHECK
      and VAXset) which are available on Starlink. In future, SST may
      also duplicate a few of the simpler facilities which commercial
      products offer in order to avoid the cost (and generally much
      higher overheads, such as disk space) which prevent the
      commercial products being freely available on all Starlink
      machines. </p></abstract>
  <dependencies >
    <build>parsecon</build><build>dtask</build><build>chr</build><build>fio</build><build>mers</build><build>par</build><build>psx</build><build>sae</build><build>task</build><sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>R. F. Warren-Smith</name>
    </person>
  </developers>
  <documentation> sun110</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="star2html">
  <version>1.4-6</version>
  <path>applications/star2html</path>
  <description>Convert Starlink documents to hypertext</description>
  <abstract><p>Star2HTML lets you write (or convert) a Starlink document
      so that you can create two versions of it from a single source file.
      A paper version is produced by LaTeX, and a hypertext version
      (suitable for browsing on the web) is produced by latex2html.
      You can tailor each version to its own medium by marking selected text as
      LaTeX-only or HTML-only.</p>
    <p>Star2HTML also includes a set of document templates for producing
      Starlink documents in a standard style (such as `Starlink User
      Note').  They also define new LaTeX commands for adding extra
      links to the hypertext version of your document (without
      affecting the paper version). </p></abstract>
  <dependencies >
    
  </dependencies>
  <developers>
    <person>
      <name>Peter Draper</name>
      <uname>pwd</uname>
      <email>P.W.Draper@durham.ac.uk</email>
    </person>
  </developers>
  <documentation> sun199</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Heavily based on latex2html</p></notes>
</component>

<component id="starconf" buildsupport="yes">
  <description>Starlink autoconf support</description>
  <path>buildsupport/starconf</path>
  <dependencies>
    <build>automake</build>
  </dependencies>
  <developers>
    <person>
      <name>Norman Gray</name>
      <uname>nxg</uname>
      <email>norman@astro.gla.ac.uk</email>
    </person>
  </developers>
</component>

<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="ssn78">
  <version>0.1</version>
  <path>docs/ssn78</path>
  <description>Description of the build system</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies >
    
  </dependencies>
  <developers>
    <person>
      <name>Norman Gray</name>
      <uname>nxg</uname>
      <email>norman@astro.gla.ac.uk</email>
    </person>
  </developers>
  <!-- <documentation></documentation> -->
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="ard">
  <version>2.0-5</version>
  <path>libraries/ard</path>
  <description>ASCII Region Definition</description>
  <abstract><p>The ARD (ASCII Region Definition) system provides a 
     textual language for describing regions within a data array,
     together with software for converting a textual description
     into a pixel mask, or plotting it on a graphics device.
     The textual language is based on a set of keywords identifying
     simple shapes (boxes, circles, lines, etc.).
     These keywords can be combined together using Boolean-style
     operators (AND, OR, NOT, etc.) to create more complex shapes.
     Data arrays can be multi-dimensional.</p></abstract>
  <dependencies >
    <build>sae</build><build>ast</build><build>grp</build><build>subpar</build><link>ast</link><link>psx</link><link>mers</link><link>chr</link><link>pgplot</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>David Berry</name>
      <uname>dsb</uname>
      <email>dsb@ast.man.ac.uk</email>
    </person>
  </developers>
  <documentation> sun183</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="ary">
  <version>1.1-9</version>
  <path>libraries/ary</path>
  <description>A Subroutine Library for Accessing ARRAY Data Structures</description>
  <abstract><p> The ARY library is a set of routines for accessing
  Starlink ARRAY data structures built using the Hierarchical Data
  System (HDS).
    </p></abstract>
  <dependencies >
    <build>sae</build><build>prm</build><build>hds</build><build>chr</build><build>ems</build><link>hds</link><link>ems</link><link>chr</link><link>prm</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Rodney Warren-Smith</name>
      <uname>rfws</uname>
    </person>
  </developers>
  <documentation> sun11</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>

<component id="ast">
  <version>3.3</version>
  <path>libraries/ast</path>
  <description>WCS library</description>
  <abstract>
    <p>The AST library provides a comprehensive range of facilities for
      attaching world coordinate systems to astronomical data, for
      retrieving and interpreting that information in a variety of formats,
      including FITS-WCS, and for generating graphical output based on it.</p>
    <p>This library should be of interest to anyone writing
      astronomical applications which need to manipulate coordinate system
      data, especially celestial or spectral coordinate systems. AST
      is portable and environment-independent.</p>
  </abstract>
  <dependencies >
    <sourceset>sst</sourceset><use>sla</use><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>David Berry</name>
      <uname>dsb</uname>
      <email>dsb@ast.man.ac.uk</email>
    </person>
    <person>
      <name>Norman Gray</name>
      <uname>nxg</uname>
      <email>norman@astro.gla.ac.uk</email>
    </person>
  </developers>
  <documentation> sun210 sun211</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="chr">
  <version>2.2-5</version>
  <path>libraries/chr</path>
  <description>Character Handling Routines</description>
  <abstract><p>The CHR library augments the limited character handling
      facilities provided by the Fortran 77 standard.  It offers a
      range of character handling facilities: from formatting Fortran
      data types into text strings and the reverse, to higher level
      functions such as wild card matching, string sorting, paragraph
      reformatting and justification.  The library may be used simply
      for building text strings for interactive applications or as a
      basis for more complex text processing applications.
    </p></abstract>
  <dependencies >
    <build>sae</build><build>cnf</build><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Anne C Charles</name>
      <uname>acc</uname>
    </person>
    <person>
      <name>P C T Rees</name>
      <uname>pctr</uname>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun40</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="cnf">
  <version>4.0-2</version>
  <path>libraries/cnf</path>
  <description>Mixed Language Programming -- FORTRAN and C</description>
  <abstract><p>The CNF package comprises two sets of software which
      ease the task of writing portable programs in a mixture of
      FORTRAN and C.  F77 is a set of C macros for handling the
      FORTRAN/C subroutine linkage in a portable way, and CNF is a set
      of functions to handle the difference between FORTRAN and C
      character strings, logical values and pointers to dynamically
      allocated memory.</p></abstract>
  <dependencies >
    <sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Rodney F Warren-Smith</name>
      <uname>rfws</uname>
    </person>
    <person>
      <name>Peter M Allan</name>
      <uname>pma</uname>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun209</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="ems">
  <version>2.0-7</version>
  <path>libraries/ems</path>
  <description>EMS -- Error Message Service</description>
  <abstract><p>The purpose of EMS is to provide facilities for
      constructing and storing error messages for future delivery to
      the user -- usually via the Starlink Error Reporting System, ERR
      (see SUN/104).  EMS can be regarded as a simplified version of
      ERR without the binding to any software environment (e.g., for
      message output or access to the parameter and data
      systems).</p></abstract>
  <dependencies >
    <build>sae</build><build>cnf</build><link>cnf</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>P C T Rees</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> ssn4</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>

<component id="fio">
  <version>1.5-3</version>
  <path>libraries/fio</path>
  <description>FORTRAN file I/O routines</description>
  <abstract>FIO/RIO is a subroutine package that allows a FORTRAN
      programmer to access sequential and direct access data files in
      a machine independent manner. The package consists of stand
      alone FIO and RIO routines, which can be used independently of
      the Starlink software environment, plus routines to interface to
      the Starlink parameter system.</abstract>
  <dependencies >
    <build>parsecon</build><build>dtask</build><build>sae</build><build>par</build><link>chr</link><link>ems</link><link>mers</link><link>subpar</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Peter M Allan</name>
      <uname>NONE</uname>
      <email>P.M.Allan@rl.ac.uk</email>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun143</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->


<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="grp">
  <version>3.3</version>
  <path>libraries/grp</path>
  <description>GRP - Routines for Managing Groups of Objects</description>
  <abstract><p>GRP provides facilities for handling groups of objects which
      can be described by character strings (e.g. file names, astronomical
      objects, numerical values, etc). Facilities are provided for storing
      and retrieving such character strings within groups, and for passing
      groups of character strings between applications by means of a text
      file. It also allows the creation of groups in which each element
      is a modified version of an element in another group.</p></abstract>
  <dependencies >
    <build>cnf</build><build>sae</build><build>subpar</build><link>chr</link><link>mers</link><link>psx</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>David Berry</name>
      <uname>dsb</uname>
      <email>dsb@ast.man.ac.uk</email>
    </person>
  </developers>
  <documentation> sun150</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="gsd">
  <version>1.0-1</version>
  <path>libraries/gsd</path>
  <description>Global Section Datafile (GSD) access library</description>
  <abstract><p>This library provides read-only access to GSD files created at the James Clerk Maxwell Telescope. It is mainly useful for accessing JCMT archive data.
    </p></abstract>
  <dependencies >
    <build>prm</build><build>cnf</build><link>prm</link><link>cnf</link><sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Remo P J Tilanus</name>
      <uname>rpt</uname>
    </person>
    <person>
      <name>Horst Meyerdierks</name>
      <uname>hme</uname>
    </person>
    <person>
      <name>Jon Fairclough</name>
      <uname>jhf</uname>
    </person>
    <person>
      <name>Tim Jenness</name>
      <uname>timj</uname>
      <email>t.jenness@jach.hawaii.edu</email>
    </person>
    <person>
      <name>Rachel Padman</name>
      <uname>rp</uname>
    </person>
  </developers>
  <documentation> sun229</documentation>
  <bugreports>t.jenness@jach.hawaii.edu</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="gwm">
  <version>1.5-1</version>
  <path>libraries/gwm</path>
  <description>GWM - X Graphics Window Manager</description>
  <abstract><p>These applications provide a means to create graphics
  windows on an X display that do not disappear when a program
  terminates.
    </p></abstract>
  <dependencies >
    <build>sae</build><build>cnf</build><build>ems</build><link>starx</link><link>ems</link><link>cnf</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>David Terrett</name>
      <uname>dlt</uname>
    </person>
    <person>
      <name>Nicholas Eaton</name>
      <uname>ne</uname>
    </person>
  </developers>
  <documentation> sun130</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="hds">
  <version>4.3-4</version>
  <path>libraries/hds</path>
  <description>Hierarchical Data System</description>
  <abstract>
    <p>HDS is a file-based hierarchical data system designed for the
      storage of a wide variety of information. It is particularly
      suited to the storage of large multi-dimensional arrays (with
      their ancillary data) where efficient access is needed.</p>
    <p>HDS organises data into hierarchies, broadly similar to the
      directory structure of a hierarchical filing system, but
      contained within a single HDS container file.  The
      structures stored in these files are self-describing and
      flexible; HDS supports modification and extension of structures
      previously created, as well as deletion, copying, renaming, etc..</p>
    <p>All information stored in HDS files is portable between the
      machines on which HDS is implemented. Thus, there are no format
      conversion problems when moving between machines.</p>
    <p>The routines in this package may be used to perform operations
      on any HDS data. In addition, HDS forms a toolkit for the
      construction of higher level (more specialised) data structures
      and the software which accesses them.  HDS routines are
      therefore invoked indirectly by many other items of Starlink
      software.</p>
  </abstract>
  <dependencies >
    <build>sae</build><build>cnf</build><build>ems</build><link>chr</link><link>cnf</link><link>ems</link><test>chr</test><test>cnf</test><test>ems</test><test>prm</test><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>R. F. Warren-Smith</name>
    </person>
    <person>
      <name>M. D. Lawden</name>
    </person>
  </developers>
  <documentation> sun92</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="hlp">
  <version>3.3-2</version>
  <path>libraries/hlp</path>
  <description>HLP -- interactive help system</description>
  <abstract><p>The Starlink HLP system allows an application program
      to retrieve named items from a hierarchically-arranged library
      of text.  The facility resembles VAX/VMS HELP.  It consists of a
      library plus utility programs for creating, listing and reading
      help libraries.</p></abstract>
  <dependencies >
    <sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>P T Wallace</name>
      <uname>ptw</uname>
      <email>ptw@star.rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun124</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="idi">
  <version>1.4-5</version>
  <path>libraries/idi</path>
  <description>IDI -- Image Display Interface</description>
  <abstract><p> The Image Display Interface (IDI) is an international
  standard for displaying astronomical data on an image display.  The
  specification of the interface is given in Terrett et al, 1988
  (A&amp;AS, 76, 263).
    </p></abstract>
  <dependencies >
    <build>parsecon</build><build>dtask</build><build>sae</build><build>cnf</build><build>ems</build><link>starx</link><link>ems</link><link>cnf</link><link>gwm</link><link>gns</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Nicholas Eaton</name>
      <uname>ne</uname>
    </person>
    <person>
      <name>Dave Terrett</name>
      <uname>dlt</uname>
    </person>
    <person>
      <name>P Santin</name>
      <uname>santin</uname>
    </person>
  </developers>
  <documentation> sun65</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="mag">
  <version>1.1-4</version>
  <path>libraries/mag</path>
  <description>Fortran access to magentic tape devices</description>
  <abstract><p>
The MAG subroutine library allows a programmer to write portable programs
which access data stored on magnetic tapes.

By using the MAG routines, a program can read and write tapes, position the
tape (both in absolute terms and relative to the current position) and can
control the allocation of the tape drive and the physical mounting of the tape
on systems which provide that facility.

The library is currently supported for Sun Sparcstations running Solaris and
for DEC Alphas running OSF/1. Historically it has been supported for DEC
Ultrix and for SunOS and may still work for them.
    </p></abstract>
  <dependencies >
    <build>parsecon</build><build>dtask</build><build>sae</build><build>par</build><build>hds</build><build>psx</build><build>mers</build><link>par</link><link>hds</link><link>psx</link><link>mers</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Sid Wright</name>
      <uname>slw</uname>
    </person>
    <person>
      <name>Ken Hartley</name>
      <uname>kfh</uname>
    </person>
    <person>
      <name>P M Allan</name>
      <uname>pma</uname>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
    </person>
  </developers>
  <documentation> sun171</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="mers">
  <version>1.8</version>
  <path>libraries/mers</path>
  <description>Message and Error Reporting Systems</description>
  <abstract><p>This package contains two Fortran subroutine libraries,
      MSG and ERR, which can be used to provide informational text to
      the user from any application program.  It also contains a
      preliminary C interface for the two libraries -- this may be
      subject to change in the light of experience.</p>
    <p>The Message Reporting System, MSG, is used for reporting
      non-error information and the Error Reporting System, ERR, is
      used specifically for reporting error messages.</p>
  </abstract>
  <dependencies >
    <build>cnf</build><build>ems</build><build>sae</build><link>chr</link><link>ems</link><link>psx</link><link>subpar</link><sourceset>messgen</sourceset><sourceset>messgen</sourceset><sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>P C T Rees</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun104</documentation> 
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="nbs">
  <version>2.5-9</version>
  <path>libraries/nbs</path>
  <description>NBS Noticeboard System</description>
  <abstract><p> The noticeboard system routines provide a fast means
  for processes to share data in global memory. A given process may
  own as many noticeboards as it wishes and may access noticeboards
  owned by other processes.  Normally the only process that writes to
  a noticeboard is its owner but other processes that know what they
  are doing can subvert this rule either by calling a special routine
  or else by accessing noticeboard data by using a pointer.
    </p></abstract>
  <dependencies >
    <build>sae</build><build>ems</build><build>cnf</build><link>ems</link><link>cnf</link><link>chr</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>William Lupton</name>
      <uname>wfl</uname>
    </person>
    <person>
      <name>David Allan</name>
      <uname>dja</uname>
    </person>
  </developers>
  <documentation> sun77</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="ndf">
  <version>1.5-9</version>
  <path>libraries/trn</path>
  <description>NDF - Routines for Accessing the Extensible N-Dimensional Data Format</description>
  <abstract><p>The Extensible N-Dimensional Data Format (NDF) is a
  format for storing bulk data in the form of N-dimensional arrays of
  numbers. It is typically used for storing spectra, images and
  similar datasets with higher dimensionality. The NDF format is based
  on the Hierarchical Data System HDS (SUN/92) and is extensible; not
  only does it provide a comprehensive set of standard ancillary items
  to describe the data, it can also be extended indefinitely to handle
  additional user-defined information of any type.
    </p></abstract>
  <dependencies >
    <build>sae</build><build>prm</build><build>hds</build><build>chr</build><build>ems</build><build>ary</build><build>ast</build><build>psx</build><link>psx</link><link>ary</link><link>hds</link><link>ems</link><link>chr</link><link>prm</link><link>ast</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Rodney Warren-Smith</name>
      <uname>rfws</uname>
    </person>
    <person>
      <name>David Berry</name>
      <uname>dsb</uname>
    </person>
  </developers>
  <documentation> ssn20 sun33</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="par">
  <version>2.3</version>
  <path>libraries/par</path>
  <description>Interface to the ADAM Parameter System</description>
 <abstract><p>PAR is a library of Fortran subroutines that provides
      convenient mechanisms for applications to exchange information
      with the outside world, through input-output channels called
      parameters.  Parameters enable a user to control an
      application's behaviour.  PAR supports numeric, character, and
      logical parameters, and is currently implemented only on top of
      the ADAM parameter system.</p>
    <p>The PAR library permits parameter values to be obtained,
      without or with a variety of constraints.  Results may be put into
      parameters to be passed onto other applications.  Other
      facilities include setting a prompt string, and suggested defaults.</p>
    <p>This document also introduces a preliminary C interface for the PAR
      library -- this may be subject to change in the light of experience.</p>
  </abstract>
  <dependencies >
    <build>cnf</build><build>sae</build><build>mers</build><build>subpar</build><link>chr</link><link>mers</link><link>subpar</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Malcolm J. Currie</name>
      <uname>mjc</uname>
      <email>M.J.Currie@rl.ac.uk</email>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun114</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="adam">
  <version>3.0</version>
  <path>libraries/pcs/adam</path>
  <description>ADAM -- The Control Subsystem</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies >
    <build>sae</build><build>messys</build><link>chr</link><link>psx</link><link>ems</link><link>messys</link>
  </dependencies>
  <developers>
    <person>
      <name>John Cooke (REVAD::JAC)</name>
    </person>
    <person>
      <name>Charlie Richardson (REVA::DCR)</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation>ssn77 sun115 </documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Part of the PCS system.</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="adamnet">
  <version>1.0</version>
  <path>libraries/pcs/adamnet</path>
  <description>Implements the ADAM networking process. It interfaces
  the ADAM intertask communication software on unix to TCP/IP, thereby
  allowing ADAM tasks on different machines to communicate with one
  another. </description>
  <dependencies >
    <build>sae</build><build>messys</build><build>adam</build><build>ams</build><build>msp</build><build>sock</build><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>B.D.Kelly (REVAD::BDK)</name>
    </person>
    <person>
      <name>Brian K McIlwrath</name>
      <uname>bkm</uname>
      <email>b.k.mcilwrath@rl.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="ams">
  <version>1.3</version>
  <path>libraries/pcs/ams</path>
  <description>ADAM Message System</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies >
    <build>sae</build><build>cnf</build><build>dtask</build><build>atimer</build><build>messys</build><build>msp</build><build>adam</build>
  </dependencies>
  <developers>
    <person><name>Ian Jenkins (IRJ)</name></person>
    <person><name>Dennis Kelly (BDK)</name></person>
    <person><name>Brian McIlwrath (BKM)</name></person>
    <person><name>Alan Chipperfield (AJC)</name></person>
    <person><name>David Terrett (DLT)</name></person>
  </developers>
  <!-- <documentation></documentation> -->
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="atimer">
  <version>1.0</version>
  <path>libraries/pcs/atimer</path>
  <description>ATIMER -- millisecond interval timers</description>
  <abstract><p>This library provides a system of millisecond interval
      timers used by the message system and DTASK.  Each timer has an
      associated handler which is invoked when the timer expires.  The
      library is written in C but a Fortran interface, FATIMER, is
      provided.</p></abstract>
  <dependencies >
    <build>sae</build><build>cnf</build><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Described in SSN/29</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="pcs">
  <version>4.1-1</version>
  <path>libraries/pcs</path>
  <description>The Parameter and Communication Subsystems</description>
  <abstract><p>Application programs often need to obtain parameter
      values from a variety of sources and to communicate with other
      programs. The Parameter and Communication Subsystems (PCS) are a
      set of closely-related subroutine libraries which provide these
      facilities for many Starlink applications and the associated
      user-interfaces.</p>
    <p>The PCS libraries will not generally be called directly by
      application programs, but form a basic part of the Starlink
      Software Environment</p></abstract>
  <dependencies >
    <build>adam</build><build>ams</build><build>dtask</build><build>hdspar</build><build>lex</build><build>messys</build><build>misc</build><build>msp</build><build>parsecon</build><build>sock</build><build>string</build><build>subpar</build><build>task</build><sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> ssn29 ssn77 sun115 sun134 sun144 sun224 sun241</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="dtask">
  <version>3.0</version>
  <path>libraries/pcs/dtask</path>
  <description>DTASK linking library</description>
  <abstract><p>ADD DETAILS!</p></abstract>
  <dependencies >
    <build>adam</build><build>cnf</build><build>messys</build><build>psx</build><build>sae</build><build>subpar</build><link>chr</link><link>ems</link><link>mers</link><link>ams</link><link>atimer</link><link>hds</link><link>psx</link><link>subpar</link><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <!-- <documentation></documentation> -->
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="hdspar">
  <version>1.0-1</version>
  <path>libraries/pcs/hdspar</path>
  <description>Part of the HDS system.  HDSPAR declares bulk data
    parameters.</description>
  <dependencies >
    <build>sae</build><link>subpar</link>
  </dependencies>
  <developers>
    <person>
      <name>B D Kelly, ROE</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Documented in SUN/224, handled in pcs directory</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="lex">
  <version>1.2-1</version>
  <path>libraries/pcs/lex</path>
  <description>SUBPAR lexical analyser</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies >
    <build>sae</build><link>ems</link><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Jeremy Bailey (AAOEPP::JAB)</name>
    </person>
    <person>
      <name>Alan Chipperfield (RLVAD::AJC)</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
    <person>
      <name>Tim Jenness (JACH::TIMJ)</name>
      <email>t.jenness@jach.hawaii.edu</email>
    </person>
  </developers>
  <!-- documentation is maintained in the parent package -->
  <documentation>ssn29 </documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Part of the PCS package</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="messys">
  <version>3.0</version>
  <path>libraries/pcs/messys</path>
  <description>Message system</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies >
    <build>sae</build><link>ams</link><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>B D Kelly (REVAD::BDK)</name>
    </person>
    <person>
      <name>Alan J Chipperfield (RLVAD::AJC)</name>
    </person>
  </developers>
  <!-- <documentation></documentation> -->
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Part of the PCS system</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="misc">
  <version>1.4</version>
  <path>libraries/pcs/misc</path>
  <description>Miscellaneous routines required for the Unix build of
    ADAM/HDS</description>
  <abstract><p>Miscellaneous routines which do not fit into other
      libraries.  Two handle terminal I/O for programs running
      directly from a Unix shell and others provide a Fortran
      interface into the C library for platforms (notably Linux) which
      do not include them as part of the system.</p></abstract>
  <dependencies >
    <build>cnf</build>
  </dependencies>
  <developers>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Documented in SUN/144 in PCS</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="msp">
  <version>2.3</version>
  <path>libraries/pcs/msp</path>
  <description>Message System Primitives library</description>
  <abstract><p>MSP uses a single STREAM socket (path) in the INET
      domain to communicate between any two tasks and a STREAM socket pair
      in the UNIX domain to send/receive local (internal)
      messages. Messages on the sockets specify a `queue' in the
      receiving task for which they are intended and a queue in the
      sending task to which replies should be sent.</p></abstract>
  <dependencies >
    <build>sae</build><build>sock</build><link>sock</link><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>B D Kelly (ROE)</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@ral.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Documented in SUN/241 in PCS system</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="parsecon">
  <version>1.3</version>
  <path>libraries/pcs/parsecon</path>
  <description>Parsing of the interface files associated with
    SUBPAR</description>
  <abstract><p>Parsing of the interface files associated with SUBPAR.
      The package also includes the interface file compiler,
      COMPIFL.</p></abstract>
  <dependencies >
    <build>chr</build><build>hds</build><build>ems</build><build>sae</build><build>subpar</build><build option='link'>string</build><link>chr</link><link>ems</link><link>string</link><link>subpar</link><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>B D Kelly (ROE)</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Documented in passing in SSN/29</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="sock">
  <version>1.0</version>
  <path>libraries/pcs/sock</path>
  <description>Provides a Unix-socket-based message transport system
    for the MSP system</description>
  <dependencies >
    <build>sae</build><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>B D Kelly</name>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Described in SSN/29</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="string">
  <version>1.1-1</version>
  <path>libraries/pcs/string</path>
  <description>Fortran string manipulation subroutines</description>
  <abstract><p>Fortran string manipulation subroutines. These
      subroutines are also used by software items outside the
      parameter system, but the library has no published
      interface</p></abstract>
  <dependencies >
    <build>sae</build><build>chr</build><link>chr</link><link>ems</link>
  </dependencies>
  <developers>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Described in SSN/29, but has no published interface</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="subpar">
  <version>2.1</version>
  <path>libraries/pcs/subpar</path>
  <description>Parameter subsystem</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies >
    <build>adam</build><build>chr</build><build>hds</build><build>ems</build><build>lex</build><build>messys</build><build>sae</build><link>ams</link><link>chr</link><link>ems</link><link>hds</link><link>hlp</link><link>lex</link><link>misc</link><link>parsecon</link><link>psx</link><link>string</link><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>A.J.Chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <!-- <documentation></documentation> -->
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="task">
  <version>2.0</version>
  <path>libraries/pcs/task</path>
  <description>TASK -- an interface between the
  application code and the DTASK layer</description>
  <abstract><p>This library provides an interface between the
      application code and the DTASK layer so that an application can
      find out some information about its own status. It also enables
      programs to control other co-operating programs using the ADAM
      message protocol and includes subroutines for encoding and
      decoding data values in messages.  For examples of use, see
      SUN/134.</p></abstract>
  <dependencies >
    <build>adam</build><build>dtask</build><build>messys</build><build>sae</build><build>subpar</build><link>ams</link><link>chr</link><link>dtask</link><link>ems</link><link>mers</link><link>string</link><link>subpar</link><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>B D Kelly</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>Described in SSN/29, with examples in SUN/134</p></notes>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="pda">
  <version>0.4-1</version>
  <path>libraries/pda</path>
  <description>Public Domain Algorithms</description>
  <abstract><p>Replacements of NAG routines with public domain equivalents from packages such as NETLIB and SLATEC. They have been homogenized to fit into the Starlink calling scheme.
    </p></abstract>
  <dependencies >
    <build>sae</build><link>ems</link><link>cnf</link><sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Horst Meyerdierks</name>
      <uname>hme</uname>
    </person>
    <person>
      <name>David Berry</name>
      <uname>dsb</uname>
    </person>
    <person>
      <name>Peter Draper</name>
      <uname>pwd</uname>
    </person>
    <person>
      <name>Grant Privett</name>
      <uname>gp</uname>
    </person>
    <person>
      <name>Malcolm J Currie</name>
      <uname>mjc</uname>
    </person>
  </developers>
  <documentation> sun194</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>

<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="prm">
  <version>1.3-1</version>
  <path>libraries/prm</path>
  <description>PRIMDAT --- Processing of Primitive Numerical Data</description>
  <abstract><p>This document describes the PRIMDAT package, which
      is a collection of Fortran functions and subroutines providing
      support for ``primitive data processing''.  Routines from this
      package may be used to perform arithmetic, mathematical
      operations, type conversion and inter-comparison of any of the
      primitive numerical data types supported by the Starlink
      Hierarchical Data System HDS (SUN/92). 
    </p></abstract>
  <dependencies >
    <build>sae</build><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>R.F. Warren-Smith (DUVAD::RFWS)</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
    </person>
  </developers>
  <documentation> sun39</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="psx">
  <version>0.4</version>
  <path>libraries/psx</path>
  <description>POSIX interface routines</description>
   <abstract><p>PSX is a FORTRAN subroutine library that allows
      programmers to use the functionality provided by the POSIX and
      X/OPEN libraries. The use of this library will enable
      programmers to make use of operating system facilities in a
      machine independent way.</p></abstract> 
  <dependencies >
    <build>sae</build><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>P M Allan</name>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
      <email>a.j.chipperfield@rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun121</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="ref">
  <version>1.1-4</version>
  <path>libraries/ref</path>
  <description>Routines for Handling References to HDS Objects</description>
  <abstract><p> It is sometimes useful to use the Hierarchical Data
  System HDS (SUN/92) to store references or pointers to other HDS
  objects. For instance, this allows the same data object to be used
  in several places without the need to have more than one copy.  The
  REF library is provided to facilitate this data object
  referencing process and the subsequent accessing of objects
  which have been referenced in this way.
    </p></abstract>
  <dependencies >
    <build>sae</build><link>hds</link><link>ems</link><link>cnf</link><link>chr</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Rodney Warren-Smith</name>
      <uname>rfws</uname>
    </person>
    <person>
      <name>Alan J Chipperfield</name>
      <uname>ajc</uname>
    </person>
  </developers>
  <documentation> sun31</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="sae">
  <version>1.0</version>
  <path>libraries/sae</path>
  <description>Starlink Applications Environment special files</description>
  <abstract>
    <p>The SAE package brings together some include files, a facility
      error file and a shell script needed for development of software
      in the Starlink environment, and for building the USSC.</p>
  </abstract>
  <dependencies >
    <sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Martin J Bly</name>
      <uname>bly</uname>
      <email>NONE</email>
    </person>
  </developers>
 <documentation> sun191</documentation> 
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>

<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="sla">
  <version>2.4-11</version>
  <path>libraries/sla</path>
  <description>SLALIB --- Positional Astronomy Library</description>
  <abstract><p>SLALIB is a library used by writers of
      positional-astronomy applications.  Most of the
      routines are concerned with astronomical position and time, but
      a number have wider trigonometrical, numerical or general
      applications.</p></abstract>
  <dependencies >
    <sourceset>star2html</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Patrick Wallace</name>
      <uname>ptw</uname>
      <email>ptw@star.rl.ac.uk</email>
    </person>
  </developers>
  <documentation> sun67</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
</component>
<!-- component.xml.  Generated from component.xml.in by configure. -->

<component id="trn">
  <version>0.9-5</version>
  <path>libraries/trn</path>
  <description>TRANSFORM - Coordinate Transformation Facility</description>
  <abstract><p> TRANSFORM provides a standard, flexible method for
  manipulating coordinate transformations and for transferring
  information about them between applications.  It can handle
  coordinate systems with any number of dimensions and can efficiently
  process large (i.e. image-sized) arrays of coordinate data using a
  variety of numerical precisions.  No specific support for
  astronomical coordinate transformations or map projections is
  included -- these features are provided by the AST (SUN/210)
  library.
    </p></abstract>
  <dependencies >
    <build>sae</build><build>prm</build><build>hds</build><build>chr</build><build>ems</build><link>hds</link><link>ems</link><link>chr</link><link>prm</link><sourceset>star2html</sourceset><sourceset>messgen</sourceset>
  </dependencies>
  <developers>
    <person>
      <name>Rodney Warren-Smith</name>
      <uname>rfws</uname>
    </person>
  </developers>
  <documentation> sun61</documentation>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <!-- <notes><p></p></notes> -->
</component>

<component id="autoconf" buildsupport="yes">
  <version>2.59</version>
  <path>thirdparty/fsf/autoconf</path>
  <description>GNU autoconf</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies/>
  <developers>
    <!-- Cast of thousands, but locally to Starlink... -->
    <person>
      <name>Norman Gray</name>
      <uname>nxg</uname>
      <email>norman@astro.gla.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>This version of autoconf has been patched to include
      Fortran preprocessor support.  Those patches were submitted
      to autoconf-patches@gnu.org in January 2004, and were being
      examined after that.</p></notes>
</component>

<component id="automake" buildsupport="yes">
  <version>1.8.2-starlink</version>
  <path>thirdparty/fsf/automake</path>
  <description>GNU automake, patched</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies>
    <build>autoconf</build>
    <build>libtool</build>
  </dependencies>
  <developers>
    <!-- Cast of thousands, but locally to Starlink... -->
    <person>
      <name>Norman Gray</name>
      <uname>nxg</uname>
      <email>norman@astro.gla.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>This version of automake has been patched to include
      Fortran preprocessor support, and a variety of Starlink-specific
      targets.  The Fortran patches were submitted
      to automake-patches@gnu.org in January 2004, and were being
      examined after that.</p></notes>
</component>

<component id="libtool" buildsupport="yes">
  <version>1.5</version>
  <path>thirdparty/fsf/libtool</path>
  <description>GNU libtool</description>
  <!-- <abstract><p></p></abstract> -->
  <dependencies/>
  <developers>
    <!-- Cast of thousands, but locally to Starlink... -->
    <person>
      <name>Norman Gray</name>
      <uname>nxg</uname>
      <email>norman@astro.gla.ac.uk</email>
    </person>
  </developers>
  <bugreports>ussc@star.rl.ac.uk</bugreports>
  <notes><p>This version of libtool is unpatched -- just the standard
      version.</p></notes>
</component>
</componentset>
