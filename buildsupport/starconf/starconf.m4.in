# Starlink M4 macros for autoconf
# This is starconf version @PACKAGE_VERSION@

# _STAR_WRITE_BOILERPLATE
# -----------------------
# Utility macro.  If the variable STAR_BOILERPLATE is not already defined,
# define it to be a file which will contain boilerplate fragments of makefile.
# Then write to this file a header.  Called by [AC_REQUIRE]ing it from other macros.
AC_DEFUN([_STAR_WRITE_BOILERPLATE],
[if test -z "$STAR_BOILERPLATE"; then
  STAR_BOILERPLATE=Makefile.boilerplate
  echo "# File $STAR_BOILERPLATE..." >$STAR_BOILERPLATE
  echo "# Starlink boilerplate additions to Makefile" >>$STAR_BOILERPLATE
  echo "# Generated by ./configure and incorporated into Makefile" >>$STAR_BOILERPLATE
  echo "# Do not distribute this file separately" >>$STAR_BOILERPLATE
  echo >>$STAR_BOILERPLATE
fi])# _STAR_WRITE_BOILERPLATE

# STAR_FACILITY_CODE(code, [msgfile=$PACKAGE_err.msg])
# ----------------------------------------------------
# Declare the facility code corresponding to this package.
# Arg 1 is numeric facility code, set to ERR_FACILITY_CODE and AC_SUBSTed
# Arg 2 is .msg file, which defaults to $PACKAGE_err.msg
AC_DEFUN([STAR_FACILITY_CODE],
[AC_REQUIRE([_STAR_WRITE_BOILERPLATE])dnl
m4_ifval([$1], [], [AC_FATAL([$0: called with no code!])])dnl
ERR_FACILITY_CODE=$1
AC_SUBST(ERR_FACILITY_CODE)dnl
ERR_FACILITY_FILES="${PACKAGE}_err ${PACKAGE}_err.h fac_$1_err"
AC_SUBST(ERR_FACILITY_FILES)dnl
_star_tmp=m4_ifval([$2], [$2], [${PACKAGE}_err.msg])
cat >>$STAR_BOILERPLATE <<EOD
#  Rules for generating files built by the error message system.
#  ------------------------------------------------------------
${PACKAGE}_err:   $_star_tmp; messgen -f $_star_tmp
${PACKAGE}_err.h: $_star_tmp; messgen -c $_star_tmp
fac_$1_err:       $_star_tmp; messgen -e $_star_tmp
EOD
])# STAR_FACILITY_CODE

AC_SUBST_FILE([STAR_BOILERPLATE])

# STAR_DEFAULTS
# -------------
# Defaults for Starlink configure.ac files
AC_DEFUN([STAR_DEFAULTS],
[AC_REQUIRE([_STAR_WRITE_BOILERPLATE])dnl
# Everything depends on where /star is.  Declare STARLINK as a
# `precious variable'.  Amongst other things, this will make
# ./configure squeal if the package is re-configured with an
# inconsistent value of this variable.
AC_ARG_VAR(STARLINK, [Where all the Starlink software lives])dnl

# Ensure that STARLINK has a value, defaulting to @prefix@.  
# Note that this directory will be different from /star, if the
# `starconf' component was configured with a non-default --prefix
test -n "$STARLINK" || STARLINK=@prefix@

# Install software in @prefix@ by default
AC_PREFIX_DEFAULT(@prefix@)dnl

# Include a dependency of acinclude.m4 on this file
cat >>$STAR_BOILERPLATE <<EOD
# Rule for updating acinclude.m4
acinclude.m4: @bindir@/starconf; @bindir@/starconf ${srcdir}
EOD
])# STAR_DEFAULTS
