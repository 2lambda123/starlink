## Process this file with automake to produce Makefile.in

## Template Makefile.am -- uses the cnf library as an example
## Comments starting `##' are removed by automake; comments starting
## with `#' are copied into the output Makefile.
##
## This `template' is based on the Makefile.am for the CNF package, used
## because it contains most of the interesting features of Makefile.am files.
## Most Makefile.am files will be rather simpler than this.

## List the scripts which are to be installed in the `bin' directory,
## wherever it ends up.  bin_PROGRAMS is similar, but the variable
## lists programs which must be built before they can be installed.
##
## In automake terminology, this is the `bin' prefix to the `SCRIPTS' primary.
bin_SCRIPTS = cnf_link cnf_link_adam

## List libraries which are to be built, and installed in `lib'.  Note
## that the file extension is .la, not .a or .so.  This is the
## extension for a `libtool library' -- the actual libraries will be
## installed using whatever names are appropriate for the platform.
## The primary LTLIBRARIES requests that we build both sharable
## and static libraries.
lib_LTLIBRARIES = libcnf.la

## Declare the sources for the libcnf.la library.  Note that the
## prefix which corresponds to the libcnf.la library has non-letters
## canonicalised to underscores.
libcnf_la_SOURCES = \
	$(PUBLIC_INCLUDES) \
	$(BLOCK_DATA_FILES) \
	$(C_ROUTINES) \
	CNF_PAR

## List headers which are to be installed -- these are built first if necessary
include_HEADERS = $(PUBLIC_INCLUDES)

PUBLIC_INCLUDES = CNF_PAR f77.h cnf.h

C_ROUTINES = cnfCopyf.c cnfCreat.c cnfCref.c cnfCrefa.c cnfCreib.c \
	etc.c

## Note that we cannot call this variable just BLOCK_DATA, since automake
## interprets this as a `primary' DATA
BLOCK_DATA_FILES = blocks.f

## We can add any other Makefile rules we require, and automake will
## copy them through to the output.

# f77.h is a duplicate of cnf.h, maintained as such because old software
# (actually including some of the code in this library -- that should
# probably be fixed!) uses it under its old name
f77.h: cnf.h
	$(LN_S) cnf.h f77.h

## The file f77.h is input by some of the C_ROUTINES but, because it's
## generated, it doesn't exist in a fresh checkout. We can't rely on
## the generated dependency checking to sort this out, because that
## isn't generated until after the library is built the first time.
## Declaring the file as a `built source' simply ensures that the file
## is generated at the very beginning of the build.  However the
## targets listed here _won't_ be built unless they are listed in some
## other dependency above (we've done it in PUBLIC_INCLUDES,
## which is a dependency of libcnf_la_SOURCES).
BUILT_SOURCES = f77.h
