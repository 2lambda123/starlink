      SUBROUTINE CAT3_FITER (PARAM, MESSAG, FITSTT, STATUS)
*+
*  Name:
*     CAT3_FITER
*  Purpose:
*     Report a FITSIO error.
*  Language:
*     Fortran 77.
*  Invocation:
*     CALL CAT3_FITER (PARAM, MESSAG, FITSTT; STATUS)
*  Description:
*     Report a FITS error generated by the FISIO library.
*
*     Note that this routine attempts to execute irrespective of the
*     status on entry.
*  Arguments:
*     PARAM  =  CHARACTER*(*) (Given)
*        Parameter name for the first error message.
*     MESSAG  =  CHARACTER*(*) (Given)
*        Message to be reported with the error.
*     FITSTT  =  INTEGER (Given)
*        FITSIO status.
*     STATUS = INTEGER (Given and Returned)
*        The global status.
*  Algorithm:
*     Report the associated message.
*     Report any errors in the FITSIO error stack.
*     Translate the FITSIO status into a message.
*     Assemble the parameter name for the FITSIO message.
*     Report the FITSIO message.
*  Copyright:
*     Copyright (C) 1999 Central Laboratory of the Research Councils
*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either version 2 of
*     the License, or (at your option) any later version.
*
*     This program is distributed in the hope that it will be
*     useful,but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 59 Temple Place,Suite 330, Boston, MA
*     02111-1307, USA

*  Authors:
*     ACD: A C Davenhall (Leicester)
*  History:
*     27/7/93  (ACD): Original version.
*     6/8/93   (ACD): First stable version.
*     24/1/94  (ACD): Modified error reporting.
*     21/2/94  (ACD): Removed unused variable.
*     4/6/98   (ACD): Changed the formatting of the translated FITSIO
*       error code.
*     26/10/99 (ACD): Added reporting of errors from the FITSIO error
*       stack.
*  Bugs:
*     None known
*-
*  Type Definitions:
      IMPLICIT NONE
*  Global Constants:
      INCLUDE 'CAT_PAR'           ! External CAT constants.
*  Arguments Given:
      CHARACTER
     :  PARAM*(*),
     :  MESSAG*(*)
      INTEGER
     :  FITSTT
*  Status:
      INTEGER STATUS             ! Global status
*  External References:
      INTEGER CHR_LEN
*  Local Variables:
      CHARACTER
     :  OUTBUF*75, ! Output buffer.
     :  FITBUF*75, ! Buffer for FITSIO message.
     :  PARAM2*20  ! Parameter name for FITSIO message.
      INTEGER
     :  PARNUM,    ! Current parameter number.
     :  FITERR,    ! FITSIO error message count.
     :  OUTPOS,    ! Current position in the output buffer.
     :  FITLEN,    !   "    "  FITBUF ( "  .   "  .   "   ).
     :  LPARAM,    !   "    "  PARAM  ( "  .   "  .   "   ).
     :  LPARA2     !   "    "  PARAM2 ( "  .   "  .   "   ).
      LOGICAL
     :  MORE       ! Flag; more messages in the FITSIO stack?
*.


*
*    Report the message.

      CALL CAT1_ERREP (PARAM, MESSAG, STATUS)

*
*    Report any errors in the FITSIO error stack.

      FITERR = 0
      PARNUM = 0

      MORE = .TRUE.

      DO WHILE (MORE)
         CALL FTGMSG (FITBUF)

         IF (FITBUF .NE. ' ') THEN
            FITERR = FITERR + 1

*
*          Assemble the parameter name.

            IF (PARAM .NE. ' ') THEN
               PARNUM = PARNUM + 1

               PARAM2 = ' '
               LPARA2 = 0

               LPARAM = CHR_LEN (PARAM)

               CALL CHR_PUTC (PARAM(1 : LPARAM), PARAM2, LPARA2)
               CALL CHR_PUTI (PARNUM, PARAM2, LPARA2)
            ELSE
               PARAM2 = ' '
            END IF

*
*          Output the current message.

            FITLEN = CHR_LEN(FITBUF)

            CALL CAT1_ERREP (PARAM2(1 : LPARA2),
     :        '  ' // FITBUF(1 : FITLEN), STATUS)

         ELSE
            MORE = .FALSE.

         END IF

*
*       Abort error reporting if more than twenty messages were found
*       on the stack.

         IF (FITERR .GT. 20) THEN
            MORE = .FALSE.

            IF (PARAM .NE. ' ') THEN
               PARNUM = PARNUM + 1

               PARAM2 = ' '
               LPARA2 = 0

               LPARAM = CHR_LEN (PARAM)

               CALL CHR_PUTC (PARAM(1 : LPARAM), PARAM2, LPARA2)
               CALL CHR_PUTI (PARNUM, PARAM2, LPARA2)
            ELSE
               PARAM2 = ' '
            END IF

            CALL CAT1_ERREP (PARAM2(1 : LPARA2),
     :        '  Aborting reporting of FITSIO error messages after '/
     :        /'the first twenty...', STATUS)
         END IF

      END DO

*
*    Translate the FITSIO status into a message.

      CALL FTGERR (FITSTT, FITBUF)

*
*    Assemble the parameter name for the FITSIO message.

      IF (PARAM .NE. ' ') THEN
         PARNUM = PARNUM + 1

         PARAM2 = ' '
         LPARA2 = 0

         LPARAM = CHR_LEN (PARAM)

         CALL CHR_PUTC (PARAM(1 : LPARAM), PARAM2, LPARA2)
         CALL CHR_PUTI (PARNUM, PARAM2, LPARA2)

      ELSE
         PARAM2 = ' '

      END IF

*
*    Report the FITSIO message.

      OUTBUF = ' '
      OUTPOS = 0

      CALL CHR_PUTC ('  (FITSIO code ', OUTBUF, OUTPOS)
      CALL CHR_PUTI (FITSTT, OUTBUF, OUTPOS)
      CALL CHR_PUTC (': ', OUTBUF, OUTPOS)

      IF (FITBUF .NE. ' ') THEN
         FITLEN = CHR_LEN(FITBUF)
         CALL CHR_PUTC (FITBUF(1 : FITLEN), OUTBUF, OUTPOS)

      ELSE
         CALL CHR_PUTC ('<FITSIO status translation failed>',
     :     OUTBUF, OUTPOS)

      END IF

      CALL CHR_PUTC (').', OUTBUF, OUTPOS)

      CALL CAT1_ERREP (PARAM2(1 : LPARA2), OUTBUF(1 : OUTPOS), STATUS)

      END
