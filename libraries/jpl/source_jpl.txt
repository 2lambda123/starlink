C--------------------- MAIN PROGRAM 'EPHDSK' ---------------------------        
C                                                                               
C     THIS PROGRAM READS THE JPL EXPORT PLANETARY EPHEMERIS                     
C     TAPE AND WRITES THE CONVERTED EPHEMERIS ON A MASS-STORAGE                 
C     DIRECT-ACCESS FILE.  THE INPUT TAPE CAN BE EITHER THE                     
C     ENCODED ASCII FORMAT OR THE DIRECT-READABLE BINARY FORMAT,                
C     IF AVAILABLE FOR THE USER'S MACHINE.                                      
C                                                                               
C     THE USER WILL GET TWO PROMPTS AT THE START OF THE RUN. THE                
C     FIRST PROMPT REQUESTS AN INPUT CODE LETTER DESIGNATING                    
C     THE TAPE FORMAT. THEN, AFTER A DISPLAY OF THE CURRENT SPAN,               
C     A REQUEST IS MADE TO ENTER THE (OPTIONAL) START AND END                   
C     EPOCHS ON THE OUTPUT EPHEMERIS FILE.                                      
C                                                                               
C     THE INPUT FILE IS 'EPHTAP'; THE OUTPUT FILE IS 'JPLEPH'.                  
C                                                                               
C-----------------------------------------------------------------------        
C                                                                               
C       HEADER BUFFER                                                           
C                                                                               
      INTEGER HED(5)                                                            
C                                                                               
C       TRAILER-DETECT FLAG (.TRUE. IF CURRENT REC IS A TRAILER)                
C                                                                               
      LOGICAL TLR                                                               
C                                                                               
C       FLAG SET .TRUE. IF ASCII D.P. IMAGE TO BE DECODED                       
C                                                                               
      LOGICAL DECIM                                                             
C                                                                               
C       BUFFER FOR INPUT LINE IMAGE FROM TAPE                                   
C                                                                               
      CHARACTER*80 IMAGE                                                        
      CHARACTER*8 CC(2)                                                         
C                                                                               
C       RECORD WORD COUNT AND D.P. ENCODED NUMBERS                              
C                                                                               
      INTEGER N                                                                 
      INTEGER NDP(3,3)                                                          
      INTEGER NR1                                                               
      INTEGER NR2                                                               
      INTEGER NR                                                                
      INTEGER NRW                                                               
C                                                                               
C       TAPE-FORMAT CHARACTER                                                   
C                                                                               
      CHARACTER*1 FMT                                                           
C                                                                               
C       INPUT TAPE-FORMAT CONTROL FLAG                                          
C                                                                               
      LOGICAL ASC                                                               
C                                                                               
C       BUFFER FOR POWERS OF 2                                                  
C                                                                               
      DOUBLE PRECISION PW2(221)                                                 
C                                                                               
C       STORAGE AREA FOR INPUT-FILE NON-CHARACTER RECORDS                       
C                                                                               
      INTEGER IBSZ                                                              
      INTEGER IB(1)                                                             
      COMMON/EPCOMM/IBSZ,IB                                                     
C                                                                               
      DOUBLE PRECISION DB(1)                                                    
      EQUIVALENCE(IB,DB)                                                        
C                                                                               
C       STORAGE AREA FOR INPUT-FILE CHARACTER RECORDS                           
C                                                                               
      CHARACTER*6 CB(400)                                                       
C                                                                               
C       STORAGE NEEDED FOR SHORTENING THE INPUT EPHEMERIS                       
C                                                                               
      INTEGER C(2,2)                                                            
      INTEGER CAL(5)                                                            
C                                                                               
      DOUBLE PRECISION BASEJD                                                   
      DOUBLE PRECISION SEC                                                      
      DOUBLE PRECISION SSN(2)                                                   
      DOUBLE PRECISION J1950                                                    
      DOUBLE PRECISION J2000                                                    
C                                                                               
      CHARACTER*5 CHDAT                                                         
      CHARACTER*5 EL(2)                                                         
C                                                                               
C       COMMON AREA FOR CHARACTER DATA IN RECORD 1                              
C                                                                               
      CHARACTER*6 TTL(14,3)                                                     
      CHARACTER*6 CNAM(400)                                                     
      COMMON/CHRHDR/TTL,CNAM                                                    
C                                                                               
C       COMMON AREA FOR CONSTANTS AND POINTERS IN RECORD 1                      
C                                                                               
      DOUBLE PRECISION SS(3)                                                    
      INTEGER NCON                                                              
      DOUBLE PRECISION CVAL(400)                                                
      DOUBLE PRECISION AU                                                       
      DOUBLE PRECISION EMRAT                                                    
      INTEGER IPT(36)                                                           
      INTEGER DENUM                                                             
      INTEGER LPT(3)                                                            
      COMMON/EPHHDR/SS,NCON,CVAL,AU,EMRAT,IPT,DENUM,LPT                         
C                                                                               
      INTEGER EFIL                                                              
      COMMON/EPUNIT/EFIL                                                        
C                                                                               
      CHARACTER*84 HDG(3)                                                       
      EQUIVALENCE(HDG(1),TTL(1,1))                                              
C                                                                               
C       DATA STATEMENTS                                                         
C                                                                               
      DATA C/4*0/                                                               
      DATA SSN/2*0.D0/                                                          
      DATA J1950/2433282.5D0/                                                   
      DATA J2000/2451545.D0/                                                    
      DATA EL/'EARLI','  LAT'/                                                  
      DATA NR/0/                                                                
      DATA NRW/1/                                                               
      DATA NR1/1/                                                               
      DATA NR2/1000000/                                                         
      DATA BASEJD/0.D0/                                                         
      DATA CHDAT/' '/                                                           
C                                                                               
C       PRINT PROGRAM ENTRY MESSAGE AND TAPE-FORMAT PROMPT                      
C                                                                               
      WRITE(6,100)                                                              
  100 FORMAT('1',10X,'Planetary Ephemeris Tape-to-Disk Program',//,             
     * ' Enter input tape format code: A if ASCII, or B if Binary.')            
C                                                                               
C      READ FORMAT CODE LETTER; SET CORRESPONDING VARIABLES                     
C                                                                               
    8 READ(5,107)FMT                                                            
  107 FORMAT(A1)                                                                
      ASC=FMT.EQ.'A' .OR. FMT.EQ.'a'                                            
      IF((.NOT.ASC) .AND. FMT.NE.'B' .AND. FMT.NE.'b') THEN                     
        WRITE(6,111)FMT                                                         
  111   FORMAT('0Character ',A1,' not recognized. Re-enter code.')              
        GO TO 8                                                                 
      ENDIF                                                                     
C                                                                               
C       OPEN INPUT AND OUTPUT FILES                                             
C                                                                               
      IF(ASC) THEN                                                              
C                        'OPEN' STATEMENT FOR ASCII-FORMAT TAPE                 
        OPEN(9,                                                                 
     *       FILE='EPHTAP',                                                     
     *       ACCESS='SEQUENTIAL',                                               
     *       FORM='FORMATTED',                                                  
     *       STATUS='OLD')                                                      
C                                                                               
      ELSE                                                                      
C                        'OPEN' STATEMENT FOR BINARY-FORMAT TAPE                
        OPEN(9,                                                                 
     *       FILE='EPHTAP',                                                     
     *       ACCESS='SEQUENTIAL',                                               
     *       FORM='UNFORMATTED',                                                
C    *       RECORDTYPE='VARIABLE', ! REMOVE 'C' IN COL 1 FOR VAX I/O           
     *       STATUS='OLD')                                                      
      ENDIF                                                                     
C                                                                               
      CALL EPHOPN(.FALSE.)                                                      
C                                                                               
C       SET UP DOUBLE PRECISION TABLE OF POWERS OF 2 FROM                       
C       2**(-110) THROUGH 2**(110).  THIS TABLE IS NEEDED                       
C       TO DECODE DP DATA ON ASCII-FORMAT FILES.                                
C                                                                               
      IF(ASC) THEN                                                              
        PW2(110)=.5D0                                                           
        PW2(111)=1.D0                                                           
        PW2(112)=2.D0                                                           
        DO 50 K=1,109                                                           
        PW2(110-K)=PW2(111-K)*PW2(110)                                          
        PW2(112+K)=PW2(111+K)*PW2(112)                                          
   50   CONTINUE                                                                
      ENDIF                                                                     
C                                                                               
C       BEGINNING OF GROUP-READING LOOP. READ AND PRINT HEADER.                 
C                                                                               
    1 CONTINUE                                                                  
      IF(ASC) THEN                                                              
        CALL RCI(IMAGE)                                                         
        READ(IMAGE,108)NDUM,HED                                                 
  108   FORMAT(I5,1X,6I12)                                                      
      ELSE                                                                      
        READ(9)HED                                                              
      ENDIF                                                                     
      WRITE(6,101)HED                                                           
  101 FORMAT('0 HEADER:',5I10)                                                  
C                                                                               
C       IF GROUP TYPE (WORD 2) IS 5, WE ARE DONE.                               
C                                                                               
    9 IF(HED(2).EQ.5 .OR. (HED(4).EQ.1070 .AND. NR.GE.NR2)) THEN                
        CLOSE (EFIL)                                                            
        WRITE(6,102)NRW-2                                                       
  102   FORMAT('0',I6,' data records in file.')                                 
        STOP 'Conversion complete.'                                             
      ENDIF                                                                     
C                                                                               
C       CHECK TO SEE IF THE BUFFER SIZE IS LARGE ENOUGH TO ACCOMMODATE          
C       THE EPHEMERIS DATA RECORDS.                                             
C                                                                               
      IF(HED(4).EQ.1070 .AND. HED(1)-1.GT.IBSZ) THEN                            
        IX=HED(1)-1                                                             
        WRITE(6,120)IX,IBSZ                                                     
  120   FORMAT('0Insufficient buffer size for data records.',/,                 
     *   I6,' words needed and only',I6,' available in buffer.',/,              
     *   ' Change the parameter KSIZE in the block data program',/,             
     *   ' COMDAT to a sufficiently large value.')                              
        STOP                                                                    
      ENDIF                                                                     
C                                                                               
C       RESET RECORD COUNT AND READ NEXT RECORD                                 
C                                                                               
      NR=0                                                                      
C                                                                               
    2 NR=NR+1                                                                   
      IF(ASC) CALL RCI(IMAGE)                                                   
C                                                                               
C         DOUBLE-PRECISION RECORD PROCESSING                                    
C                                                                               
      IF(HED(2).EQ.2) THEN                                                      
        IF(ASC) THEN                                                            
          READ(IMAGE,109)N,NDP                                                  
  109     FORMAT(I5,3(I3,2I11))                                                 
          NWB=0                                                                 
          DO 15 I=1,N,3                                                         
          DECIM=HED(4).NE.1070 .OR. NR.GE.NR1 .OR. I.EQ.1                       
          IF(I.GT.1) THEN                                                       
            CALL RCI(IMAGE)                                                     
            IF(DECIM) READ(IMAGE,109)NDUM,NDP                                   
          ENDIF                                                                 
          IF(DECIM) THEN                                                        
            NW=MIN0(3,N-I+1)                                                    
            DO 12 K=1,NW                                                        
            NX=81+NDP(1,K)                                                      
            NWB=NWB+1                                                           
            IF(NDP(2,K).EQ.0) THEN                                              
              DB(NWB)=0.D0                                                      
            ELSEIF(NDP(1,K).GT.-51) THEN                                        
              DB(NWB)=DBLE(NDP(2,K))*PW2(NX)                                    
     *               +DBLE(NDP(3,K))*PW2(NX-30)                                 
            ELSE                                                                
              DB(NWB)=DBLE(NDP(2,K))*(2.D0**(NDP(1,K)-30))                      
     *               +DBLE(NDP(3,K))*(2.D0**(NDP(1,K)-60))                      
            ENDIF                                                               
   12       CONTINUE                                                            
          ENDIF                                                                 
   15     CONTINUE                                                              
        ELSE                                                                    
          READ(9)N,(DB(K),K=1,N)                                                
        ENDIF                                                                   
        TLR=DB(1).EQ.0.D0                                                       
C                                                                               
C         INTEGER RECORD PROCESSING                                             
C                                                                               
      ELSEIF(HED(2).EQ.3) THEN                                                  
        IF(ASC) THEN                                                            
          READ(IMAGE,108)N,(IB(K),K=1,6)                                        
          DO 22 I=1,N,6                                                         
          IF(I.GT.1) THEN                                                       
            CALL RCI(IMAGE)                                                     
            READ(IMAGE,108)NDUM,(IB(I+K-1),K=1,6)                               
          ENDIF                                                                 
   22     CONTINUE                                                              
        ELSE                                                                    
          READ(9)N,(IB(K),K=1,N)                                                
        ENDIF                                                                   
        TLR=IB(1).EQ.0                                                          
C                                                                               
C         CHARACTER RECORD PROCESSING                                           
C                                                                               
      ELSE                                                                      
        IF(ASC) THEN                                                            
          READ(IMAGE,110)N                                                      
  110     FORMAT(I5)                                                            
          DO 32 I=1,N,12                                                        
          IF(I.GT.1) CALL RCI(IMAGE)                                            
          IX=MIN0(N-I+1,12)                                                     
          DO 32 J=1,IX                                                          
   32     CB(J+I-1)=IMAGE(6*J+1:6*J+6)                                          
        ELSE                                                                    
          READ(9)N,(CB(K),K=1,N)                                                
        ENDIF                                                                   
        TLR=CB(1).EQ.'000000'                                                   
C                                                                               
      ENDIF                                                                     
C                                                                               
C       CHECK FOR ACTUAL TRAILER                                                
C                                                                               
      TLR=TLR .AND. N.EQ.1                                                      
      IF(TLR) THEN                                                              
        NR=NR-1                                                                 
        WRITE(6,103)NR                                                          
  103   FORMAT(I7,' records in this group.')                                    
        GO TO 1                                                                 
      ENDIF                                                                     
C                                                                               
C       PROCESS DESIGNATED GROUPS. THE EPHEMERIS FILE                           
C       HEADING RECORDS, START AND STOP JED'S, NAMES AND                        
C       VALUES OF CONSTANTS, AND POINTERS ARE PUT INTO                          
C       RECORD 1 OF FILE.                                                       
C                                                                               
C         GROUP 1010 IS HEADING GROUP -- PRINT EACH LINE                        
C                                                                               
      IF(HED(4).EQ.1010) THEN                                                   
        WRITE(6,104)(CB(K),K=1,13)                                              
  104   FORMAT(' ',13A6)                                                        
        DO 3 I=1,N                                                              
    3   TTL(I,NR)=CB(I)                                                         
C                                                                               
C           DETERMINE EQUINOX OF EPHEMERIS FROM FIRST HEADING LINE              
C                                                                               
        IF(NR.EQ.1) THEN                                                        
          IX=INDEX(HDG(1),'-')                                                  
          IF(IX.LE.0) THEN                                                      
            CHDAT='1950 '                                                       
            BASEJD=J1950                                                        
          ELSE                                                                  
            READ(HDG(1)(IX+1:IX+3),116)DENUM                                    
  116       FORMAT(I3)                                                          
            IF(DENUM.GE.200) THEN                                               
              CHDAT='J2000'                                                     
              BASEJD=J2000                                                      
            ELSE                                                                
              CHDAT='1950 '                                                     
              BASEJD=J1950                                                      
            ENDIF                                                               
          ENDIF                                                                 
        ENDIF                                                                   
        GO TO 2                                                                 
      ENDIF                                                                     
C                                                                               
C       GROUP 1030 -- LIMITS GROUP                                              
C                                                                               
      IF(HED(4).EQ.1030 .AND. NR.EQ.1) THEN                                     
        DO 4 I=1,3                                                              
    4   SS(I)=DB(I)                                                             
C                                                                               
C         PRINT MESSAGE AND GET POSSIBLE NEW START AND END DATES                
C                                                                               
        WRITE(6,112)                                                            
  112   FORMAT('0To create a short ephemeris, enter new',                       
     *   ' start and end dates as',//,' YYYYMMDD,YYYYMMDD',//,                  
     *   ' If full span is wanted, press <RETURN>',/)                           
C                                                                               
        READ(5,113)IMAGE                                                        
  113   FORMAT(A)                                                               
        SSN(1)=SS(1)                                                            
        SSN(2)=SS(2)                                                            
        NR1=1                                                                   
        NR2=IDINT((SS(2)-SS(1))/SS(3))                                          
        IF(IMAGE(1:1).NE.' ') THEN                                              
          IX=INDEX(IMAGE,',')                                                   
          CC(1)=' '                                                             
          CC(2)=' '                                                             
          IF(IX.GT.1) THEN                                                      
            CC(1)=IMAGE(MAX0(1,IX-8):IX-1)                                      
            CC(2)=IMAGE(IX+1:IX+8)                                              
          ENDIF                                                                 
          DO 19 K=1,2                                                           
          READ(CC(K),119)C(1,K)                                                 
  119     FORMAT(I8)                                                            
   19     CONTINUE                                                              
          DO 13 I=1,2                                                           
          IF(C(1,I).GT.0) CALL CTOJ(C(1,I),SSN(I))                              
   13     CONTINUE                                                              
C                                                                               
C           GET ACTUAL NEW DATES -- FIND START OF NEAREST EXISTING RECORD       
C                                                                               
          SSN(1)=DMAX1(SSN(1),SS(1))                                            
          SSN(2)=DMIN1(SSN(2),SS(2))                                            
C                                                                               
          SSN(1)=SS(1)+DINT((SSN(1)-SS(1))/SS(3))*SS(3)                         
          SSN(2)=SS(2)-DINT((SS(2)-SSN(2))/SS(3))*SS(3)                         
          IF(SSN(2)-SSN(1).LT.SS(3)) THEN                                       
            WRITE(6,115)SSN                                                     
  115       FORMAT('0 Input JED error -- dates are',2F11.1)                     
            STOP                                                                
          ENDIF                                                                 
C                                                                               
C           GET RANGE OF RECORDS TO BE TRANSFERRED                              
C                                                                               
          NR1=IDINT((SSN(1)-SS(1))/SS(3))+1                                     
          NR2=IDINT((SSN(2)-SS(1))/SS(3))                                       
C                                                                               
C           GENERATE NEW TITLE LINES                                            
C                                                                               
          DO 14 I=1,2                                                           
          SS(I)=SSN(I)                                                          
          CALL JTOC(SS(I),CAL,SEC,0)                                            
          SEC=(SS(I)-BASEJD)*86400.D0                                           
          HDG(I+1)=' '                                                          
          WRITE(HDG(I+1),114)EL(I),SS(I),(CAL(K),K=1,3),SEC,CHDAT               
  114     FORMAT(' ',A5,'EST EPOCH: JED=',F10.1,', ',                           
     *     I2,'/',I2.2,'/',I4,', ',F13.0,' SECS PAST ',A5)                      
   14     CONTINUE                                                              
          WRITE(6,117)(HDG(K)(1:80),K=2,3)                                      
  117     FORMAT('0Output ephemeris span:',//,2(1X,A80,/))                      
        ENDIF                                                                   
        WRITE(6,118)NR1,NR2                                                     
  118   FORMAT(' Records',I6,' through',I6,' will be transferred.',/)           
        GO TO 2                                                                 
      ENDIF                                                                     
C                                                                               
C         GROUP 1040, RECORD 4, CONTAINS NAMES OF CONSTANTS                     
C                                                                               
      IF(HED(4).EQ.1040 .AND. NR.EQ.4) THEN                                     
        NCON=N                                                                  
        DO 5 I=1,N                                                              
    5   CNAM(I)=CB(I)                                                           
        GO TO 2                                                                 
      ENDIF                                                                     
C                                                                               
C         GROUP 1041, RECORD 4, HAS VALUES OF CONSTANTS                         
C                                                                               
      IF(HED(4).EQ.1041 .AND. NR.EQ.4) THEN                                     
        DO 6 I=1,N                                                              
        CVAL(I)=DB(I)                                                           
        IF(CNAM(I).EQ.'AU    ') THEN                                            
          AU=CVAL(I)                                                            
        ELSEIF(CNAM(I).EQ.'EMRAT ') THEN                                        
          EMRAT=CVAL(I)                                                         
        ENDIF                                                                   
    6   CONTINUE                                                                
        GO TO 2                                                                 
      ENDIF                                                                     
C                                                                               
C         GROUP 1050 CONTAINS POINTERS NEEDED BY INTERP                         
C                                                                               
      IF(HED(4).EQ.1050 .AND. NR.EQ.2) THEN                                     
        DO 7 I=1,36                                                             
    7   IPT(I)=IB(I)                                                            
        DO 20 I=1,3                                                             
        IF(N.GT.36) THEN                                                        
          LPT(I)=IB(36+I)                                                       
        ELSE                                                                    
          LPT(I)=0                                                              
        ENDIF                                                                   
   20   CONTINUE                                                                
        NRW=1                                                                   
        WRITE(EFIL,REC=NRW)TTL,CNAM,SS,NCON,AU,EMRAT,IPT,DENUM,LPT              
        NRW=2                                                                   
        WRITE(EFIL,REC=NRW)CVAL                                                 
        GO TO 2                                                                 
      ENDIF                                                                     
C                                                                               
C         GROUP 1070 CONTAINS THE EPHEMERIS DATA RECORDS                        
C                                                                               
      IF(HED(4).EQ.1070 .AND. NR.GE.NR1) THEN                                   
        NRW=NRW+1                                                               
        WRITE(EFIL,REC=NRW,ERR=99)(DB(K),K=1,N)                                 
        IF(MOD(NRW-2,50).EQ.0) WRITE(6,105)NRW-2                                
  105   FORMAT(I7,' data records written ... continuing.')                      
        IF(NR.GE.NR2) GO TO 9                                                   
        GO TO 2                                                                 
      ENDIF                                                                     
C                                                                               
C       IF ANY OTHER GROUP IS BEING READ, IGNORE RECORDS                        
C                                                                               
      GO TO 2                                                                   
C                                                                               
C       ERROR RETURN FROM RECORD-WRITE PROBLEMS                                 
C                                                                               
   99 WRITE(6,106)                                                              
  106 FORMAT('0 Error while writing output file.')                              
      STOP 'I/O errors'                                                         
C                                                                               
      END                                                                       
C----------------------- MAIN PROGRAM 'SHORTEPH' -----------------------        
C                                                                               
C     THIS PROGRAM READS THE DIRECT-ACCESS JPL EPHEMERIS AND                    
C     PRODUCES AN OUTPUT EPHEMERIS WITH A SPECIFIED SHORTER                     
C     TIME SPAN. THE INPUT EPHEMERIS IS EXPECTED ON FILE 'JPLEPH',              
C     AND THE NEW EPHEMERIS WILL BE WRITTEN ON FILE 'JPLEPHS'                   
C                                                                               
C     THE USER WILL BE PROMPTED FOR NEW START AND END DATES, IN THE FORM        
C                                                                               
C                            YYYYMMDD,YYYYMMDD                                  
C     WHERE                                                                     
C            YYYY = YEAR                                                        
C              MM = MONTH (01 .LE. MM .LE. 12)                                  
C              DD = DAY (01 .LE. DD .LE. NBR OF DAYS IN MONTH MM)               
C                                                                               
C     IF EITHER THE ORIGINAL START OR END DATE IS DESIRED,                      
C     ENTER A 0 IN THAT FIELD.                                                  
C                                                                               
C                                                                               
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                       
C                                                                               
C       MISCELLANEOUS DECLARATIONS                                              
C                                                                               
      INTEGER C(2,2)                                                            
      INTEGER CAL(5)                                                            
C                                                                               
      INTEGER IBSZ                                                              
      INTEGER IB(1)                                                             
      COMMON/EPCOMM/IBSZ,IB                                                     
C                                                                               
      DOUBLE PRECISION BASEJD                                                   
      DOUBLE PRECISION SEC                                                      
      DOUBLE PRECISION SSN(2)                                                   
      DOUBLE PRECISION J1950                                                    
      DOUBLE PRECISION J2000                                                    
C                                                                               
      CHARACTER*5 CHDAT                                                         
      CHARACTER*5 EL(2)                                                         
C                                                                               
C       COMMON AREA FOR CHARACTER DATA IN RECORD 1                              
C                                                                               
      CHARACTER*6 TTL(14,3)                                                     
      CHARACTER*6 CNAM(400)                                                     
      COMMON/CHRHDR/TTL,CNAM                                                    
C                                                                               
C       COMMON AREA FOR CONSTANTS AND POINTERS IN RECORD 1                      
C                                                                               
      DOUBLE PRECISION SS(3)                                                    
      INTEGER NCON                                                              
      DOUBLE PRECISION CVAL(400)                                                
      DOUBLE PRECISION AU                                                       
      DOUBLE PRECISION EMRAT                                                    
      INTEGER IPT(36)                                                           
      INTEGER DENUM                                                             
      INTEGER LPT(3)                                                            
      COMMON/EPHHDR/SS,NCON,CVAL,AU,EMRAT,IPT,DENUM,LPT                         
C                                                                               
      CHARACTER*84 HDG(3)                                                       
      EQUIVALENCE(HDG(1),TTL(1,1))                                              
C                                                                               
C       COMMON AREA FOR INPUT FILE NUMBER                                       
C                                                                               
      INTEGER FILE                                                              
      COMMON/EPUNIT/FILE                                                        
C                                                                               
C       DATA STATEMENTS                                                         
C                                                                               
      DATA C/4*0/                                                               
      DATA SSN/2*0.D0/                                                          
      DATA J1950/2433282.5D0/                                                   
      DATA J2000/2451545.D0/                                                    
      DATA EL/'EARLI','  LAT'/                                                  
C                                                                               
C                                                                               
C       ENTRY POINT -- OPEN INPUT FILE AND PRINT 3 TITLE LINES                  
C                                                                               
      CALL EPHOPN(.TRUE.)                                                       
      INQUIRE(UNIT=12,RECL=IRECSZ)                                              
      WRITE(6,100)((TTL(K1,K2),K1=1,13),K2=1,3)                                 
  100 FORMAT('1',20X,'SHORTEPH entered. Input ephemeris heading:',              
     * //,3(1X,13A6,/))                                                         
C                                                                               
C       OPEN OUTPUT FILE                                                        
C                                                                               
      OPEN(UNIT=10,                                                             
     * FILE='JPLEPHS',                                                          
     * ACCESS='DIRECT',                                                         
     * FORM='UNFORMATTED',                                                      
     * RECL=IRECSZ,                                                             
     * STATUS='UNKNOWN')                                                        
C                                                                               
C       PRINT MESSAGE AND GET NEW START AND END DATES                           
C                                                                               
      WRITE(6,101)                                                              
  101 FORMAT('0 Enter start and end dates as YYYYMMDD,YYYYMMDD')                
      READ(5,*)C(1,1),C(1,2)                                                    
      DO 1 I=1,2                                                                
      IF(C(1,I).GT.0) CALL CTOJ(C(1,I),SSN(I))                                  
      IF(SSN(I).EQ.0.D0) SSN(I)=SS(I)                                           
    1 CONTINUE                                                                  
C                                                                               
C       GET ACTUAL NEW DATES -- FIND START OF NEAREST EXISTING RECORD           
C                                                                               
      SSN(1)=DMAX1(SSN(1),SS(1))                                                
      SSN(2)=DMIN1(SSN(2),SS(2))                                                
C                                                                               
      SSN(1)=SS(1)+DINT((SSN(1)-SS(1))/SS(3))*SS(3)                             
      SSN(2)=SS(2)-DINT((SS(2)-SSN(2))/SS(3))*SS(3)                             
      IF(SSN(2)-SSN(1).LT.SS(3)) THEN                                           
        WRITE(6,102)SSN                                                         
  102   FORMAT('0 Input JED error -- dates are',2F11.1)                         
        STOP                                                                    
      ENDIF                                                                     
C                                                                               
      NR1=IDINT((SSN(1)-SS(1))/SS(3))+3                                         
      NR2=IDINT((SSN(2)-SS(1))/SS(3))+2                                         
C                                                                               
C       DETERMINE EQUINOX OF EPHEMERIS FROM FIRST HEADING LINE                  
C                                                                               
      IX=INDEX(HDG(1),'-')                                                      
      IF(IX.LE.0) THEN                                                          
        CHDAT='1950 '                                                           
        BASEJD=J1950                                                            
      ELSE                                                                      
        READ(HDG(1)(IX+1:IX+3),107)DENUM                                        
  107   FORMAT(I3)                                                              
        IF(DENUM.GE.200) THEN                                                   
          CHDAT='J2000'                                                         
          BASEJD=J2000                                                          
        ELSE                                                                    
          CHDAT='1950 '                                                         
          BASEJD=J1950                                                          
        ENDIF                                                                   
      ENDIF                                                                     
C                                                                               
C       GENERATE NEW TITLE LINES                                                
C                                                                               
      DO 2 I=1,2                                                                
      SS(I)=SSN(I)                                                              
      CALL JTOC(SS(I),CAL,SEC,0)                                                
      SEC=(SS(I)-BASEJD)*86400.D0                                               
      HDG(I+1)=' '                                                              
      WRITE(HDG(I+1),103)EL(I),SS(I),(CAL(K),K=1,3),SEC,CHDAT                   
  103 FORMAT(' ',A5,'EST EPOCH: JED=',F10.1,', ',                               
     * I2,'/',I2.2,'/',I4,', ',F13.0,' SECS PAST ',A5)                          
    2 CONTINUE                                                                  
      WRITE(6,104)(HDG(K)(1:80),K=2,3)                                          
  104 FORMAT('0 New ephemeris span:',//,2(1X,A80,/))                            
C                                                                               
C       WRITE HEADER RECORDS                                                    
C                                                                               
      NRW=1                                                                     
      WRITE(10,REC=NRW)TTL,CNAM,SS,NCON,AU,EMRAT,IPT,DENUM,LPT                  
      NRW=2                                                                     
      WRITE(10,REC=NRW)CVAL                                                     
C                                                                               
C       READ CORRECT RECORDS FROM OLD FILE AND COPY ONTO NEW FILE               
C                                                                               
      DO 3 I=NR1,NR2                                                            
      READ(FILE,REC=I)(IB(K),K=1,IBSZ)                                          
      NRW=NRW+1                                                                 
      WRITE(10,REC=NRW)(IB(K),K=1,IBSZ)                                         
      IF(MOD(NRW-2,50).EQ.0) WRITE(6,105)NRW-2                                  
  105 FORMAT(I6,' records copied ... continuing.')                              
    3 CONTINUE                                                                  
C                                                                               
C       CLOSE FILE AND PRINT FINAL RECORD COUNT                                 
C                                                                               
      CLOSE (10)                                                                
      WRITE(6,106)NRW-2                                                         
  106 FORMAT('0',I6,' data records copied into new file.')                      
      STOP                                                                      
C                                                                               
      END                                                                       
C-------------------- MAIN PROGRAM 'TESTEPH' ---------------------------        
C                                                                               
C     THIS PROGRAM READS THE JPL EPHEMERIS AND INTERPOLATES                     
C     ALL POSSIBLE PLANET COMBINATIONS AT VARIOUS JULIAN DATES.                 
C     IT COMPARES THE RESULTS WITH FIGURES CONTAINED IN A FILE                  
C     THAT WAS GENERATED AT JPL AND PRINTS DIFFERENCES THAT                     
C     EXCEED A SPECIFIED TOLERANCE.                                             
C                                                                               
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                       
C                                                                               
C                                                                               
C       COMMON AREA FOR CHARACTER DATA IN RECORD 1                              
C                                                                               
      CHARACTER*6 TTL(14,3)                                                     
      CHARACTER*6 CNAM(400)                                                     
      COMMON/CHRHDR/TTL,CNAM                                                    
C                                                                               
C       COMMON AREA FOR CONSTANTS AND POINTERS IN RECORD 1                      
C                                                                               
      DOUBLE PRECISION SS(3)                                                    
      INTEGER NCON                                                              
      DOUBLE PRECISION CVAL(400)                                                
      DOUBLE PRECISION AU                                                       
      DOUBLE PRECISION EMRAT                                                    
      INTEGER IPT(36)                                                           
      INTEGER DENUM                                                             
      INTEGER LPT(3)                                                            
      COMMON/EPHHDR/SS,NCON,CVAL,AU,EMRAT,IPT,DENUM,LPT                         
C                                                                               
      INTEGER IBSZ                                                              
      INTEGER IB(1)                                                             
      COMMON/EPCOMM/IBSZ,IB                                                     
C                                                                               
C       MISCELLANEOUS INTERNAL STORAGE                                          
C                                                                               
      CHARACTER*6 NAM(400)                                                      
      CHARACTER*6 JNAM(400)                                                     
      CHARACTER*72 LBL                                                          
C                                                                               
      DOUBLE PRECISION VAL(400)                                                 
      DOUBLE PRECISION JVAL(400)                                                
      DOUBLE PRECISION SSS(3)                                                   
      DOUBLE PRECISION JSS(3)                                                   
      DOUBLE PRECISION RRD(6)                                                   
      DOUBLE PRECISION JRRD(6)                                                  
      DOUBLE PRECISION PW2(221)                                                 
C                                                                               
      DOUBLE PRECISION JED                                                      
      DOUBLE PRECISION CFRAC                                                    
C                                                                               
      INTEGER N                                                                 
      INTEGER JIPT(39)                                                          
      INTEGER TARG                                                              
      INTEGER CENT                                                              
      INTEGER LTARG                                                             
      INTEGER NEX                                                               
      INTEGER NFR                                                               
      INTEGER NER                                                               
      INTEGER NCMP                                                              
      INTEGER ENM(3,400)                                                        
C                                                                               
C       DATA STATEMENTS                                                         
C                                                                               
      DATA CFRAC/1.D-15/                                                        
      DATA NEX/0/                                                               
      DATA NFR/0/                                                               
      DATA NER/0/                                                               
      DATA NCMP/0/                                                              
      DATA LTARG/0/                                                             
C                                                                               
C       CHECK EPHEMERIS RECORD SIZE                                             
C                                                                               
      WRITE(6,112)IBSZ                                                          
  112 FORMAT('1This software expects the ephemeris records to have',            
     * I6,' words each.')                                                       
C                                                                               
C       BUILD UP TABLE OF POWERS OF 2 FOR D.P. DECODING                         
C                                                                               
      PW2(110)=.5D0                                                             
      PW2(111)=1.D0                                                             
      PW2(112)=2.D0                                                             
C                                                                               
      DO 50 K=1,109                                                             
      PW2(110-K)=PW2(111-K)*PW2(110)                                            
      PW2(112+K)=PW2(111+K)*PW2(112)                                            
   50 CONTINUE                                                                  
C                                                                               
C       OPEN INPUT FILE 'TESTEPHINPUT', CONTAINING JPL VALUES                   
C                                                                               
      OPEN(UNIT=8,                                                              
     *     FILE='TESTEPHINPUT',                                                 
     *     FORM='FORMATTED',                                                    
     *     ACCESS='SEQUENTIAL',                                                 
     *     STATUS='OLD')                                                        
C                                                                               
C       READ AND PRINT TEST FILE LABEL                                          
C                                                                               
      READ(8,210)LBL                                                            
  210 FORMAT(A)                                                                 
      WRITE(6,211)LBL                                                           
  211 FORMAT('0',A,//)                                                          
C                                                                               
C       CALL 'CONST' TO FILL COMMON AREA                                        
C                                                                               
      CALL CONST(NAM,VAL,SSS,N)                                                 
      DO 3 I=1,3                                                                
      WRITE(6,212)(TTL(K,I),K=1,13)                                             
  212 FORMAT(1X,13A6)                                                           
    3 CONTINUE                                                                  
C                                                                               
C       GET DE-NUMBER, AU, AND EMRAT                                            
C                                                                               
      READ(8,109)IDNUM,AUX,EMRX                                                 
  109 FORMAT(I5,2(1PD23.15))                                                    
      WRITE(6,110)DENUM,IDNUM                                                   
  110 FORMAT('0DE Numbers: File =',I4,', Test deck =',I4)                       
      IF(IDNUM.NE.DENUM) STOP 'Non-matching DE Numbers.'                        
      WRITE(6,111)AU,AUX,EMRAT,EMRX                                             
  111 FORMAT('0   AU: File =',1PD23.15,', Test deck =',1PD23.15,/,              
     * ' EMRAT: File =',1PD23.15,', Test deck =',1PD23.15)                      
C                                                                               
C       READ NBR OF CONSTANTS FROM TEST OUTPUT FILE                             
C                                                                               
      READ(8,100)NJ                                                             
  100 FORMAT(I6)                                                                
      WRITE(6,200)NJ,N                                                          
  200 FORMAT('0',I6,' constants expected, and',I6,' read.')                     
C                                                                               
C       READ TEST START AND STOP DATES; COMPARE WITH 'CONST' VALUES             
C                                                                               
      READ(8,101)JSS                                                            
  101 FORMAT(2F11.1,F8.3)                                                       
      WRITE(6,103)                                                              
  103 FORMAT('0Comparing start, stop, and step.')                               
      DO 11 I=1,3                                                               
   11 IF(SSS(I).NE.JSS(I)) WRITE(6,201)I,SSS(I),JSS(I)                          
  201 FORMAT('0 Non-matching limit',I2,'. File value =',F11.1,                  
     * ', test deck value =',F11.1)                                             
C                                                                               
C       READ TEST CONSTANT NAMES AND VALUES; DO FRACTIONAL COMPARE              
C       (PRINT ERROR MESSAGE IF DIFFERENCE NOT WITHIN VALUE OF 'CFRAC')         
C                                                                               
      READ(8,102)(JNAM(K),(ENM(K1,K),K1=1,3),K=1,N)                             
  102 FORMAT(1X,A6,I3,2I11,1X,A6,I3,2I11)                                       
      DO 22 K=1,N                                                               
      IF(ENM(2,K).EQ.0) THEN                                                    
        JVAL(K)=0.D0                                                            
      ELSE                                                                      
        NX=81+ENM(1,K)                                                          
        JVAL(K)=DBLE(ENM(2,K))*PW2(NX)                                          
     *         +DBLE(ENM(3,K))*PW2(NX-30)                                       
      ENDIF                                                                     
   22 CONTINUE                                                                  
C                                                                               
      WRITE(6,104)CFRAC                                                         
  104 FORMAT('0Comparing constants. Fractional compare value =',                
     * 1PD12.3)                                                                 
      DO 12 I=1,N                                                               
      IF(JVAL(I).EQ.VAL(I)) THEN                                                
        FRAC=0.D0                                                               
        NEX=NEX+1                                                               
      ELSE                                                                      
        FRAC=DABS((JVAL(I)-VAL(I))/DMAX1(DABS(JVAL(I)),DABS(VAL(I))))           
      ENDIF                                                                     
      IF(JNAM(I).NE.NAM(I) .OR. FRAC.GT.CFRAC) THEN                             
        WRITE(6,202)I,JNAM(I),JVAL(I),NAM(I),VAL(I),FRAC                        
  202   FORMAT(' Constant',I4,' ',A6,1PD23.15,6X,A6,1PD23.15,1PD12.3)           
      ELSEIF(FRAC.NE.0.D0) THEN                                                 
        NFR=NFR+1                                                               
      ENDIF                                                                     
   12 CONTINUE                                                                  
C                                                                               
      WRITE(6,208)N,NEX,NFR                                                     
  208 FORMAT('0Of',I4,' constants,',I4,' compared exactly and',                 
     * I4,' others were within fractional limit.')                              
C                                                                               
      NEX=0                                                                     
      NFR=0                                                                     
C       READ AND CHECK ALL POINTERS                                             
C                                                                               
      READ(8,108)JIPT                                                           
  108 FORMAT((3I10))                                                            
      WRITE(6,105)                                                              
  105 FORMAT('0Comparing pointers.')                                            
      DO 13 I=1,39                                                              
      IF(I.LE.36) THEN                                                          
        KPT=IPT(I)                                                              
      ELSE                                                                      
        KPT=LPT(I-36)                                                           
      ENDIF                                                                     
      IF(JIPT(I).NE.KPT) WRITE(6,204)I,JIPT(I),KPT                              
  204 FORMAT(' Compare error for pointer',I3,':',2I3)                           
   13 CONTINUE                                                                  
C                                                                               
C      THIS SECTION READS THE JPL OUTPUT AND COMPARES INTERPOLATED RESULTS.     
C      ANY FRACTIONAL DIFFERENCE EXCEEDING 'CFRAC' IS PRINTED.                  
C                                                                               
      WRITE(6,106)                                                              
  106 FORMAT('0Interpolating and comparing ephemeris values.',/)                
C                                                                               
C       START OF MAIN READING AND INTERPOLATION LOOP                            
C                                                                               
   14 READ(8,207,END=1)JED,TARG,CENT,((ENM(K1,K2),K1=1,3),K2=1,6)               
  207 FORMAT(F16.5,2I3,/,1X,3(I3,2I11),/,1X,3(I3,2I11))                         
C                                                                               
      IF(JED.GT.SS(2) .OR. JED.EQ.0.D0) THEN                                    
        GO TO 1                                                                 
      ELSEIF(JED.LT.SS(1)) THEN                                                 
        GO TO 14                                                                
      ENDIF                                                                     
C                                                                               
      IF(TARG.NE.LTARG) THEN                                                    
        IF(LTARG.NE.0) WRITE(6,203)LTARG                                        
  203   FORMAT(' End of testing loop for target',I3)                            
        LTARG=TARG                                                              
        WRITE(6,205)LTARG,JED                                                   
  205   FORMAT('  Begin testing loop for target',I3,'. JED =',F14.5)            
      ENDIF                                                                     
C                                                                               
C       NUTATIONS IF TARG = 14 -- OTHERWISE, EPHEMERIS OR LIBRATIONS            
C                                                                               
      IF(TARG.EQ.14) THEN                                                       
        IX=4                                                                    
      ELSE                                                                      
        IX=6                                                                    
      ENDIF                                                                     
C                                                                               
      DO 23 K=1,IX                                                              
      IF(ENM(2,K).EQ.0) THEN                                                    
        JRRD(K)=0.D0                                                            
      ELSE                                                                      
        NX=81+ENM(1,K)                                                          
        JRRD(K)=DBLE(ENM(2,K))*PW2(NX)                                          
     *         +DBLE(ENM(3,K))*PW2(NX-30)                                       
      ENDIF                                                                     
   23 CONTINUE                                                                  
C                                                                               
C       CALL EPHEMERIS INTERPOLATING SUBROUTINE 'PLEPH'                         
C                                                                               
      CALL PLEPH(JED,TARG,CENT,RRD,*2)                                          
C                                                                               
      DO 15 K=1,IX                                                              
      IF(RRD(K).EQ.JRRD(K)) THEN                                                
        FRAC=0.D0                                                               
        NEX=NEX+1                                                               
      ELSE                                                                      
        FRAC=DABS((JRRD(K)-RRD(K))/DMAX1(DABS(JRRD(K)),DABS(RRD(K))))           
      ENDIF                                                                     
      NCMP=NCMP+1                                                               
      IF(FRAC.GT.CFRAC) THEN                                                    
        WRITE(6,206)TARG,CENT,K,JED,JRRD(K),RRD(K),FRAC                         
  206   FORMAT(' TARG=',I2,' CENT=',I2,' COMPONENT=',I2,                        
     *   ' JED=',F15.5,/,                                                       
     *   ' JPL VAL =',1PD23.15,'  THIS VAL =',1PD23.15,'  FRAC DIFF=',          
     *   1PD12.3)                                                               
        NER=NER+1                                                               
      ELSEIF(FRAC.NE.0.D0) THEN                                                 
        NFR=NFR+1                                                               
      ENDIF                                                                     
   15 CONTINUE                                                                  
C                                                                               
      GO TO 14                                                                  
C                                                                               
C       END OF TEST                                                             
C                                                                               
    1 IF(JED.EQ.0.D0) THEN                                                      
        WRITE(6,203)LTARG                                                       
        READ(8,210)LBL                                                          
        WRITE(6,107)LBL                                                         
  107   FORMAT('0',A)                                                           
      ELSE                                                                      
        WRITE(6,113)JED,SSS(2)                                                  
  113   FORMAT('0End of testing -- JED',F14.5,' exceeds file limit',            
     *   F10.1)                                                                 
      ENDIF                                                                     
C                                                                               
      WRITE(6,209)NCMP,NEX,NFR,NER                                              
  209 FORMAT('0Of',I5,' comparisons:',//,                                       
     * I8,' were exact',/,                                                      
     * I8,' others were within the fractional limit',/,                         
     * I8,' exceeded the fractional limit.',/)                                  
      STOP 'Normal end of test'                                                 
    2 STOP 'Error return from PLEPH'                                            
      END                                                                       
C------------------------------ SUBROUTINE 'CONST' ---------------------        
C                                                                               
C+++++++++++++++++++++++++++++                                                  
C                                                                               
      SUBROUTINE CONST(NAM,VAL,SSS,N)                                           
C                                                                               
C+++++++++++++++++++++++++++++                                                  
C                                                                               
C     THIS SUBROUTINE OBTAINS THE CONSTANTS FROM THE EPHEMERIS FILE             
C                                                                               
C     CALLING SEQEUNCE PARAMETERS (ALL OUTPUT):                                 
C                                                                               
C       NAM = CHARACTER*6 ARRAY OF CONSTANT NAMES                               
C                                                                               
C       VAL = D.P. ARRAY OF VALUES OF CONSTANTS                                 
C                                                                               
C       SSS = D.P. JD START, JD STOP, STEP OF EPHEMERIS                         
C                                                                               
C         N = INTEGER NUMBER OF ENTRIES IN 'NAM' AND 'VAL' ARRAYS               
C                                                                               
C     THE ARRAYS 'NAM' AND 'VAL' MUST HAVE SUFFICIENTLY LARGE                   
C     DIMESNIONS TO ACCOMMODATE ALL ENTRIES ON THE FILE. THE                    
C     VALUE 400 IS A SAFE UPPER LIMIT FOR THIS DIMENSION.                       
C                                                                               
      SAVE                                                                      
C                                                                               
      CHARACTER*6 NAM(*)                                                        
      DOUBLE PRECISION VAL(*)                                                   
      DOUBLE PRECISION SSS(3)                                                   
      INTEGER N                                                                 
C                                                                               
C       COMMON AREA FOR CHARACTER DATA IN RECORD 1                              
C                                                                               
      CHARACTER*6 TTL(14,3)                                                     
      CHARACTER*6 CNAM(400)                                                     
      COMMON/CHRHDR/TTL,CNAM                                                    
C                                                                               
C       COMMON AREA FOR CONSTANTS AND POINTERS IN RECORD 1                      
C                                                                               
      DOUBLE PRECISION SS(3)                                                    
      INTEGER NCON                                                              
      DOUBLE PRECISION CVAL(400)                                                
      DOUBLE PRECISION AU                                                       
      DOUBLE PRECISION EMRAT                                                    
      INTEGER IPT(36)                                                           
      INTEGER DENUM                                                             
      INTEGER LPT(3)                                                            
      COMMON/EPHHDR/SS,NCON,CVAL,AU,EMRAT,IPT,DENUM,LPT                         
C                                                                               
C                                                                               
C       OPEN THE FILE AND READ RECORD 1                                         
C                                                                               
      CALL EPHOPN(.TRUE.)                                                       
C                                                                               
C       COPY CORRECT DATA TO CALLING SEQUENCE VARIABLES                         
C                                                                               
      N=NCON                                                                    
      DO 1 I=1,3                                                                
    1 SSS(I)=SS(I)                                                              
      DO 2 I=1,NCON                                                             
      NAM(I)=CNAM(I)                                                            
    2 VAL(I)=CVAL(I)                                                            
C                                                                               
      RETURN                                                                    
C                                                                               
      END                                                                       
C------------------------------- SUBROUTINE 'CTOJ' ---------------------        
C                                                                               
C++++++++++++++++++++++++++++                                                   
C                                                                               
      SUBROUTINE CTOJ(C,JD)                                                     
C                                                                               
C++++++++++++++++++++++++++++                                                   
C                                                                               
C     THIS SUBROUTINE CONVERTS A GREGORIAN CALENDAR DATE TO JULIAN DATE         
C                                                                               
C     CALENDAR FORMAT:  2 INTEGERS:  YYYYMMDD,HHNNSSXX                          
C       WHERE  YYYY = CALENDAR YEAR (E.G. 1988)                                 
C                MM = CALENDAR MONTH (E.G. 04 = APRIL)                          
C                DD = CALENDAR DAY (E.G. 15)                                    
C                HH = HOUR OF DAY (00 .LE. HH .LE. 23)                          
C                NN = MINUTES (00 .LE. NN .LE. 59)                              
C                SS = SECONDS (00 .LE. SS .LE. 59)                              
C                XX = HUNDREDTHS OF SECONDS (00 .LE. XX .LE. 99)                
C                                                                               
C     CALLING SEQUENCE:     CALL CTOJ(C,JD)                                     
C                                                                               
C        C = INTEGER 2-WORD ARRAY CONTAINING THE INPUT CALENDAR DATE            
C                                                                               
C       JD = THE OUTPUT D.P. JULIAN DATE                                        
C                                                                               
C                                                                               
C     CALLING SEQUENCE DECLARATIONS:                                            
C                                                                               
      INTEGER C(2)                                                              
      DOUBLE PRECISION JD                                                       
C                                                                               
C                                                                               
C       CALCULATE THE NUMBER OF FULL YEARS, MONTHS, AND DAYS ALREADY            
C       ELAPSED SINCE 0H, MARCH 1, 4001 BC (UP TO MOST RECENT MIDNIGHT).        
C       (THE '91' IS COMPLEMENT ARITHMETIC FOR ADDING 9 TO 'MM'.)               
C                                                                               
      NYMD=40000000+(MOD(IABS(C(1)),10000)-9101)+C(1)/10000*10000               
      IF(C(1).LT.0) NYMD=NYMD+10000                                             
C                                                                               
C       CONVERT 2ND WORD OF CALENDAR DATE AND ELAPSED DAYS TO                   
C       D.P. DAYS, AND ADD .5 FOR JD CONVENTION                                 
C                                                                               
      JD=DBLE(MOD(C(2)/100,100)+MOD(C(2)/10000,100)*60                          
     * +(C(2)/1000000)*3600+MOD(NYMD,100)*86400)/86400.D0+.5D0                  
C                                                                               
C       NUMBER OF FULL MONTHS ELAPSED SINCE THE CURRENT OR MOST RECENT MARCH    
C                                                                               
      MTH=MOD(MOD(NYMD/100,100),12)                                             
C                                                                               
C       NUMBER OF FULL 12-MONTH YEARS SINCE 3/1/-1                              
C                                                                               
      IY=NYMD/10000+MOD(NYMD/100,100)/12                                        
C                                                                               
C       STARTING WITH MARCH AS MONTH 0 AND ENDING WITH THE FOLLOWING            
C       FEBRUARY AS MONTH 11, THE CALCULATION OF THE NUMBER OF DAYS             
C       PER MONTH REDUCES TO A SIMPLE FORMULA. THE FOLLOWING STATEMENT          
C       DETERMINES THE NUMBER OF WHOLE DAYS ELAPSED SINCE 3/1/4001 BC AND       
C       THEN ADDS THE 260149 DAYS BETWEEN THEN AND THE START OF THE             
C       JULIAN DATE NUMBERING SYSTEM.                                           
C                                                                               
      JD=DBLE(MOD(C(2),100))/8640000.D0                                         
     * +JD+DBLE((MTH+1+MTH/6+MTH/11)/2*31+(MTH-MTH/6-MTH/11)/2*30               
     * +IY*365+IY/4-IY/100+IY/400+260149)                                       
C                                                                               
      RETURN                                                                    
C                                                                               
      END                                                                       
C------------------------------ SUBROUTINE 'EPHOPN' --------------------        
C                                                                               
C++++++++++++++++++++++++                                                       
C                                                                               
      SUBROUTINE EPHOPN(RDF)                                                    
C                                                                               
C++++++++++++++++++++++++                                                       
C                                                                               
C     THIS SUBROUTINE OPENS THE JPL PLANETARY EPHEMERIS FILE,                   
C     EXPECTED TO BE 'JPLEPH'.                                                  
C                                                                               
      SAVE                                                                      
C                                                                               
C       COMMON AREA FOR CHARACTER DATA IN RECORD 1                              
C                                                                               
      CHARACTER*6 TTL(14,3)                                                     
      CHARACTER*6 CNAM(400)                                                     
      COMMON/CHRHDR/TTL,CNAM                                                    
C                                                                               
C       COMMON AREA FOR CONSTANTS AND POINTERS IN RECORD 1                      
C                                                                               
      DOUBLE PRECISION SS(3)                                                    
      INTEGER NCON                                                              
      DOUBLE PRECISION CVAL(400)                                                
      DOUBLE PRECISION AU                                                       
      DOUBLE PRECISION EMRAT                                                    
      INTEGER IPT(36)                                                           
      INTEGER DENUM                                                             
      INTEGER LPT(3)                                                            
      COMMON/EPHHDR/SS,NCON,CVAL,AU,EMRAT,IPT,DENUM,LPT                         
C                                                                               
      INTEGER FILE                                                              
      COMMON/EPUNIT/FILE                                                        
C                                                                               
C                                                                               
C       COMMON AREA FOR EPH DATA BUFFERS                                        
C                                                                               
      INTEGER IBSZ                                                              
      COMMON/EPCOMM/IBSZ                                                        
C                                                                               
      INTEGER IRECSZ                                                            
C                                                                               
      LOGICAL RDF                                                               
      LOGICAL FIRST                                                             
C                                                                               
      CHARACTER*7 STAWD                                                         
C                                                                               
      DATA FIRST/.TRUE./                                                        
C                                                                               
C       THE FOLLOWING STATEMENTS DEFINE THE LENGTH OF THE RECORDS               
C       IN THE DIRECT-ACCESS FILE. IF THE 'RECL' SPECIFICATION IN               
C       THE FORTRAN COMPILER ON YOUR MACHINE EXPECTS THE LENGTH TO              
C       BE IN WORDS, LEAVE THE STATEMENTS AS THEY ARE. IF THE LENGTH            
C       IS EXPECTED IN BYTES, REMOVE THE 'C' FROM COLUMN 1 IN THE               
C       SECOND STATEMENT.                                                       
C                                                                               
      IRECSZ=IBSZ                                                               
C     IRECSZ=IRECSZ*4                                                           
C                                                                               
C       OPEN FILE AND READ RECORD # 1 AND 2 ON FIRST ENTRY ONLY                 
C                                                                               
      IF(FIRST) THEN                                                            
        FIRST=.FALSE.                                                           
        IF(RDF) THEN                                                            
          STAWD='OLD'                                                           
        ELSE                                                                    
          STAWD='UNKNOWN'                                                       
        ENDIF                                                                   
        OPEN(UNIT=FILE,                                                         
     *       FILE='JPLEPH',                                                     
     *       ACCESS='DIRECT',                                                   
     *       FORM='UNFORMATTED',                                                
     *       RECL=IRECSZ,                                                       
     *       STATUS=STAWD)                                                      
        IF(RDF) THEN                                                            
          READ(FILE,REC=1)TTL,CNAM,SS,NCON,AU,EMRAT,IPT,DENUM,LPT               
          READ(FILE,REC=2)CVAL                                                  
        ENDIF                                                                   
      ENDIF                                                                     
C                                                                               
      RETURN                                                                    
C                                                                               
      END                                                                       
C------------------------------- SUBROUTINE 'INTERP' -------------------        
C                                                                               
C+++++++++++++++++++++++++++++++++                                              
C                                                                               
      SUBROUTINE INTERP(BUF,T,NCF,NCM,NA,FL,PV)                                 
C                                                                               
C+++++++++++++++++++++++++++++++++                                              
C                                                                               
C     THIS SUBROUTINE DIFFERENTIATES AND INTERPOLATES A                         
C     SET OF CHEBYSHEV COEFFICIENTS TO GIVE POSITION AND VELOCITY               
C                                                                               
C     CALLING SEQUENCE PARAMETERS:                                              
C                                                                               
C       INPUT:                                                                  
C                                                                               
C         BUF   1ST LOCATION OF ARRAY OF D.P. CHEBYSHEV COEFFICIENTS OF POSITION
C                                                                               
C           T   T(1) IS DP FRACTIONAL TIME IN INTERVAL COVERED BY               
C               COEFFICIENTS AT WHICH INTERPOLATION IS WANTED                   
C               (0 .LE. T(1) .LE. 1).  T(2) IS DP LENGTH OF WHOLE               
C               INTERVAL IN INPUT TIME UNITS.                                   
C                                                                               
C         NCF   # OF COEFFICIENTS PER COMPONENT                                 
C                                                                               
C         NCM   # OF COMPONENTS PER SET OF COEFFICIENTS                         
C                                                                               
C          NA   # OF SETS OF COEFFICIENTS IN FULL ARRAY                         
C               (I.E., # OF SUB-INTERVALS IN FULL INTERVAL)                     
C                                                                               
C          FL   INTEGER FLAG: =1 FOR POSITIONS ONLY                             
C                             =2 FOR POS AND VEL                                
C                                                                               
C                                                                               
C       OUTPUT:                                                                 
C                                                                               
C         PV   INTERPOLATED QUANTITIES REQUESTED.  DIMENSION                    
C               EXPECTED IS PV(NCM,FL), DP.                                     
C                                                                               
C                                                                               
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                       
C                                                                               
      SAVE                                                                      
C                                                                               
C     DECLARATIONS OF SUBROUTINE ARGUMENTS                                      
C                                                                               
      DOUBLE PRECISION BUF(NCF,NCM,*)                                           
      DOUBLE PRECISION T(2)                                                     
      INTEGER NCF                                                               
      INTEGER NCM                                                               
      INTEGER NA                                                                
      INTEGER FL                                                                
      DOUBLE PRECISION PV(NCM,*)                                                
C                                                                               
C                                                                               
      INTEGER NP                                                                
      INTEGER NV                                                                
C                                                                               
      DOUBLE PRECISION TWOT                                                     
      DOUBLE PRECISION PC(18)                                                   
      DOUBLE PRECISION VC(18)                                                   
C                                                                               
      DATA NP/2/                                                                
      DATA NV/3/                                                                
      DATA TWOT/0.D0/                                                           
      DATA PC(1),PC(2)/1.D0,0.D0/                                               
      DATA VC(2)/1.D0/                                                          
C                                                                               
C       ENTRY POINT. GET CORRECT SUB-INTERVAL NUMBER FOR THIS SET               
C       OF COEFFICIENTS AND THEN GET NORMALIZED CHEBYSHEV TIME                  
C       WITHIN THAT SUBINTERVAL.                                                
C                                                                               
      DNA=DBLE(NA)                                                              
      DT1=DINT(T(1))                                                            
      TEMP=DNA*T(1)                                                             
      L=IDINT(TEMP-DT1)+1                                                       
C                                                                               
C         TC IS THE NORMALIZED CHEBYSHEV TIME (-1 .LE. TC .LE. 1)               
C                                                                               
      TC=2.D0*(DMOD(TEMP,1.D0)+DT1)-1.D0                                        
C                                                                               
C       CHECK TO SEE WHETHER CHEBYSHEV TIME HAS CHANGED,                        
C       AND COMPUTE NEW POLYNOMIAL VALUES IF IT HAS.                            
C       (THE ELEMENT PC(2) IS THE VALUE OF T1(TC) AND HENCE                     
C       CONTAINS THE VALUE OF TC ON THE PREVIOUS CALL.)                         
C                                                                               
      IF(TC.NE.PC(2)) THEN                                                      
        NP=2                                                                    
        NV=3                                                                    
        PC(2)=TC                                                                
        TWOT=TC+TC                                                              
      ENDIF                                                                     
C                                                                               
C       BE SURE THAT AT LEAST 'NCF' POLYNOMIALS HAVE BEEN EVALUATED             
C       AND ARE STORED IN THE ARRAY 'PC'.                                       
C                                                                               
      IF(NP.LT.NCF) THEN                                                        
        DO 1 I=NP+1,NCF                                                         
        PC(I)=TWOT*PC(I-1)-PC(I-2)                                              
    1   CONTINUE                                                                
        NP=NCF                                                                  
      ENDIF                                                                     
C                                                                               
C       INTERPOLATE TO GET POSITION FOR EACH COMPONENT                          
C                                                                               
      DO 2 I=1,NCM                                                              
      PV(I,1)=0.D0                                                              
      DO 3 J=NCF,1,-1                                                           
      PV(I,1)=PV(I,1)+PC(J)*BUF(J,I,L)                                          
    3 CONTINUE                                                                  
    2 CONTINUE                                                                  
      IF(FL.LE.1) RETURN                                                        
C                                                                               
C       IF VELOCITY INTERPOLATION IS WANTED, BE SURE ENOUGH                     
C       DERIVATIVE POLYNOMIALS HAVE BEEN GENERATED AND STORED.                  
C                                                                               
      VFAC=(DNA+DNA)/T(2)                                                       
      VC(3)=TWOT+TWOT                                                           
      IF(NV.LT.NCF) THEN                                                        
        DO 4 I=NV+1,NCF                                                         
        VC(I)=TWOT*VC(I-1)+PC(I-1)+PC(I-1)-VC(I-2)                              
    4   CONTINUE                                                                
        NV=NCF                                                                  
      ENDIF                                                                     
C                                                                               
C       INTERPOLATE TO GET VELOCITY FOR EACH COMPONENT                          
C                                                                               
      DO 5 I=1,NCM                                                              
      PV(I,2)=0.D0                                                              
      DO 6 J=NCF,2,-1                                                           
      PV(I,2)=PV(I,2)+VC(J)*BUF(J,I,L)                                          
    6 CONTINUE                                                                  
      PV(I,2)=PV(I,2)*VFAC                                                      
    5 CONTINUE                                                                  
C                                                                               
      RETURN                                                                    
C                                                                               
      END                                                                       
C------------------------------- SUBROUTINE 'JTOC' ---------------------        
C                                                                               
C+++++++++++++++++++                                                            
C                                                                               
      SUBROUTINE JTOC(JD,DATE,SECS,FLAG)                                        
C                                                                               
C++++++++++++++++++++++++++++++                                                 
C                                                                               
C     THIS SUBROUTINE CONVERTS JULIAN DAY NUMBER TO CALENDAR DATE.              
C                                                                               
C     CALLING SEQUENCE PARAMETERS:                                              
C                                                                               
C     INPUT:                                                                    
C                                                                               
C         JD = JULIAN DATE AT WHICH CALENDAR DATE IS WANTED                     
C                                                                               
C       FLAG = INTEGER CONTROLLING CALENDAR USED IN CONVERSION:                 
C                                                                               
C               -1 => ALL DATES EXPRESSED IN JULIAN CALENDAR                    
C               +1 => ALL DATES EXPRESSED IN GREGORIAN CALENDAR                 
C                0 => AUTOMATIC MODE, WHERE DATES BEFORE JD 2299160             
C                     (OCT 4, 1582) ARE JULIAN AND LATER DATES ARE              
C                     GREGORIAN                                                 
C                                                                               
C     OUTPUT:                                                                   
C                                                                               
C       DATE = 5-WD INTEGER ARRAY WITH MONTH, DAY, YEAR, HOUR, MINUTE           
C              OF RESULTING ASTRONOMICAL CALENDAR DATE                          
C                                                                               
C       SECS = D.P. SECONDS, INCLUDING FRACTION; E.G., 51.206                   
C                                                                               
C     RESTRICTIONS - INPUT JULIAN CALENDAR MUST BE FOR A POSITIVE               
C                    JULIAN DAY NUMBER. FOR GREGORIAN CALENDAR,                 
C                    JD > 1721119 (DATES MUST BE A.D.)                          
C                                                                               
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                       
C                                                                               
C       CALLING SEQUENCE DECLARATIONS                                           
C                                                                               
      DOUBLE PRECISION JD                                                       
      INTEGER DATE(5)                                                           
      DOUBLE PRECISION SECS                                                     
      INTEGER FLAG                                                              
C                                                                               
C                                                                               
      DT=JD+.500000000100D0                                                     
      J=IDINT(DT)                                                               
      DJA=DBLE(J)                                                               
      DT=(DT-DJA)*24.D0                                                         
      DATE(4)=IDINT(DT)                                                         
      DJA=DBLE(DATE(4))                                                         
      DT=(DT-DJA)*60.D0                                                         
      DATE(5)=IDINT(DT)                                                         
      DJA=DBLE(DATE(5))                                                         
      SECS=(DT-DJA)*60.D0                                                       
C                                                                               
      IF(FLAG.LT.0 .OR. (FLAG.EQ.0 .AND. JD.LT.2299160.5D0)) THEN               
        IY=4*(J+105498)/1461-5001                                               
        IDY=J-(36525*(IY+5000))/100+105133                                      
      ELSE                                                                      
        IY=4*(J-1720754+3*(4*(J-1721119)/146097+1)/4)/1461-1                    
        IDY=J-36525*IY/100+3*(IY/100+1)/4-1721119                               
      ENDIF                                                                     
C                                                                               
      M=(5*IDY-3)/153+3                                                         
      DATE(2)=IDY-(153*(M-3)+2)/5                                               
      IF(M.GE.13) M=M-12                                                        
      IF(M.LE.2) IY=IY+1                                                        
C                                                                               
      DATE(1)=M                                                                 
      DATE(3)=IY                                                                
C                                                                               
      RETURN                                                                    
C                                                                               
      END                                                                       
C------------------------------ SUBROUTINE 'PLEPH' ---------------------        
C                                                                               
C++++++++++++++++++++++++++                                                     
C                                                                               
      SUBROUTINE PLEPH(JD,TARG,CENT,RRD,*)                                      
C                                                                               
C++++++++++++++++++++++++++                                                     
C                                                                               
C     THIS SUBROUTINE READS THE JPL PLANETARY EPHEMERIS                         
C     AND GIVES THE POSITION AND VELOCITY OF THE POINT 'TARG'                   
C     WITH RESPECT TO 'CENT'.                                                   
C                                                                               
C     CALLING SEQUENCE PARAMETERS:                                              
C                                                                               
C       JD = D.P. JULIAN EPHEMERIS DATE AT WHICH INTERPOLATION                  
C            IS WANTED.                                                         
C                                                                               
C     TARG = INTEGER NUMBER OF 'TARGET' POINT.                                  
C                                                                               
C     CENT = INTEGER NUMBER OF CENTER POINT.                                    
C                                                                               
C            THE NUMBERING CONVENTION FOR 'TARG' AND 'CENT' IS:                 
C                                                                               
C                1 = MERCURY           8 = NEPTUNE                              
C                2 = VENUS             9 = PLUTO                                
C                3 = EARTH            10 = MOON                                 
C                4 = MARS             11 = SUN                                  
C                5 = JUPITER          12 = SOLAR-SYSTEM BARYCENTER              
C                6 = SATURN           13 = EARTH-MOON BARYCENTER                
C                7 = URANUS           14 = NUTATIONS (LONGITUDE AND OBLIQ)      
C                            15 = LIBRATIONS, IF ON EPH FILE                    
C                                                                               
C             (IF NUTATIONS ARE WANTED, SET TARG = 14. FOR LIBRATIONS,          
C              SET TARG = 15. 'CENT' WILL BE IGNORED ON EITHER CALL.)           
C                                                                               
C      RRD = OUTPUT 6-WORD D.P. ARRAY CONTAINING POSITION AND VELOCITY          
C            OF POINT 'TARG' RELATIVE TO 'CENT'. THE UNITS ARE AU AND           
C            AU/DAY. FOR LIBRATIONS THE UNITS ARE RADIANS AND RADIANS           
C            PER DAY. IN THE CASE OF NUTATIONS THE FIRST FOUR WORDS OF          
C            RRD WILL BE SET TO NUTATIONS AND RATES, HAVING UNITS OF            
C            RADIANS AND RADIANS/DAY.                                           
C                                                                               
C            NOTE: IN MANY CASES THE USER WILL NEED ONLY POSITION               
C                  VALUES FOR EPHEMERIDES OR NUTATIONS. FOR                     
C                  POSITION-ONLY OUTPUT, THE INTEGER VARIABLE 'IPV'             
C                  IN THE COMMON AREA /PLECOM/ SHOULD BE SET = 1                
C                  BEFORE THE NEXT CALL TO PLEPH. (ITS DEFAULT                  
C                  VALUE IS 2, WHICH RETURNS BOTH POSITIONS AND                 
C                  RATES.)                                                      
C                                                                               
C        * = STATEMENT # IN CASE OF ERROR RETURN (EPOCH OUT OF RANGE            
C            OR REQUEST FOR NUTATIONS OR LIBRATIONS WHEN NOT ON FILE).          
C                                                                               
C                                                                               
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)                                       
C                                                                               
      SAVE                                                                      
C                                                                               
C       CALLING SEQUENCE DECLARATIONS                                           
C                                                                               
      DOUBLE PRECISION JD                                                       
      INTEGER TARG                                                              
      INTEGER CENT                                                              
      DOUBLE PRECISION RRD(6)                                                   
C                                                                               
C       MISCELLANEOUS DECLARATIONS                                              
C                                                                               
      DOUBLE PRECISION JED(2)                                                   
      DOUBLE PRECISION PV(6,13)                                                 
      DOUBLE PRECISION EMBF(2)                                                  
      DOUBLE PRECISION VE(2)                                                    
      DOUBLE PRECISION FAC                                                      
C                                                                               
      LOGICAL FIRST                                                             
      LOGICAL BSAVE                                                             
C                                                                               
      INTEGER LIST(12)                                                          
      INTEGER L(2)                                                              
      INTEGER TC(2)                                                             
      INTEGER LLST(13)                                                          
      INTEGER NEMB                                                              
C                                                                               
C       COMMON AREA FOR CHARACTER DATA IN RECORD 1                              
C                                                                               
      CHARACTER*6 TTL(14,3)                                                     
      CHARACTER*6 CNAM(400)                                                     
      COMMON/CHRHDR/TTL,CNAM                                                    
C                                                                               
C       COMMON AREA FOR CONSTANTS AND POINTERS IN RECORD 1                      
C                                                                               
      DOUBLE PRECISION SS(3)                                                    
      INTEGER NCON                                                              
      DOUBLE PRECISION CVAL(400)                                                
      DOUBLE PRECISION AU                                                       
      DOUBLE PRECISION EMRAT                                                    
      INTEGER IPT(36)                                                           
      INTEGER DENUM                                                             
      INTEGER LPT(3)                                                            
      COMMON/EPHHDR/SS,NCON,CVAL,AU,EMRAT,IPT,DENUM,LPT                         
C                                                                               
C       COMMON AREA FOR 'STATE'                                                 
C                                                                               
      LOGICAL KM                                                                
      LOGICAL BARY                                                              
      DOUBLE PRECISION PVSUN(6)                                                 
      COMMON/STCOMM/KM,BARY,PVSUN                                               
C                                                                               
C       COMMON AREA FOR POSITION/VELOCITY SWITCH                                
C                                                                               
      INTEGER IPV                                                               
      COMMON/PLECOM/IPV                                                         
C                                                                               
C       DATA STATEMENTS                                                         
C                                                                               
      DATA JED/2*0.D0/                                                          
      DATA PV/78*0.D0/                                                          
      DATA EMBF/-1.D0,1.D0/                                                     
      DATA LIST/12*0/                                                           
      DATA L/2*0/                                                               
      DATA TC/2*0/                                                              
      DATA LLST/1,2,10,4,5,6,7,8,9,10,11,11,3/                                  
      DATA FIRST/.TRUE./                                                        
      DATA FAC/0.D0/                                                            
      DATA NEMB/1/                                                              
C                                                                               
C                                                                               
C       ENTRY POINT -- 1ST TIME IN, BE SURE EPHEMERIS IS INITIALIZED            
C                                                                               
      IF(FIRST) THEN                                                            
        FIRST=.FALSE.                                                           
        CALL EPHOPN(.TRUE.)                                                     
        VE(1)=1.D0/(1.D0+EMRAT)                                                 
        VE(2)=EMRAT*VE(1)                                                       
      ENDIF                                                                     
C                                                                               
C       INITIALIZE JED FOR 'STATE' AND SET UP COMPONENT COUNT                   
C                                                                               
      JED(1)=JD                                                                 
      NCMP=3*IPV                                                                
C                                                                               
C       CHECK FOR NUTATION CALL                                                 
C                                                                               
      IF(TARG.EQ.14) THEN                                                       
        IF(IPT(35).GT.0) THEN                                                   
          LIST(11)=IPV                                                          
          CALL STATE(JED,LIST,PV,RRD,*99)                                       
          LIST(11)=0                                                            
          RETURN                                                                
        ELSE                                                                    
          RETURN 1                                                              
        ENDIF                                                                   
      ENDIF                                                                     
C                                                                               
C       CHECK FOR LIBRATIONS                                                    
C                                                                               
      IF(TARG.EQ.15) THEN                                                       
        IF(LPT(2).GT.0) THEN                                                    
          LIST(12)=IPV                                                          
          CALL STATE(JED,LIST,PV,RRD,*99)                                       
          LIST(12)=0                                                            
          DO 7 I=1,NCMP                                                         
    7     RRD(I)=PV(I,11)                                                       
          RETURN                                                                
        ELSE                                                                    
          RETURN 1                                                              
        ENDIF                                                                   
      ENDIF                                                                     
C                                                                               
C       CHECK FOR TARGET POINT = CENTER POINT                                   
C                                                                               
      IF(TARG.EQ.CENT) THEN                                                     
        DO 1 I=1,NCMP                                                           
    1   RRD(I)=0.D0                                                             
        RETURN                                                                  
      ENDIF                                                                     
C                                                                               
C       FORCE BARYCENTRIC OUTPUT BY 'STATE'                                     
C                                                                               
      BSAVE=BARY                                                                
      BARY=.TRUE.                                                               
C                                                                               
C       SET UP PROPER ENTRIES IN 'LIST' ARRAY FOR STATE CALL                    
C                                                                               
      TC(1)=TARG                                                                
      TC(2)=CENT                                                                
      LME=0                                                                     
C                                                                               
      DO 2 I=1,2                                                                
      L(I)=LLST(TC(I))                                                          
      IF(L(I).LT.11) LIST(L(I))=IPV                                             
      IF(TC(I).EQ.3) THEN                                                       
        LME=3                                                                   
        FAC=-VE(1)                                                              
      ELSEIF(TC(I).EQ.10) THEN                                                  
        LME=10                                                                  
        FAC=VE(2)                                                               
      ELSEIF(TC(I).EQ.13) THEN                                                  
        NEMB=I                                                                  
      ENDIF                                                                     
    2 CONTINUE                                                                  
C                                                                               
      IF(LIST(10).EQ.IPV .AND. L(1).NE.L(2)) LIST(3)=IPV-LIST(3)                
C                                                                               
C       MAKE CALL TO STATE                                                      
C                                                                               
      CALL STATE(JED,LIST,PV,RRD,*99)                                           
C                                                                               
C       CASE: EARTH-TO-MOON                                                     
C                                                                               
      IF(TARG.EQ.10 .AND. CENT.EQ.3) THEN                                       
        DO 3 I=1,NCMP                                                           
    3   RRD(I)=PV(I,10)                                                         
C                                                                               
C       CASE: MOON-TO-EARTH                                                     
C                                                                               
      ELSEIF(TARG.EQ.3 .AND. CENT.EQ.10) THEN                                   
        DO 4 I=1,NCMP                                                           
    4   RRD(I)=-PV(I,10)                                                        
C                                                                               
C       CASE: EMBARY TO MOON OR EARTH                                           
C                                                                               
      ELSEIF((TARG.EQ.13 .OR. CENT.EQ.13) .AND. LIST(10).EQ.IPV) THEN           
        DO 5 I=1,NCMP                                                           
    5   RRD(I)=PV(I,10)*FAC*EMBF(NEMB)                                          
C                                                                               
C       OTHERWISE, GET EARTH OR MOON VECTOR AND THEN GET OUTPUT VECTOR          
C                                                                               
      ELSE                                                                      
        DO 6 I=1,NCMP                                                           
        PV(I,11)=PVSUN(I)                                                       
        PV(I,13)=PV(I,3)                                                        
        IF(LME.GT.0) PV(I,LME)=PV(I,3)+FAC*PV(I,10)                             
    6   RRD(I)=PV(I,TARG)-PV(I,CENT)                                            
C                                                                               
      ENDIF                                                                     
C                                                                               
C       CLEAR 'STATE' BODY ARRAY AND RESTORE BARYCENTER FLAG                    
C                                                                               
      LIST(3)=0                                                                 
      LIST(L(1))=0                                                              
      LIST(L(2))=0                                                              
      BARY=BSAVE                                                                
C                                                                               
C       THAT'S ALL                                                              
C                                                                               
      RETURN                                                                    
C                                                                               
C       ERROR EXIT                                                              
C                                                                               
   99 WRITE(6,100)                                                              
  100 FORMAT('0 ERROR RETURN FROM CALL TO STATE. EPOCH OUT OF RANGE.')          
      RETURN 1                                                                  
C                                                                               
      END                                                                       
C------------------------------- SUBROUTINE 'RCI' ----------------------        
C                                                                               
C+++++++++++++++++++++++++++++                                                  
C                                                                               
      SUBROUTINE RCI(IMAGE)                                                     
C                                                                               
C+++++++++++++++++++++++++++++                                                  
C                                                                               
C     THIS SUBROUTINE IS CALLED BY 'EPHDSK' TO READ THE BLOCKED                 
C     CHARACTER-ENCODED FORMAT OF THE TAPES EXPORTED FROM JPL.                  
C     IT OUTPUTS ONE 80-CHARACTER CARD IMAGE PER CALL. THE OUTPUT               
C     IS IN THE CHARACTER*80 VARIABLE 'IMAGE'.                                  
C                                                                               
C     IF THE TAPE SENT TO YOU HAS OTHER THAN 24 IMAGES PER BLOCK,               
C     CHANGE THE PARAMETER 'INUM' TO THE CORRECT NUMBER.                        
C                                                                               
      SAVE                                                                      
C                                                                               
C       NUMBER OF CARD IMAGES PER LOGICAL INPUT RECORD                          
C                                                                               
      PARAMETER (INUM=24)                                                       
C                                                                               
C       OUTPUT IMAGE LOCATION IN CALLING SEQUENCE                               
C                                                                               
      CHARACTER*80 IMAGE                                                        
C                                                                               
C       STORAGE BUFFER FOR INPUT BLOCKED RECORDS                                
C                                                                               
      CHARACTER*80 CB(INUM)                                                     
C                                                                               
C       NUMBER OF IMAGES READ IN BLOCK SO FAR                                   
C                                                                               
      INTEGER NC                                                                
      DATA NC/1000000/                                                          
C                                                                               
C                                                                               
C       ENTRY POINT -- CHECK TO SEE WHETHER A NEW BLOCK HAS TO BE READ          
C                                                                               
      IF(NC.GE.INUM) THEN                                                       
        READ(9,100,END=1)CB                                                     
  100   FORMAT(A)                                                               
        NC=0                                                                    
      ENDIF                                                                     
C                                                                               
C       TRANSFER NEXT IMAGE IN BLOCK                                            
C                                                                               
      NC=NC+1                                                                   
      IMAGE=CB(NC)                                                              
      RETURN                                                                    
C                                                                               
C       RE-ENTRY FOR EOF ON TAPE READ                                           
C                                                                               
    1 WRITE(6,101)                                                              
  101 FORMAT('0 UNEXPECTED EOF ON TAPE READ.')                                  
      STOP 'TAPE EOF EXIT'                                                      
C                                                                               
      END                                                                       
C------------------------------- SUBROUTINE 'SPLIT' --------------------        
C                                                                               
C+++++++++++++++++++++++++                                                      
C                                                                               
      SUBROUTINE SPLIT(TT,FR)                                                   
C                                                                               
C+++++++++++++++++++++++++                                                      
C                                                                               
C     THIS SUBROUTINE BREAKS A D.P. NUMBER INTO A D.P. INTEGER                  
C     AND A D.P. FRACTIONAL PART.                                               
C                                                                               
C     CALLING SEQUENCE PARAMETERS:                                              
C                                                                               
C       TT = D.P. INPUT NUMBER                                                  
C                                                                               
C       FR = D.P. 2-WORD OUTPUT ARRAY.                                          
C            FR(1) CONTAINS INTEGER PART                                        
C            FR(2) CONTAINS FRACTIONAL PART                                     
C                                                                               
C            FOR NEGATIVE INPUT NUMBERS, FR(1) CONTAINS THE NEXT                
C            MORE NEGATIVE INTEGER; FR(2) CONTAINS A POSITIVE FRACTION.         
C                                                                               
C       CALLING SEQUENCE DECLARATIONS                                           
C                                                                               
      DOUBLE PRECISION TT                                                       
      DOUBLE PRECISION FR(2)                                                    
C                                                                               
C                                                                               
C       MAIN ENTRY -- GET INTEGER AND FRACTIONAL PARTS                          
C                                                                               
      FR(1)=DINT(TT)                                                            
      FR(2)=TT-FR(1)                                                            
C                                                                               
      IF(TT.GE.0.D0 .OR. FR(2).EQ.0.D0) RETURN                                  
C                                                                               
C       MAKE ADJUSTMENTS FOR NEGATIVE INPUT NUMBER                              
C                                                                               
      FR(1)=FR(1)-1.D0                                                          
      FR(2)=FR(2)+1.D0                                                          
C                                                                               
      RETURN                                                                    
C                                                                               
      END                                                                       
C--------------------------- SUBROUTINE 'STATE' ------------------------        
C                                                                               
C++++++++++++++++++++++++++++++++                                               
C                                                                               
      SUBROUTINE STATE(JED,LIST,PV,NUT,*)                                       
C                                                                               
C++++++++++++++++++++++++++++++++                                               
C                                                                               
C     THIS SUBROUTINE READS AND INTERPOLATES THE JPL PLANETARY EPHEMERIS        
C     FILE.                                                                     
C                                                                               
C     CALLING SEQUENCE PARAMETERS:                                              
C                                                                               
C     INPUT:                                                                    
C                                                                               
C         JED   DP 2-WORD JULIAN EPHEMERIS EPOCH AT WHICH INTERPOLATION         
C               IS WANTED.  ANY COMBINATION OF JED(1)+JED(2) WHICH FALLS        
C               WITHIN THE TIME SPAN ON THE FILE IS A PERMISSIBLE EPOCH.        
C                                                                               
C                A. FOR EASE IN PROGRAMMING, THE USER MAY PUT THE               
C                   ENTIRE EPOCH IN JED(1) AND SET JED(2)=0.                    
C                                                                               
C                B. FOR MAXIMUM INTERPOLATION ACCURACY, SET JED(1) =            
C                   THE MOST RECENT MIDNIGHT AT OR BEFORE INTERPOLATION         
C                   EPOCH AND SET JED(2) = FRACTIONAL PART OF A DAY             
C                   ELAPSED BETWEEN JED(1) AND EPOCH.                           
C                                                                               
C                C. AS AN ALTERNATIVE, IT MAY PROVE CONVENIENT TO SET           
C                   JED(1) = SOME FIXED EPOCH, SUCH AS START OF INTEGRATION,    
C                   AND JED(2) = ELAPSED INTERVAL BETWEEN THEN AND EPOCH.       
C                                                                               
C        LIST   12-WORD INTEGER ARRAY SPECIFYING WHAT INTERPOLATION             
C               IS WANTED FOR EACH OF THE BODIES ON THE FILE.                   
C                                                                               
C                         LIST(I)=0, NO INTERPOLATION FOR BODY I                
C                                =1, POSITION ONLY                              
C                                =2, POSITION AND VELOCITY                      
C                                                                               
C               THE DESIGNATION OF THE ASTRONOMICAL BODIES BY I IS:             
C                                                                               
C                         I = 1: MERCURY                                        
C                           = 2: VENUS                                          
C                           = 3: EARTH-MOON BARYCENTER                          
C                           = 4: MARS                                           
C                           = 5: JUPITER                                        
C                           = 6: SATURN                                         
C                           = 7: URANUS                                         
C                           = 8: NEPTUNE                                        
C                           = 9: PLUTO                                          
C                           =10: GEOCENTRIC MOON                                
C                           =11: NUTATIONS IN LONGITUDE AND OBLIQUITY           
C                           =12: LUNAR LIBRATIONS (IF ON FILE)                  
C                                                                               
C                                                                               
C     OUTPUT:                                                                   
C                                                                               
C          PV   DP 6 X 11 ARRAY THAT WILL CONTAIN REQUESTED INTERPOLATED        
C               QUANTITIES.  THE BODY SPECIFIED BY LIST(I) WILL HAVE ITS        
C               STATE IN THE ARRAY STARTING AT PV(1,I).  (ON ANY GIVEN          
C               CALL, ONLY THOSE WORDS IN 'PV' WHICH ARE AFFECTED BY THE        
C               FIRST 10 'LIST' ENTRIES (AND BY LIST(12) IF LIBRATIONS ARE      
C               ON THE FILE) ARE SET.  THE REST OF THE 'PV' ARRAY               
C               IS UNTOUCHED.)  THE ORDER OF COMPONENTS STARTING IN             
C               PV(1,I) IS: X,Y,Z,DX,DY,DZ.                                     
C                                                                               
C               ALL OUTPUT VECTORS ARE REFERENCED TO THE EARTH MEAN             
C               EQUATOR AND EQUINOX OF EPOCH. THE MOON STATE IS ALWAYS          
C               GEOCENTRIC; THE OTHER NINE STATES ARE EITHER HELIOCENTRIC       
C               OR SOLAR-SYSTEM BARYCENTRIC, DEPENDING ON THE SETTING OF        
C               COMMON FLAGS (SEE BELOW).                                       
C                                                                               
C               LUNAR LIBRATIONS, IF ON FILE, ARE PUT INTO PV(K,11) IF          
C               LIST(12) IS 1 OR 2.                                             
C                                                                               
C         NUT   DP 4-WORD ARRAY THAT WILL CONTAIN NUTATIONS AND RATES,          
C               DEPENDING ON THE SETTING OF LIST(11).  THE ORDER OF             
C               QUANTITIES IN NUT IS:                                           
C                                                                               
C                        D PSI  (NUTATION IN LONGITUDE)                         
C                        D EPSILON (NUTATION IN OBLIQUITY)                      
C                        D PSI DOT                                              
C                        D EPSILON DOT                                          
C                                                                               
C           *   STATEMENT # FOR ERROR RETURN, IN CASE OF EPOCH OUT OF           
C               RANGE OR I/O ERRORS.                                            
C                                                                               
C     PARAMETERS IN COMMON:                                                     
C                                                                               
C     COMMON AREA EPUNIT:                                                       
C                                                                               
C        FILE   INTEGER OF THE UNIT CONTAINING THE EPHEMERIS. DEFAULT = 12      
C                                                                               
C     COMMON AREA STCOMM:                                                       
C                                                                               
C          KM   LOGICAL FLAG DEFINING PHYSICAL UNITS OF THE OUTPUT              
C               STATES. KM = .TRUE., KM AND KM/SEC                              
C                          = .FALSE., AU AND AU/DAY                             
C               DEFAULT VALUE = .FALSE.  (KM DETERMINES TIME UNIT               
C               FOR NUTATIONS AND LIBRATIONS.  ANGLE UNIT IS ALWAYS RADIANS.)   
C                                                                               
C        BARY   LOGICAL FLAG DEFINING OUTPUT CENTER.                            
C               ONLY THE 9 PLANETS ARE AFFECTED.                                
C                        BARY = .TRUE. => CENTER IS SOLAR-SYSTEM BARYCENTER     
C                             = .FALSE. => CENTER IS SUN                        
C               DEFAULT VALUE = .FALSE.                                         
C                                                                               
C       PVSUN   DP 6-WORD ARRAY CONTAINING THE BARYCENTRIC POSITION AND         
C               VELOCITY OF THE SUN.                                            
C                                                                               
C                                                                               
      SAVE                                                                      
C                                                                               
      DOUBLE PRECISION JED(2)                                                   
      INTEGER LIST(12)                                                          
      DOUBLE PRECISION PV(6,11)                                                 
      DOUBLE PRECISION NUT(4)                                                   
C                                                                               
      DOUBLE PRECISION T(2)                                                     
      DOUBLE PRECISION AUFAC                                                    
      DOUBLE PRECISION JD(4)                                                    
      DOUBLE PRECISION S                                                        
C                                                                               
      INTEGER IBSZ                                                              
      INTEGER IB(1)                                                             
      COMMON/EPCOMM/IBSZ,IB                                                     
C                                                                               
      DOUBLE PRECISION BUF(1)                                                   
      EQUIVALENCE(IB,BUF)                                                       
C                                                                               
      LOGICAL FIRST                                                             
C                                                                               
C       COMMON AREA FOR CHARACTER DATA IN RECORD 1                              
C                                                                               
      CHARACTER*6 TTL(14,3)                                                     
      CHARACTER*6 CNAM(400)                                                     
      COMMON/CHRHDR/TTL,CNAM                                                    
C                                                                               
C       COMMON AREA FOR CONSTANTS AND POINTERS IN RECORD 1                      
C                                                                               
      DOUBLE PRECISION SS(3)                                                    
      INTEGER NCON                                                              
      DOUBLE PRECISION CVAL(400)                                                
      DOUBLE PRECISION AU                                                       
      DOUBLE PRECISION EMRAT                                                    
      INTEGER L(3,12)                                                           
      INTEGER DENUM                                                             
      INTEGER LPT(3)                                                            
      COMMON/EPHHDR/SS,NCON,CVAL,AU,EMRAT,L,DENUM,LPT                           
C                                                                               
      INTEGER FILE                                                              
      COMMON/EPUNIT/FILE                                                        
C                                                                               
      LOGICAL KM                                                                
      LOGICAL BARY                                                              
      DOUBLE PRECISION PVSUN(3,2)                                               
      COMMON/STCOMM/KM,BARY,PVSUN                                               
C                                                                               
      INTEGER NRL                                                               
C                                                                               
C       DATA STATEMENTS                                                         
C                                                                               
      DATA AUFAC/1.D0/                                                          
      DATA FIRST/.TRUE./                                                        
      DATA NRL/0/                                                               
C                                                                               
C                                                                               
C       ENTRY POINT -- 1ST TIME IN, GET POINTER DATA, ETC., FROM EPH FILE       
C                                                                               
      IF(FIRST) THEN                                                            
        FIRST=.FALSE.                                                           
        CALL EPHOPN(.TRUE.)                                                     
        IF(KM) THEN                                                             
          T(2)=SS(3)*86400.D0                                                   
        ELSE                                                                    
          T(2)=SS(3)                                                            
          AUFAC=1.D0/AU                                                         
        ENDIF                                                                   
      ENDIF                                                                     
C                                                                               
C       MAIN ENTRY POINT -- CHECK EPOCH AND READ RIGHT RECORD                   
C                                                                               
      S=JED(1)-.5D0                                                             
      CALL SPLIT(S,JD(1))                                                       
      CALL SPLIT(JED(2),JD(3))                                                  
      JD(1)=JD(1)+JD(3)+.5D0                                                    
      JD(2)=JD(2)+JD(4)                                                         
      CALL SPLIT(JD(2),JD(3))                                                   
      JD(1)=JD(1)+JD(3)                                                         
C                                                                               
C       ERROR RETURN OF EPOCH OUT OF RANGE                                      
C                                                                               
      IF(JD(1).LT.SS(1) .OR. JD(1)+JD(4).GT.SS(2)) RETURN 1                     
C                                                                               
C       CALCULATE RECORD # AND RELATIVE TIME IN INTERVAL                        
C                                                                               
      NR=IDINT((JD(1)-SS(1))/SS(3))+3                                           
      IF(JD(1).EQ.SS(2)) NR=NR-1                                                
      T(1)=((JD(1)-(DBLE(NR-3)*SS(3)+SS(1)))+JD(4))/SS(3)                       
C                                                                               
C       READ CORRECT RECORD IF NOT IN CORE                                      
C                                                                               
      IF(NR.NE.NRL) THEN                                                        
        NRL=NR                                                                  
        READ(UNIT=FILE,REC=NR,ERR=98)(IB(K),K=1,IBSZ)                           
      ENDIF                                                                     
C                                                                               
C       INTERPOLATE SSBARY SUN                                                  
C                                                                               
      CALL INTERP(BUF(L(1,11)),T,L(2,11),3,L(3,11),2,PVSUN)                     
      DO 6 I=1,6                                                                
    6 PVSUN(I,1)=PVSUN(I,1)*AUFAC                                               
C                                                                               
C       CHECK AND INTERPOLATE WHICHEVER BODIES ARE REQUESTED                    
C                                                                               
      DO 3 I=1,10                                                               
      IF(LIST(I).GT.0) THEN                                                     
        CALL INTERP(BUF(L(1,I)),T,L(2,I),3,L(3,I),LIST(I),PV(1,I))              
        DO 4 J=1,LIST(I)*3                                                      
        IF(I.LE.9 .AND. .NOT.BARY) THEN                                         
          PV(J,I)=PV(J,I)*AUFAC-PVSUN(J,1)                                      
        ELSE                                                                    
          PV(J,I)=PV(J,I)*AUFAC                                                 
        ENDIF                                                                   
    4   CONTINUE                                                                
      ENDIF                                                                     
    3 CONTINUE                                                                  
C                                                                               
C       DO NUTATIONS IF REQUESTED (AND IF ON FILE)                              
C                                                                               
      IF(LIST(11).GT.0 .AND. L(2,12).GT.0)                                      
     * CALL INTERP(BUF(L(1,12)),T,L(2,12),2,L(3,12),LIST(11),NUT)               
C                                                                               
C       GET LIBRATIONS IF REQUESTED (AND IF ON FILE)                            
C                                                                               
      IF(LPT(2).GT.0 .AND. LIST(12).GT.0)                                       
     * CALL INTERP(BUF(LPT(1)),T,LPT(2),3,LPT(3),LIST(12),PV(1,11))             
C                                                                               
C       THAT'S ALL                                                              
C                                                                               
      RETURN                                                                    
C                                                                               
C       ERROR EXIT                                                              
C                                                                               
   98 RETURN 1                                                                  
C                                                                               
      END                                                                       
C-------------------------- BLOCK DATA SUBPROGRAM 'COMDAT' -------------        
C                                                                               
C++++++++++++++++++++++++++++                                                   
C                                                                               
      BLOCK DATA COMDAT                                                         
C                                                                               
C++++++++++++++++++++++++++++                                                   
C                                                                               
C     THIS BLOCK DATA PROGRAM INITIALIZES VARIOUS COMMON-AREA VARIABLES         
C                                                                               
C       KSIZE = SIZE OF EPHEMERIS BUFFER (S.P. WORDS)                           
C                                                                               
      PARAMETER (KSIZE=1652)                                                    
C                                                                               
C       COMMON AREA FOR BUFFER ASSIGNMENT                                       
C                                                                               
      INTEGER IBSZ                                                              
      INTEGER IB(KSIZE)                                                         
      COMMON/EPCOMM/IBSZ,IB                                                     
C                                                                               
C       'PLEPH' COMMON AREA FOR POSITION/VELOCITY SWITCH                        
C                                                                               
      INTEGER IPV                                                               
      COMMON/PLECOM/IPV                                                         
C                                                                               
C       'STATE' COMMON AREA FOR KM AND SS-BARYCENTER FLAGS                      
C                                                                               
      LOGICAL KM                                                                
      LOGICAL BARY                                                              
      DOUBLE PRECISION PVSUN(3,2)                                               
      COMMON/STCOMM/KM,BARY,PVSUN                                               
C                                                                               
C       'EPHOPN' COMMON AREA FOR EPHEMERIS UNIT NUMBER                          
C                                                                               
      INTEGER FILE                                                              
      COMMON/EPUNIT/FILE                                                        
C                                                                               
C       DATA STATEMENTS INITIALIZING COMMON                                     
C                                                                               
      DATA IBSZ/KSIZE/                                                          
      DATA IPV/2/                                                               
      DATA KM/.FALSE./                                                          
      DATA BARY/.FALSE./                                                        
      DATA FILE/12/                                                             
C                                                                               
      END                                                                       
 Test output from JPL PLANETARY EPHEMERIS: DE-200 + LE-200                      
  200  1.495978706600000+008  8.130058700000000+001                             
   199                                                                          
  2436912.5  2460688.5  32.000                                                  
 DENUM   8  838860799 1073741822 LENUM   8  838860799 1073741822                
 TDATEF  0          0          0 TDATEB 40  791995141  573571073                
 CENTER  4  738197503 1073741822 CLIGHT 19  613974953 1056561954                
 AU     28  598391482  687194767 EMRAT   7  681998754  550717886                
 GM1   -34  906205055  932729705 GM2   -30  835113643  189366877                
 GMB   -30 1037284821  896492285 GM4   -33  880788582  116444500                
 GM5   -21  636210482  229418193 GM6   -23  761961184  131164095                
 GM7   -26  928689972  829357903 GM8   -25  552001695 1056695294                
 GM9   -38  671829755  678370903 GMS   -11  650717827  667611923                
 RAD1   12  639628738  601295421 RAD2   13  793223233  575525617                
 RE     13  835995566   85899345 RAD4   12  890638172  171798691                
 RAD5   17  584892416          0 RAD6   16  988446720          0                
 RAD7   15  832307200          0 RAD8   15  796262400          0                
 RAD9   12  655360000          0 RADS   20  712704000          0                
 RADM   11  911212544          0 JDEPOC 22  624742527 1073741822                
 X1     -1  767210464  564368374 Y1     -3 -786400396 -926460001                
 Z1     -3 -738571201 -719560426 XD1    -8  925746240  794808126                
 YD1    -5  855191308   54658241 ZD1    -6  889509826 1063088241                
 X2      0  653102860  809937333 Y2     -1 -749756214 -621381182                
 Z2     -2 -839856483 -306456624 XD2    -6  752644566 1029435929                
 YD2    -6 1072883305  535519785 ZD2    -7  869834154  154883427                
 XB     -3  996560549  116979258 YB      0 -994935142  -34865986                
 ZB     -1 -862872384   -4811310 XDB    -5  577642866  110047710                
 YDB    -9  958296545  606435076 ZDB   -10  831203390  548379671                
 X4     -3 -985167275 -825966251 Y4      1 -713161352 -267478441                
 Z4      0 -650854176 -666071038 XD4    -6  995195794  491592149                
 YD4   -12 1043591234  159673180 ZD4   -11 -623970115  -78012204                
 X5      3 -722656250 -995928634 Y5      0 -892547888 -384885388                
 Z5     -2 -966788674  -70747649 XD5    -9  600535356  975240118                
 YD5    -7 -896554687 -259771301 ZD5    -8 -775983660 -293275955                
 X6      3 1058963033   29236254 Y6      3  616825744  978989867                
 Z6      1  836675287  883464016 XD6    -8 -884338615 -459616109                
 YD6    -7  595197542  270435573 ZD6    -9 1059058846  392091975                
 X7      5 -613035819 -898654953 Y7      1 -624237552 -987434225                
 Z7     -1 -537679448 -994412811 XD7   -12  974362845   60943888                
 YD7    -8-1035645097 -614507431 ZD7    -9 -908880440 -854260727                
 X8      5 -538867546 -144644176 Y8      5 -803391795-1001451970                
 Z8      4 -630852026  -49271107 XD8    -8  726536929  697324844                
 YD8    -9 -826550644 -976713573 ZD8   -10 -749062699 -656159358                
 X9      5-1023007421 -248372433 Y9      0 -937609116 -385272227                
 Z9      4  598030715  300001119 XD9   -11  709276850  509555182                
 YD9    -8 -865524548 -856015914 ZD9    -9 -593838265 -636820184                
 XS     -7  619134428    9577805 YS    -10  850202286  161554907                
 ZS    -11  590446537   38937042 XDS   -21 -793637261-1023431785                
 YDS   -17  728687736  929283875 ZDS   -18  627439600  864166189                
 XM    -10 -888600268 -112298996 YM     -8 -548279729 -880133497                
 ZM     -9 -597729002 -466822390 XDM   -10  660899761  531758918                
 YDM   -12 -736432961 -424768584 ZDM   -13 -752612024 -559351420                
 DELK   -1 -571230650 -395136991 DELN   -1  941296070  705782011                
 ADAY1  -1  575270818  782934742 ADAY2  -1  811770332    6108446                
 DDAY1  -2  658468531  467864737 DDAY2   1 -607027044  -23861601                
 PHC0   -5 -875438107 -756615384 PHC1   -1 -655775143  -60420472                
 PHC2   -1 1001084978 1014755773 PHC3   -1 -565342430 -407014795                
 PHL0   -2 -631723740  -20154048 PHL1    2  754559476  416404841                
 PHL2    2 -657382475-1009849203 PHL3    0  787196944  443279106                
 PHB4   -1  848522633   17219121 PHB5    0 1044387866  852832892                
 PHB6    0  790345383   79532621 PHB7   -2  868148044  593210712                
 PHB8    0  997871344  888801217 BETA    1  536870912          0                
 GAMMA   1  536870912          0 J2SUN   0          0          0                
 A2J2    0          0          0 MA0001-42  824525187  976074325                
 MA0002-44  604462909  866847437 MA0004-44  770690210    4645112                
 MA0007-49  967140655  742710805 MA0324-48  785801782  804779121                
 PHASE  -4  699220881 1017080688 LOVENO -1  644245094  429496729                
 JD1950 22  622920300  309237645 XL     -4 -559166523-1007502075                
 YL     -1  929930183  925383403 ZL      1  722168956  224005296                
 XDL   -15  931378292  752840898 YDL   -16-1066497767 -689396659                
 ZDL   -16-1010635175 -713592604 PSLP0   0          0          0                
 PSLP1  -2  987720080  984905380 AM    -16  817530869 1022307597                
 J2M   -12  889069095  188242726 C22M  -15  784735103  479635265                
 LBET  -10  694546952  580217918 LGAM  -12 1002852169   10638034                
 J3M   -16  853294550  330666000 C31M  -14  540225671  694866653                
 C32M  -17  687981801  978170847 C33M  -19  808413632  376219419                
 S31M  -17  789631451  763500879 S32M  -19  949938934  318259921                
 S33M  -21 -752899328  -76976838 K2M    -5  763337861 1020113861                
 J4M   -22 -654746856 -510522774 C41M  -17-1010185754 -805387025                
 C42M  -19 -810376807 -147617841 C43M  -23 -769924723 -112434130                
 C44M  -22 -697625115 -406418936 S41M  -18  829628845  961410170                
 S42M  -18 -811878577 -352708411 S43M  -20 -888298224  -29319039                
 S44M  -24 1016086936   69607179 AE    -14  750046942  323153534                
 J2E    -9  595182136  847789435 J3E   -18 -714946440 -907382962                
 J4E   -19 -906349425   -8925285 V4      9  689349430   91999431                
 V4D     9  735873839  636329493 INC4Q   5  844928833  625994080                
 INC4QD-20  925145434  528413602 NOD4Q   6  592859090 1039226500                
 NOD4QD-18 -909637981 -648235043 INC4    1  993211187  214748364                
 INC4D -22-1011075230  -24975615 NODE4   6  824968090  801956289                
 NODE4D-16 -567766412 -521083026 OBLIQ   5  786710132  737497424                
 OBLIQD-21 -802316273 -661482797 LCU1   12  822218615 1049176971                
 LCV1   11  673493574  840538156 LLO1    9  653897669  800272391                
 LCU2   12  597000022  394750402 LCV2   12  655408281  540803040                
 LLO2    8  562180623  463460094 AW550  -3 -743497407 -798775956                
 AW450  -3 -913989484 -679817044 AW350  -5 -609742900 -597780282                
 AW250  -3 -877877485 -545146111 AW150  -5 -963955072 -612559918                
 AW25   -3  698541993  694303657 AW10   -1  782835206  517017855                
 AW20   -6 -644057538 -356637370 AW40   -5 -942406878  -52694089                
 AWCIR  -2 -992838985 -358767895 DW550  -4 -551240068 -736749756                
 DW450  -9 -597107161 -802595879 DW350  -5 -704905666 -322635194                
 DW250  -3  806095224  690691212 DW150  -3  770079072    8602577                
 DW25   -3  722770196  237439536 DW10   -1  650310404  285334262                
 DW20   -4 -561442248 -109225485 DW40   -6-1045726954 -986806188                
 DWCIR  -5 -680902434 -121257440                                                
         3        12         4                                                  
       147        12         1                                                  
       183        15         2                                                  
       273        10         1                                                  
       303         9         1                                                  
       330         8         1                                                  
       354         8         1                                                  
       378         6         1                                                  
       396         6         1                                                  
       414        12         8                                                  
       702        15         1                                                  
       747        10         4                                                  
         0         0         0                                                  
   2436912.50000  1  1                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2437054.00000  1  2                                                          
  -1 -836986882 -819654592 -1 -540961780 -785772171 -3-1006412844 -386445442    
  -6  796344410  811096289 -7  570496690  658420892 -8  722053449  302409160    
   2437195.50000  1  3                                                          
   1 -710465430 -148875703 -2 -932038528 -475767196 -3 -769564345 -896685252    
  -6  880221272  323815196 -4 -548501672 -580494938 -5 -581142105 -127801410    
   2437337.00000  1  4                                                          
   0  944644963  834419269  1 -569991772 -273873315  0 -539750465 -243357476    
  -5 -646227528 -429365892 -5  546422831  387385353 -6  755720492   10030894    
   2437478.50000  1  5                                                          
   2 -679705586 -918144921  2  976084554  566345262  1  844837109  297684791    
  -5  543683974  599371844 -9  815825310  830329108-10-1044021122 -827950748    
   2437620.00000  1  6                                                          
   3 -734921507 -758946577  3 1061487513  158938241  2  947171334 1066939402    
  -6-1040323040-1012336778 -5 -912026977-1064596140 -6 -862535630 -698603542    
   2437761.50000  1  7                                                          
   5  542809175  651942624  4 -570012677 -607736653  2-1071066795 -229708347    
  -7  718907280 1041939125 -5  969254578  990025416 -6  988769095  621223095    
   2437903.00000  1  8                                                          
   5  731032304  680296075  5  641406322      89107  3  974436235  161839000    
  -6 1045090180  248028508 -6 -715596688-1061014472 -7-1040110886  -11226550    
   2438044.50000  1  9                                                          
   5 1023431783   92604632  3 -834886840 -112780343  4 -742697647 -906079875    
  -4 -574310695 -930022413 -7  568673964  236578030 -7  678300769  936946675    
   2438186.00000  1 10                                                          
  -1  885166328  929986361  0  568494526  762988101 -2  762241264   31839332    
  -7  588816402  131315240 -6  993366711  743470184 -7  702461423  141092721    
   2438327.50000  1 11                                                          
  -1 -842723020 -412178810 -4 -806860380 -908939936 -5  537938186  546177108    
  -8 -884796076 -370506953 -5 -818793702 -564257066 -6 -851672278 -441003168    
   2438469.00000  1 12                                                          
  -1  752231300  924028510 -7  838092896  758116904 -4 -575049614-1040356438    
  -7 -661511903 -762149148 -5  887564220  963262360 -6  982504969  315242974    
   2438610.50000  1 13                                                          
   0 -924328886 -190999712 -1  687558706  939337206 -3 1036168588  894941092    
  -7  998314012  581814048 -5 -643518376 -723482812 -6 -758265462 -809532532    
   2438752.00000  2  1                                                          
   0 -576049241 -871196873  0 -609866710-1027845955 -2-1063250312 -791818478    
  -4  704938744  686820488 -7-1042182474 -448256688 -7 -902646219 -142461386    
   2438893.50000  2  2                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2439035.00000  2  3                                                          
   0 -678698517 -795947247  0 -758785336  -16726779 -1 -726465790 -279708781    
  -5  698591994   11720302 -7 -844247302   -2558560 -8 -994879342 -905858250    
   2439176.50000  2  4                                                          
   2 -560106835  -40336570 -2  748552645   22981938 -2  689641866   25119490    
  -7 -816094579 -636384874 -4 -548666087 -501433771 -6 -972432176 -627049189    
   2439318.00000  2  5                                                          
   1 1006626789  379430358  3 -570802663 -924859527  1-1012003909 -582978990    
  -8 -926819773 -126044892 -5  575326337   84606360 -6  549970219  595984455    
   2439459.50000  2  6                                                          
   4 -648138967  -51964791  0 -718223121 -645344346 -3 1007550408  421543072    
  -5  687501288 1046571707 -6 -546481852 -480772430 -7 -639010527 -947473952    
   2439601.00000  2  7                                                          
   5  595243174  511642697  1 -714877509 -549291843  0 -867196129 -458616876    
  -5 -547688221 -937155883 -7-1040833939 -829764830 -8 -664411119-1059893554    
   2439742.50000  2  8                                                          
   5  620012987  299307385  5  765975007  445473262  4  594128908 1071870569    
 -13  732234082  125744000 -5  684606808   21591901 -6  604199427  928663502    
   2439884.00000  2  9                                                          
   5 1008826375  455341714  1 -640456295 -659312616  4 -645647758 -353519835    
  -6  878302151  259214663 -6 -735251556 -423152058 -7 -826296667 -254098638    
   2440025.50000  2 10                                                          
  -3  862416904  813530663  1  852072499  321955365  0  746729925  975531521    
  -4 -638650169  -62517524 -9  631810735 1057255349 -9  957456818  559766838    
   2440167.00000  2 11                                                          
  -1 1062765883  471556651 -1-1019587727 -365270450 -2-1051751042 -639663497    
  -6 1009501055  837441523 -6  881129587  710532972 -7  664805280  173488018    
   2440308.50000  2 12                                                          
   0 -767050679 -708158965 -5 -654107425 -802661821 -4  633592197  267781245    
 -14 -549812147 -512152547 -5 -636513052 -973447792 -6 -572455668-1000328570    
   2440450.00000  2 13                                                          
  -1 -670296230 -247913240  1  553181919  596256908 -1  907511664   74895954    
  -5 -837750321 -302303161-12 -861480468 -942195904 -9  569453062  494354732    
   2440591.50000  3  1                                                          
  -1 -856859838 -532013137  0  674092930  625342574 -1  565232332  377296096    
  -6  912656408  689787924 -5 -550481087 -196174579 -6 -775584100 -401606686    
   2440733.00000  3  2                                                          
  -3 1062870022  827587496  1 -673050340 -179538411  0 -628080563 -500849535    
  -5  978028335  241840355 -6  537131074   44754581 -8  767409533  774225848    
   2440874.50000  3  3                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2441016.00000  3  4                                                          
  -3  807358583  490784800  1  695078884  191208500  0  600549668  314565757    
  -5 -538635667 -271759460 -6 -541929189 -432646366 -8 -808139101-1019574570    
   2441157.50000  3  5                                                          
   2  707052301  983810606  2 1005744304  183595178  1  832715325  959907750    
  -7 1028665229 1020822970 -6  729065964  217521324 -7  653770629  670936273    
   2441299.00000  3  6                                                          
   2-1024217101 -591982013  3 -900260553 -111230122  2 -692730960 -904306528    
  -6 -822901510 -664404608-12  862883654  955823504-13 -868841846 -446880448    
   2441440.50000  3  7                                                          
   5  564629363  510890790  3  588349176  266643085  1  898592755  391692519    
  -6  709815772 1053971140 -6 -548857524  -52468659 -8 -943425515 -477866712    
   2441582.00000  3  8                                                          
   4  927755803  857564673  5  856235724  321810414  4  679495656  284304760    
  -8 -771057440 -756446675 -5  580752713  306841042 -7 1012959949  436537518    
   2441723.50000  3  9                                                          
   5  974210355  212437067  3  748895288  732568327  3 -962340156 -793602738    
  -6 -803722364  -61646058 -6 -639925412 -175407136 -7 -577721522 -672619631    
   2441865.00000  3 10                                                          
  -9  541680793   30909755 -8 -560075769  -14972318-10 -897107888 -847635043    
 -10  638590610  695232125-12  877351437  464789653-12  651001637  816372102    
   2442006.50000  3 11                                                          
   0  563986728  487974334  0  824417475  986354602 -1  714991698   74562639    
  -6-1020671890 -598715728 -6  573008498   40017154 -8  993856832 1024019757    
   2442148.00000  3 12                                                          
   0-1009805166 -848992728 -1 -691291868 -984201415 -2 -599226666  -21691296    
  -7  792255944  975576358 -6-1019580279 -407011301 -7 -884304905 -107889048    
   2442289.50000  3 13                                                          
 -15 -677566274 -410175777-15  891793626  289342705-16  605182574 1050174720    
 -17 -774527008 -967462490-18 -986064986 -637718675-18 -546494038 -824067680    
   2442431.00000  4  1                                                          
   0 -933682210 -748733365  1 -736325555  -56610848  0 -630849674 -590834678    
  -5  913239387  358821551 -5 -962447754 -958103652 -5 -564296543 -850386250    
   2442572.50000  4  2                                                          
   1 1003852824  914695215 -2-1016606274 -172315156 -2 -795412374 -136761792    
  -8 -652503188 -997575352 -5  986331769  402835040 -6  922355811 1051296936    
   2442714.00000  4  3                                                          
  -5-1025020370 -157861056  0  687315517  527527628 -1  612695788  600189718    
  -9 -696531845 -891823752 -7 -719232037  -93667528 -9 -972670057 -353819664    
   2442855.50000  4  4                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2442997.00000  4  5                                                          
   3 -672215060 -453113734  2 -981514395 -668936284  1 -777912745-1004427938    
  -6  584880671  352648186 -5 -564407598 -996998321 -7-1044471878 -897027951    
   2443138.50000  4  6                                                          
   3  790855626  470921866  3-1001717718 -620116442  2 -912647447 -142392248    
  -5  643973638  979600103 -8  706367295  105123756-11  962940776 1073031952    
   2443280.00000  4  7                                                          
   4 1040939270  992405141  4  723672406  292341250  3  601273271   78351907    
  -9  767890624  661460816 -5  562591338  462788551 -7 1014230415  371475541    
   2443421.50000  4  8                                                          
   3 1069665707  582333543  5  957449243  255555515  4  774675403  345760673    
  -6-1069245819 -156959932 -7  845529066  523569292 -8  880562341  306083318    
   2443563.00000  4  9                                                          
   5  899877273  294981607  4  780476021   89738426  3 -621240973 -995318671    
  -6 -711446908-1050532714 -7 -723478723 -707505762 -8 -611839021 -462541930    
   2443704.50000  4 10                                                          
   1-1029958906 -132116669 -1  787981493   29914296 -2  807432958   87461660    
  -6 -752175182 -649157138 -5 -565841793 -767378558 -7-1043367083 -519841810    
   2443846.00000  4 11                                                          
  -4  670259862  476928427  1 -707915514 -649372755  0 -650517120 -886366817    
  -6  997936968  338150423 -9  866916356  201022375-11  725646673  171742717    
   2443987.50000  4 12                                                          
   1  749944323  688080083 -6 -686679036  -25847661 -4 -728131722 -184987622    
 -10  862875968  247624826 -6  949702814  131261542 -7  868232664  199600216    
   2444129.00000  4 13                                                          
   0 -767601707 -935895793  1  834440359  584572539  0  752902384   45122353    
  -5 -553689322 -445147930 -6 -841661430 -802435393 -7 -669587642 -939670368    
   2444270.50000  5  1                                                          
   3 -695787375-1017200766  2  605450565  362878484  1  608130740  345863981    
  -6 -552457070-1061854226 -5-1047142342 -390918990 -6-1037009720 -509217515    
   2444412.00000  5  2                                                          
   3 -708317771 -834270783  1 1037717035 1025422834  0 1045136991  232061069    
  -5 -760161266 -523025079 -6 -564040754 -899300406 -8 -615134537 -646453412    
   2444553.50000  5  3                                                          
   3 -816207461 -115280555 -1 -697518863 -476891170 -6 -719565512 -592964768    
  -6  850915647  275540102 -5 -587734594 -884156479 -7-1012600854 -600453209    
   2444695.00000  5  4                                                          
   3 -911551719 -858591145  0 -921155640 -345030735 -2 -887641173 -816309322    
  -8  831359185  129503115 -5 -690481890 -227055364 -6 -625336813  -23575127    
   2444836.50000  5  5                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2444978.00000  5  6                                                          
   3  593445939  364552524 -1  585898921  776304096 -2 -876865657  -76220592    
  -8  586817412  419527892-10 -940544006 -826692112-11-1039662805 -268258280    
   2445119.50000  5  7                                                          
   3  580749713  981115330  4  826430762  244742594  3  725412245  912577900    
  -9  607484107  543356328 -8 -904977280 -549805804 -9 -800969370 -691086730    
   2445261.00000  5  8                                                          
   1 -948617081 -644088476  5  811804343   50368624  4  662470910  994755140    
  -8  685218566 1063084418 -7 -555715664 -917641497 -9 -986675250 -975056288    
   2445402.50000  5  9                                                          
   5  756600000  585653686  4  773640697  961831263  3 -595718266 -402993733    
  -7  640455273  821351206-11 -858213336 -776644072-13 -898620561 -867553232    
   2445544.00000  5 10                                                          
   2 -620486092 -784320680  2-1045029254 -144116740  1 -871162514 -888525800    
  -7 -947395026 -565230110 -6 -781438558 -124484197 -7 -698738770 -731232331    
   2445685.50000  5 11                                                          
   0 -752126542 -606742179  3 -647780041 -484785681  2 -550755462   -9843348    
  -7 1015404818  149600538-10 -586073596 -589002570-11 -898322467 -712353113    
   2445827.00000  5 12                                                          
  -1  760114270  381196358  3 -643640909 -334236630  2 -554126912-1040831589    
  -7 1021037030  705827991-10  938436829  847294743-12  812894769  548091488    
   2445968.50000  5 13                                                          
  -1  832790287   80739624  3 -620347909  -13452736  2 -540960670 -162379441    
  -6  560534915   84454859 -6 -925553228 -932273710 -7 -828196094 -614465362    
   2446110.00000  6  1                                                          
   3 -851163867 -464128696  3 -947681330  -44411021  2 -696207980 -715045610    
  -6 -817632973 -185457898 -5 -716055355   -3717965 -6 -637037027 -608916940    
   2446251.50000  6  2                                                          
   3 -826455780-1042737033  3-1013454624-1023627923  2 -760285139   -9932769    
  -8 -607369117 -671493564 -5 -696309785 -291457775 -6 -603697452 -484196268    
   2446393.00000  6  3                                                          
   3 -713007506 -232800423  4 -598544749  -16883054  2 -937321337 -573976152    
  -5  685709899  950771129 -6 -683707658 -253571955 -7 -612936679-1012375972    
   2446534.50000  6  4                                                          
   2 -910538483 -754264276  3 -972581724 -774174600  2 -746123927 -386664633    
  -7-1067054146 -760644356 -8  888068753  398546152 -9  941054831  972726352    
   2446676.00000  6  5                                                          
   4 -560161633 -785094408  3-1040548093 -405342072  2 -783364563 -598105661    
  -8  925517238  568047476 -6 -607646416  -16957020 -7 -541086962 -543935482    
   2446817.50000  6  6                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2446959.00000  6  7                                                          
  -1 -728210826 -537187784  4  566049154  348762318  2 1069921820  796822488    
  -9  698754452  203671620-10 -576982389-1059143790-11 -817546900 -624531272    
   2447100.50000  6  8                                                          
   3 -709781793 -724571708  5  620295610   94258757  3 1031902629  100812304    
  -8  587450338  558159424 -9 -572300500 -588823959-10 -633640900 -433963583    
   2447242.00000  6  9                                                          
   5  701667895  954030328  4  750061573  878942928  2-1046793423  -78351871    
  -8  825919121  193999200 -8  572887464   70648167 -9  595037298  844311424    
   2447383.50000  6 10                                                          
   0 -628525297 -422904902  4 -580954554 -920513949  2 -958214798 -234291079    
  -7 -753056656 -286922226 -6 -778164845 -939880633 -7 -702194282 -738789765    
   2447525.00000  6 11                                                          
   0  975963985   88567259  4 -619485336 -844264109  2-1033854171 -728172870    
  -7  721599912  741277625-10  590137469  448573425-17 -593021309 -660710539    
   2447666.50000  6 12                                                          
   1  883975908  989621441  4 -612557055 -333718499  2-1030949294 -203603204    
  -7  714987119  282165580-10 1004285278  152025609-12  675033987  832784006    
   2447808.00000  6 13                                                          
   1  759551878  545623878  4 -618377305 -275161905  2-1050334583 -298877611    
  -6  683209273   84943994 -6 -953462201-1023509216 -7 -860693577 -361097893    
   2447949.50000  7  1                                                          
   2  541289101 1036617089  5 -579216080-1000800456  3-1012207769 -288556886    
  -5 -605641009 -588721575 -6 -575080967 -739000829 -8 -637217371 -625864154    
   2448091.00000  7  2                                                          
   2  589026304  919588772  5 -607234688-1048140728  3-1065539236 -198668780    
  -5  647135173  460208534 -6 -803564181 -989105689 -7 -861298072 -839723016    
   2448232.50000  7  3                                                          
   2  796795079 1064254844  5 -617927379 -316727697  4 -544073503 -750382570    
  -5  711831723  351244183 -8-1003779332 -752031558 -9 -899595598 -238234831    
   2448374.00000  7  4                                                          
   3  669655692  720460445  5 -620107653 -206721951  4 -550367090 -455108895    
  -6  877521534   87888455 -6  612653099  679366497 -8 1039519486  712900294    
   2448515.50000  7  5                                                          
   4  590660694  373183218  5 -672398218 -374432679  4 -598756402 -693313884    
  -6  551416320  482101694 -7  849004503  580881195 -8  686448091  660163456    
   2448657.00000  7  6                                                          
   1 -790314518 -293826468  4 -691894684 -764262390  3 -602168790 -993725673    
 -12 -965688178 -427264672 -8 -711090718 -760096743-10-1023832389 -726628018    
   2448798.50000  7  7                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2448940.00000  7  8                                                          
   2 -974494031 -985695856  4  628849781 1035068534  2  939691100  332088140    
 -10  837872591   57038504-15 -745602397-1023328384-14  691272191  637798064    
   2449081.50000  7  9                                                          
   5  784576212  491497316  3  991085984  665710804  3 -674010608 -591120084    
  -9  560359383  115631786 -8  792965017  380438346 -9  979552669  972136709    
   2449223.00000  7 10                                                          
   3  815202319  986919679  5 -547015971 -897938526  3 -971762394  -68870971    
  -7 -684449871 -273021132 -6 -834662863 -776598067 -7 -737482344 -913990146    
   2449364.50000  7 11                                                          
   3 1002034596  269647867  5 -556858194 -924809198  3 -989720884 -618642768    
  -8  993103031  692251990 -9  669613860  593440194-11 1060593747  651804258    
   2449506.00000  7 12                                                          
   3 1070305363  821984718  5 -550645110  -95253804  3 -979810125 -221741926    
  -8  980086910  371776206 -9  721923548  372060376-10  576905014  969060751    
   2449647.50000  7 13                                                          
   3 1020195236  484757920  5 -559008043-1014287435  3 -995151089 -677556632    
  -6  824538009  401611986 -6 -853550063 -454494725 -7 -746156531 -320601273    
   2449789.00000  8  1                                                          
   4  809954504 1006881342  5 -842150672 -291286412  4 -706426199 -775604969    
  -5 -667273539 -268789410 -8  581134105  702483991 -8  885096135  805045691    
   2449930.50000  8  2                                                          
   4  853750207  577958879  5 -869810539 -746253010  4 -735682695 -601858930    
  -5  729665271  568821056 -6  658443356  301232462 -8  831635368   37653328    
   2450072.00000  8  3                                                          
   4  858181268  948091696  5 -874433168 -431107858  4 -738717558 -782597703    
  -5  697932579   26835733-10  916843325  808768154-11  573258413 1014105823    
   2450213.50000  8  4                                                          
   4  800778815  274439548  5 -857097211 -805475124  4 -723276452 -807465059    
  -6  569687626  936624066 -6 -769546437 -333425076 -7 -744848650 -638491283    
   2450355.00000  8  5                                                          
   4  794977594  996970665  5 -682284352 -508437194  4 -572613242-1058766728    
  -7 -578684574 -209705350 -9 -770598285 -865186902-10 -578250521 -348922800    
   2450496.50000  8  6                                                          
   3  626899520  331851082  5 -875223472 -111646076  4 -713303153 -416230186    
  -7  538801477  513758007 -8-1010219866 -129714970 -9 -902481715 -393403730    
   2450638.00000  8  7                                                          
   2  700281662  229171136  4 -661297483 -688670526  2-1022301534 -513100852    
 -11 -869136114 -231630832-10 -618086119 -319074684-11 -683907435 -223395784    
   2450779.50000  8  8                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2450921.00000  8  9                                                          
   5  903022103  525014713  2  871171495  215562496  3 -702874301 -686099088    
 -11 -589886145 -950451272 -8  776177514   83659586 -9 1018379245  134644543    
   2451062.50000  8 10                                                          
   4  978322418  744511598  5 -788147203  -88474559  4 -670725631 -527995231    
  -8 -613644697-1007461498 -6 -965800878 -292922360 -7 -843324706 -471545225    
   2451204.00000  8 11                                                          
   4 1068474737   58964516  5 -789692053 -767109196  4 -673053904 -747812841    
  -8  726679742 1004438891 -9  870811387  284685473-10  640667517  841299034    
   2451345.50000  8 12                                                          
   5  546458809  735478164  5 -782125827 -748809478  4 -667466309 -189463178    
  -8  720298898  666291305 -9  885991824  201803606-10  653554972  952759552    
   2451487.00000  8 13                                                          
   4 1068431980  218389660  5 -794596784 -456374409  4 -679286934 -708431589    
  -6  982672455  330742595 -6 -693051367  -16764420 -7 -615306445 -300102986    
   2451628.50000  9  1                                                          
   4 -630951614 -612830058  5 -929632778 -433941689  3 -763151725  -92385683    
  -5 -549876565 -130667337 -6  611894978 1026409468 -7  832899715  615330721    
   2451770.00000  9  2                                                          
   4 -568687175 -677347466  5 -945352208 -369904991  3 -813220241 -452577772    
  -8  572078184  321901758 -5  598480970  533426301 -7  979047266  651847216    
   2451911.50000  9  3                                                          
   4 -574530239 -349569779  5 -981682537 -355037513  3 -885355292 -282263392    
  -5  693814017 1017887006 -8  613206997  190001424-12  732343961  834629744    
   2452053.00000  9  4                                                          
   3-1052222448 -584283946  5 -913400654 -671436760  3 -779634261-1067822748    
  -6 -734851752-1026222810 -9 1056414103  426345758-11 1030585875  560069632    
   2452194.50000  9  5                                                          
   3-1013851290 -122800678  6 -559730039 -348391577  4 -576510279 -564193065    
  -6  736609061  212424113-10 -819561524 -627410933 -9 -730235133 -645462931    
   2452336.00000  9  6                                                          
   4 -659847430 -651174793  6 -618940490 -411527730  4 -669974059-1055978947    
  -6  603683537  145176208 -8 -591349021 -528674046 -8 -543865400  -97349105    
   2452477.50000  9  7                                                          
   5 -795003378 -989727326  5 -633487891 -806607648  2 -612089180 -366173122    
 -10 1072150862  506795840 -8-1017381877  -16333018 -8 -665895712  -83505538    
   2452619.00000  9  8                                                          
   5 -873782576-1067919725  3-1069546765 -591952524  2  543630302  402509692    
 -10  829663650   93427476 -8 -750456771-1013182729 -9-1056514250  -34234320    
   2452760.50000  9  9                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2452902.00000  9 10                                                          
   3 -897664537 -705868643  5 -979143887 -467800487  3 -991414745 -301827036    
  -8  770717035  437287192 -5 -561682773 -458590374 -6 -548743226  -33685364    
   2453043.50000  9 11                                                          
   3 -703440558 -836635789  5 -984546262 -255388775  3-1017150951-1054789207    
  -8  865686121  206142523-10 -758900319 -251563143 -9 -641028454 -314515619    
   2453185.00000  9 12                                                          
   3 -643006383 -370072736  5 -987772961 -763606675  3-1039290889 -864218972    
  -8  868725860  475738271-10 -705760307 -926866639 -9 -633611304 -487847088    
   2453326.50000  9 13                                                          
   3 -659758592 -217600246  5-1015610194 -247743406  4 -552110804 -296527557    
  -5  602151990  469797727 -6 -661087803 -759676665 -7 -694332751 -721805791    
   2453468.00000 10  1                                                          
   0 -651310604 -557337118 -5 -784018013 -171933456 -5 -684784326 -996885672    
  -7 -940819077 -526405644 -8  917769746  767393424 -7  622513006  850968262    
   2453609.50000 10  2                                                          
   1  618515627  391635154 -2  948381990  408088244 -3  779321193  718113052    
  -6 -830627078 -889486676 -5  693329928  624336287 -6  692423400   68748154    
   2453751.00000 10  3                                                          
  -9 -894273460 -377526615 -9 1036996143  884450003 -9  572018266  343155367    
 -11-1005722815 -395990288-11 -646085696 -252136576-12 -675000115 -897217614    
   2453892.50000 10  4                                                          
   1  610362773 1037912248  1 -913555657 -988079518  0 -854420245 -635676599    
  -5  805779536  617782929 -7  699951988  838692884 -8  607179217  794591180    
   2454034.00000 10  5                                                          
   2 1007449395  330207641  3  626502982  597618045  1 1037255962  757360789    
  -6-1036218121 -902159386 -5  568847680  407454619 -7 1003332502  576538243    
   2454175.50000 10  6                                                          
   3  849163007  516047617  3 -664425388 -307306543  2 -632991010 -938338484    
  -8  630055301  392964925 -6 -771681362 -378930699 -7 -695382586 -203345087    
   2454317.00000 10  7                                                          
   5 -632003932 -518943084  2  964083655  628078540  1  994344965   68601736    
  -6  785026915 1002921411 -7 1043181458  470582788 -8  915516488  416539540    
   2454458.50000 10  8                                                          
   5 -787818859 -483350771  5  606386735  691311234  4  537059763  977197150    
  -5 -688727038 -441787885 -8 -770130659  -87348834 -9 -626834929 -919362099    
   2454600.00000 10  9                                                          
  -1 -699390086 -653853200  5  983688218  681893051  4  602184365  901722645    
  -6  688578977  257835899 -6 -673180288 -262580335 -8 -924985572 -500164604    
   2454741.50000 10 10                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2454883.00000 10 11                                                          
   0 -935714129 -279769653 -1  913832015  654328793 -2  791816805  810363520    
  -6 -539766535 -721737780 -6 -954960383 -712740112 -7 -821273653 -332768188    
   2455024.50000 10 12                                                          
  -1  733331948  536099199  0 -940259550 -744210312 -1 -814912779 -947350146    
  -5  552697840  249836073 -7  786487197  255199058 -8  693401201  101674462    
   2455166.00000 10 13                                                          
  -9  970190338  989989667 -9  825268928  517634380-10  961730573  182807567    
 -11 -970593252 -538019161-11  838743031  117136394-12  615062882  877205804    
   2455307.50000 11  1                                                          
  -1  848506966  916902166 -3  794657246    4807460 -6  580661028   31831487    
 -11 -636133928 -813598488 -5  797721669  918740299 -6  854312195  544944872    
   2455449.00000 11  2                                                          
   0 -567252807 -700289023 -1  952907902  428525566 -2 1001042964  564111925    
  -6 -946245620  -60990234 -6 -937794170 -813205991 -7 -724112230 -786647125    
   2455590.50000 11  3                                                          
   0  659186187  482895311  0 -758710133 -458264453 -1 -657839850 -956817681    
  -6  944149711  835748144 -6  680086722  270726343 -7  589746256  993803335    
   2455732.00000 11  4                                                          
   1 -606139443 -848675957  0 -897169062 -140252564 -1 -757530664 -529207880    
  -6  565555097  867777349 -6 -750733097 -912806672 -7 -719232789 -970663782    
   2455873.50000 11  5                                                          
   3 -538818725 -169388200  2 -729777505 -907171904  1 -573134039 -116461578    
  -7  623048382  820693610 -7 -811559634 -613365722 -8 -726052726 -227360916    
   2456015.00000 11  6                                                          
   4  588442168  378022505  2 1071041253  629799741  1  682036400  473203354    
  -8 -573933523 -216044256 -7  636748944 1052699925 -8  550729812  476229993    
   2456156.50000 11  7                                                          
   5 -669657723 -914979883  1-1069713725 -166117452  0 -633979732-1016005253    
 -11  964120648  152199662 -8 -938983254 -845501574 -9 -825932254 -312717721    
   2456298.00000 11  8                                                          
   5 -891450592 -440492494  4  847786437 1004345363  3  782763885  831206158    
  -9 -785800330 -351602094 -8 -716239967 -396909460 -9 -566767919 -481292360    
   2456439.50000 11  9                                                          
   3 -747330137  -26382115  5 1006523576  190268057  4  740769398  249005925    
  -8 -864827966 -219523147-11 -606937598 -303883052-10  949527403  579248516    
   2456581.00000 11 10                                                          
   0 -994372173 -814368545 -1 -737313700 -827147884 -2 -640184072 -924088277    
  -7  895901702 1023108823 -6-1036352186 -547992944 -7 -894524556 -658745045    
   2456722.50000 11 11                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2456864.00000 11 12                                                          
  -8  581566311  193409157 -9 -781409050 -171171545-10 -820996167-1025323107    
 -17  706430011  899281655-18 1064965289  785394309-19  847502358  331298011    
   2457005.50000 11 13                                                          
  -2 -610815271 -900242914  0 -959631818 -668559236 -1 -832026939 -265657245    
  -5  594549132  135741808 -8 -610444940 -288195962-10-1058596212 -594037111    
   2457147.00000 12  1                                                          
  -1  719804897  114002302 -3 -806296495 -213357159 -3 -730792579 -133902267    
  -6 1045729999  180433605 -5  788631290  291308768 -6  734164928  907595865    
   2457288.50000 12  2                                                          
   0 -718805677 -138120377 -1 -591409354  -62365601 -3 -700925238 -117917648    
  -6  550352845  322704427 -5 -574000306 -676516143 -6 -551347604 -492832731    
   2457430.00000 12  3                                                          
   0  830666839  498332770  0 -600754144-1040637503 -2-1040992252  -55552746    
  -6  747635919  841051544 -6  858531620  474987066 -7  744257128  741952219    
   2457571.50000 12  4                                                          
  -2  696475928  552536834  1  712017476  124012142  0  648620846  822759976    
  -6 -991679718 -416079376-12  857337693  989816132-11 1053650645  678137969    
   2457713.00000 12  5                                                          
   3  725075444  308774137  0  756621740  994028372 -2  732692422   19909451    
 -10 -991317974 -127541798 -7  898837087  694406551 -8  776561388  652855517    
   2457854.50000 12  6                                                          
   1  722121256  783009209  4  619097054  124164660  2 1007332301 1018486900    
  -7 -717786369 -735605239-10  686255129  129482926-11 1061386457   45822722    
   2457996.00000 12  7                                                          
   5 -602065920 -301113536  4 -537973814 -555043560  2 -874349427 -781680269    
  -9  954851382  394547676 -8 -843426461 -210677102 -9 -752299872-1039940934    
   2458137.50000 12  8                                                          
   5 -962925343  -61609872  3 1025343450  343751177  2 1031141273  830319267    
 -10 -961191363 -305217918 -8 -772536947 -767777821 -9 -620442829 -653830737    
   2458279.00000 12  9                                                          
   4 -755712221  -41638342  5  975376225  565738658  4  836469843  374776772    
  -8 -831586738 -222291433-10 -797734087 -656837599-10  753273553  794382080    
   2458420.50000 12 10                                                          
   0 -870744305 -768153039  0 -574605128 -349239822 -2 -995515446 -518859870    
  -6  743481688  225714380 -6 -880095893 -745373022 -7 -769956350 -781433564    
   2458562.00000 12 11                                                          
  -9  761918899  442851462 -7 -955180397 -100698060 -8 -815917468 -723992195    
 -16  579691925  651029092-19 -577757034 -318057549-20 -764186236 -357556945    
   2458703.50000 12 12                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2458845.00000 12 13                                                          
  -3  790875425  530043248  0 -972228392 -685154667 -1 -842972240 -936307814    
  -5  598690797  348562342 -9  813031572  977575737-10  704569558  723715864    
   2458986.50000 13  1                                                          
  -1 -869500553 -878455182  1 -543600118 -999704456 -1-1029482982 -560828470    
  -4  759706793 1007804334 -8  969730533   47200696-11 -784345289 -278599304    
   2459128.00000 13  2                                                          
   0 1053893121  476805736 -1 -985162589 -920137280 -2 -901882964 -194749718    
  -5  560528810 1027701970 -5  551445221  327308162 -7  781282029   26945689    
   2459269.50000 13  3                                                          
 -16 -860250892 -421357923-15  909249744 1012857312-16  914662074   12435053    
 -17 -896499755 -861033903-18 -878393934 -316944131-20 -935742687 -785913087    
   2459411.00000 13  4                                                          
   1 1037183538  291521913  1 -767027181 -498102982  0 -724910868 -740462146    
  -5  702578486  256337742 -5  576815750  462875095 -7 1019094608  926595330    
   2459552.50000 13  5                                                          
   3 -573308396 -839690839  2  713091654  524294094  1  673400911  904224745    
  -5 -671767267 -538238231 -9-1006241150 -665490388-10 -757900951 -358741072    
   2459694.00000 13  6                                                          
   4 -550037514 -453419037  3  735127332  136619354  2  689546401  921952301    
  -7  813647965  589926518 -5 -585357620 -833174993 -7 -983858337-1005299862    
   2459835.50000 13  7                                                          
   4 -852052686 -617799172  4 -885368752 -629018471  3 -749443125 -443398970    
  -7  769141287  537356324 -6  903705715  873262768 -7  776527537  785325073    
   2459977.00000 13  8                                                          
   5-1021042910  -38273660  2  813516985  251447207  1 1072573977  753785623    
  -6 -916340605 -434653683 -6 -931132321 -621289003 -7 -796627778 -583465369    
   2460118.50000 13  9                                                          
   5 -558685523 -647139747  5  887000713  771944120  4  882865004  955379087    
  -6  968270788  813655552-10 -997009552 -816669622-10  655294910  856445987    
   2460260.00000 13 10                                                          
  -8  641689467  354346104 -9  577302870  134654176-11 1017464331  138783955    
 -11 -601663242 -960857541-11  961628362  316043980-11  541666635  293574438    
   2460401.50000 13 11                                                          
   0-1051691615 -603109896 -2 -779789128 -947517679 -3 -676003142 -556879949    
  -8  859646854  158223908 -6-1067348378-1012715495 -7 -925365536 -116512733    
   2460543.00000 13 12                                                          
   0  910305707  433627076  0 -538144975 -513099771 -2 -932230858-1023114065    
  -6  614379028 1030602574 -6  911666311  199674021 -7  790368084  557663907    
   2460684.50000 13 13                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
   2460688.50000 14  0                                                          
 -17  610520491  469380088-14  733556367  866091109-20  952988955  780636871    
 -22  811612823  988009430  0          0          0  0          0          0    
          .00000  0  0                                                          
   0          0          0  0          0          0  0          0          0    
   0          0          0  0          0          0  0          0          0    
End of Test output from JPL PLANETARY EPHEMERIS: DE-200 + LE-200                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
