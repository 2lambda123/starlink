      SUBROUTINE FIO1_SERR( SYSERR, STATUS )
*+
*  Name:
*     FIO1_SERR

*  Purpose:
*     Set error status

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL FIO1_SERR( SYSERR, STATUS )

*  Description:
*     Get the error number from the operating system and convert it
*     into an FIO error.

*  Arguments:
*     SYSERR = INTEGER (Given)
*        Variable containing the operating system error number.
*     STATUS = INTEGER (Given and Returned)
*        The global status.
*        This is set to the FIO status.

*  Notes:
*     -  This is the Darwin version.
*     -  No errors are reported by this routine. They are reported by
*        FIO_SERR.
*     -  Consequently, this routine should only be called from FIO_SERR.

*  Algorithm:
*     -  Handle values of SYSERR of zero or minus one specially.
*     -  Otherwise, set STATUS to a value based on STATUS being an errno.

*  Machine-specific features used:
*     -  Under G77 IO status values <100 are the C errno value.
*        >=100 are Fortran specific errors defines in the libf2c source.

*  Copyright:
*     Copyright (C) 1996-2004 Council for the Central Laboratory of the
*                        Research Councils

*  Authors:
*     BKM: Brian McIlwrath (Starlink, RAL)
*     AJC: Alan Chipperfield (Starlink, RAL)
*     TIMJ: Tim Jenness (JAC, Hawaii)
*     BEC: Brad Cavanagh (JAC, Hawaii)
*     PWD: Peter W. Draper (JAC, Durham University)
*     {enter_new_authors_here}

*  History:
*     18-MAR-1996 (BKM):
*        Original Linux version.
*      8-NOV-2000 (AJC):
*        Change FIO_NOTFD to FIO_FILNF  (conform to other platforms)
*     24-JUL-2004 (TIMJ):
*        Use auto-generated ERRNO constants rather than hard-wired
*        values.
*     24-JUL-2004 (BEC):
*        Copy for apple/darwin. Identical to linux g77 version
*     11-SEP-2005 (PWD):
*        Merge with _pc_linux version for g95 support.
*     {enter_further_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-

*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants
      INCLUDE 'FIO_ERR'          ! FIO error numbers
      INCLUDE 'ERRNO_ERR'        ! ERRNO error codes

*  Arguments Given:
      INTEGER SYSERR             ! Operating system error number

*  Status:
      INTEGER STATUS             ! Global status

* The actual routine bodies are all defined in FIO1_SERR_PC_LINUX.
* This is pre-processed for the compiler specifics from FIO1_SERR_PC_LINUX.F.
      INCLUDE 'FIO1_SERR_PC_LINUX'

      END
