#include "f77.h"
#include "kaplibs.h"

/*
*+
*  Name:
*     KPG1_SYMFIT<T>

*  Purpose:
*     Do a symetric least squares linear fit between two arrays

*  Language:
*     C, designed to be called from Fortran.

*  Invocation:
*     CALL KPG_SYMFIT<T>( N, X, Y, XLO, XHI, YLO, YHI, CLIP, M, B, RMS,
*                         STATUS )

*  Description:
*     This routine does a least squares linear fit on the X and Y arrays
*     to return "m" and "b" where the best fitting line is:
*
*        Y = m*X + b
*
*     The fit done by this function minimises the sum of the squared
*     residuals between the points and the fitted line. The residual used
*     is the distance from a point to the nearest point on the fitted
*     line. This is different to other similar function that use the vertical
*     (Y) displacement between the point and the line as the residual.
*     This means that the fit produced by this function is symetric -
*     fitting the Y values to the X values should give the algebraic inversion
*     of the line produced by fitting X values to Y values. This is not
*     generally true for fitting functions that use the Y displacement as
*     the residual. A symetric fit is better for cases where both X and Y
*     are subject to random error.
*
*     The i'th (x,y) point is included in the fit only if both x and y
*     are good and fall within the ranges specified by xlo, xhi, ylo and
*     yhi.

*  Arguments:
*     N = INTEGER*8 (Given)
*        The length of the X and Y arrays.
*     X( N ) = ? (Given)
*        Array of X values.
*     Y( N ) = ? (Given)
*        Array of Y values.
*     XLO = ? (Given)
*        The lowest X value to include in the fit. See also XHI.
*     XHI = ? (Given)
*        The highest X value to include in the fit. All X values are used
*        if XHI is less than or equal to XLO.
*     YLO = ? (Given)
*        The lowest Y value to include in the fit. See also YHI.
*     YHI = ? (Given)
*        The highest Y value to include in the fit. All Y values are used
*        if YHI is less than or equal to YLO.
*     CLIP = LOGICAL (Given)
*        If .TRUE., outliers are identified and excluded from the fit.
*        Otherwise the fit includes all points. The initial identification
*        of outliers is performed by 3 iterations of sigma-clipping. The
*        first iteration clips the data at 1 sigma - subsequent iterations
*        clip at 3 sigma. Note, points rejected on an earlier iteration
*        may be re-instated on a lter iteration if they are found to lie
*        sufficiently close to the current best fit line.
*     M = DOUBLE PRECISION (Returned)
*        Returned holding the value of constant "m". VAL__BADD is returned
*        if it cannot be determined.
*     B = DOUBLE PRECISION (Returned)
*        Returned holding the value of constant "b". VAL__BADD is returned
*        if it cannot be determined.
*     RMS = DOUBLE PRECISION (Returned)
*        Returned holding the RMS residual. VAL__BADD is returned if it cannot
*        be determined. Note, any clipped points are excluded from this
*        estimate of the RMS.
*     STATUS = INTEGER (Given and Returned)
*        The global status.

*  Copyright:
*     Copyright (C) 2020 East Asian Observatory
*     All Rights Reserved.

*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either Version 2 of
*     the License, or (at your option) any later version.
*
*     This program is distributed in the hope that it will be
*     useful, but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
*     02110-1301, USA.

*  Authors:
*     DSB: David S. Berry (EAO)
*     {enter_new_authors_here}

*  History:
*     19-MAR-2020 (DSB):
*        Original version.
*     {enter_further_changes_here}

*  Bugs:
*     {note_any_bugs_here}
*-
*/

F77_SUBROUTINE(kpg1_symfit<TLC>)( INTEGER8(N), <CNFTYPE>_ARRAY(X),
                                  <CNFTYPE>_ARRAY(Y), <CNFTYPE>(XLO),
                                  <CNFTYPE>(XHI), <CNFTYPE>(YLO),
                                  <CNFTYPE>(YHI), LOGICAL(CLIP), DOUBLE(M),
                                  DOUBLE(B), DOUBLE(RMS), INTEGER(STATUS) ) {
   kpg1SymFit<TC>( *N, X, Y, *XLO, *XHI, *YLO, *YHI, F77_ISTRUE(*CLIP), M,
                   B, RMS, STATUS );
}
