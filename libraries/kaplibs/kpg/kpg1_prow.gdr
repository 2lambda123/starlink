      SUBROUTINE KPG1_PROW<T>( EL, ROW, IROW, ARRAY, STATUS )
*+
*  Name:
*     KPG1_PROWx

*  Purpose:
*     Puts values into a row of a two-dimensional array.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL KPG1_PROWx( EL, ROW, IROW, ARRAY, STATUS )

*  Description:
*     The routine enters values into a specified row of a two-dimensional
*     array, the values being supplied in a separate one-dimensional array
*     whose size matches the row size.

*  Arguments:
*     EL = INTEGER (Given)
*        Number of elements in a single row of the two-dimensional array.
*     ROW( EL ) = ? (Given)
*        Array of values to be inserted into the row.
*     IROW = INTEGER (Given)
*        The row number in the two-dimensional array into which the
*        values are to be inserted.
*     ARRAY( EL, * ) = ? (Given and Returned)
*        The two-dimensional array which is to recieve the new values.
*        The declared second dimension size of this array must not be
*        fewer than IROW. The values in other rows of this array are not
*        altered.
*     STATUS = INTEGER (Given and Returned)
*        The global status.

*  Notes:
*     -  There is a routine for each numeric data type. Replace "x" in
*     the routine name by B, UB, W, UW, I, R or D as appropriate. The
*     data type of the ROW and ARRAY arrays should match the routine
*     being used.

*  Copyright:
*     Copyright (C) 1990 Science & Engineering Research Council.
*     All Rights Reserved.

*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either Version 2 of
*     the License, or (at your option) any later version.
*     
*     This program is distributed in the hope that it will be
*     useful, but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*     
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
*     02111-1307, USA.

*  Authors:
*     RFWS: R.F. Warren-Smith (STARLINK)
*     {enter_new_authors_here}

*  History:
*     27-JUN-1990 (RFWS):
*        Original version.
*     {enter_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-
      
*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants

*  Arguments Given:
      INTEGER EL
      <TYPE> ROW( EL )
      INTEGER IROW

*  Arguments Given and Returned:
      <TYPE> ARRAY( EL, * )

*  Status:
      INTEGER STATUS             ! Global status

*  Local Variables:
      INTEGER I                  ! Loop counter for array elements

*.

*  Check inherited global status.
      IF ( STATUS .NE. SAI__OK ) RETURN

*  Copy the one-dimensional array into the appropriate row of the
*  two-dimensional array.
      DO 1 I = 1, EL
         ARRAY( I, IROW ) = ROW( I )
   1  CONTINUE

      END
