      SUBROUTINE KPG1_STFL<T>( IWCS, NDIM, EL, NGOOD, DMIN, MINP, MINC,
     :                         DMAX, MAXP, MAXC, SUM, MEAN, STDEV, SKEW,
     :                         KURTOS, MEDIAN, MODE, NUMPER, PERCNT,
     :                         PERVAL, IFIL, STATUS )
*+
*  Name:
*     KPG1_STFLx

*  Purpose:
*     Writes statistics generated by KPG1_STATx, KPG_OSTAx, and
*     KPG1_HSTAx to a text file.

*  Language:
*     Starlink Fortran 77.

*  Invocation:
*     CALL KPG1_STFLx( IWCS, NDIM, EL, NGOOD, DMIN, MINP, MINC,
*                      DMAX, MAXP, MAXC, SUM, MEAN, STDEV, SKEW,
*                      KURTOS, MEDIAN, MODE, NUMPER, PERCNT, PERVAL,
*                      IFIL, STATUS )

*  Description:
*     This routine writes the statistics of pixel data as generated by
*     the routines KPG1_STATx, KPG_OSTAx, and KPG1_HSTAx to a text file.

*  Arguments:
*     IWCS = INTEGER (Given)
*        Pointer to WCS FrameSet.
*     NDIM = INTEGER (Given)
*        Number of dimensions of the array whose statistics are being
*        displayed.
*     EL = INTEGER (Given)
*        Total number of pixels in the array.
*     NGOOD = INTEGER (Given)
*        Number of valid pixels which contributed to the statistics.
*     DMIN = DOUBLE PRECISION (Given)
*        Minimum pixel value.
*     MINP( NDIM ) = INTEGER (Given)
*        Pixel indices at which the minimum pixel value was (first)
*        found.
*     MINC( NDIM ) = DOUBLE PRECISION (Given)
*        The co-ordinate values of the centre of the minimum pixel.
*     DMAX = DOUBLE PRECISION (Given)
*        Maximum pixel value.
*     MAXP( NDIM ) = INTEGER (Given)
*        Pixel indices at which the maximum pixel value was (first)
*        found.
*     MAXC( NDIM ) = DOUBLE PRECISION (Given)
*        The co-ordinate values of the centre of the maximum pixel.
*     SUM = DOUBLE PRECISION (Given)
*        Pixel sum.
*     MEAN = DOUBLE PRECISION (Given)
*        Pixel mean value.
*     STDEV = DOUBLE PRECISION (Given)
*        Pixel standard deviation value.
*     SKEW = DOUBLE PRECISION (Given)
*        Skewness of the pixel values.
*     KURTOS = DOUBLE PRECISION (Given)
*        Pixel kurtosis.
*     MEDIAN = DOUBLE PRECISION (Given)
*        Median value.
*     MODE = DOUBLE PRECISION (Given)
*        Modal value.
*     NUMPER = INTEGER (Given)
*        Number of percentiles values to report.
*     PERCNT( NUMPER ) = REAL (Given)
*        The array of percentiles levels corresponding to the values
*        given by PERVAL.  They should be in the range 0.0 to 100.0,
*        and preferably in ascending order.  If there are none to
*        report, set NUMPER to 1 and pass the bad value in PERCNT( 1 ).
*     PERVAL( NUMPER ) = DOUBLE PRECISION (Given)
*        Percentile values corresponding to the percentile fractions
*        in PERCNT.
*     IFIL = INTEGER (Given)
*        FIO_ file descriptor for the output file.
*     STATUS = INTEGER (Given and Returned)
*        The global status.

*  Notes:
*     -  There is a routine for both real and double-precision
*     statistics: replace "x" in the routine name by R or D as
*     appropriate. Note that the two routines have identical argument
*     lists (with floating-point qualitities in double precision) but
*     differ in the precision with which the results are displayed.
*     -  If the value of NGOOD is not positive, then this routine will
*     assume that all the derived statistics (except for the sum) are
*     undefined and will not display them.
*     -  If a statistic is undefined, i.e. has the bad value, it is
*     not reported.  In the case of arrays, the first value is checked.
*     For the co-ordinates and pixel indices of the extreme values both
*     of the first elements of these must be good to display these
*     positions.

*  Copyright:
*     Copyright (C) 1991, 1992 Science & Engineering Research Council.
*     Copyright (C) 1996, 2004 Central Laboratory of the Research
*                   Councils.
*     Copyright (C) 2006 Particle Physics & Astronomy Research
*                   Council.
*     Copyright (C) 2010 Science & Technology Facilities Council.
*     All Rights Reserved.

*  Licence:
*     This programme is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either Version 2 of
*     the License, or (at your option) any later version.
*
*     This programme is distributed in the hope that it will be
*     useful, but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE.  See the GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with this programme; if not, write to the Free Software
*     Foundation, Inc., 51, Franklin Street, Fifth Floor, Boston, MA
*     02110-1301, USA.

*  Authors:
*     DSB: David S. Berry (STARLINK)
*     RFWS: R.F. Warren-Smith (STARLINK, RAL)
*     MJC: Malcolm J. Currie (STARLINK)
*     {enter_new_authors_here}

*  History:
*     1991 March 28 (RFWS):
*        Original version, derived from KPG1_STDSx.
*     1996 March 11 (MJC):
*        Redo addition of the ordered statistics and checking for bad
*        values (originally c.1992).
*     6-AUG-2004 (DSB):
*        Re-instated generic source and added argument IWCS. Display WCS
*        coords instead of AXIS coords.
*     6-JAN-2006 (DSB):
*        Normalise WCS coords before displaying them.
*     2010 July 21 (MJC):
*        Added and reported arguments SKEW and KURTOS.
*     5-DEC-2019 (DSB):
*        Support huge files.
*     {enter_further_changes_here}

*  Bugs:
*     {note_new_bugs_here}

*-

*  Type Definitions:
      IMPLICIT NONE              ! No implicit typing

*  Global Constants:
      INCLUDE 'SAE_PAR'          ! Standard SAE constants
      INCLUDE 'PRM_PAR'          ! VAL__ constants
      INCLUDE 'NDF_PAR'          ! NDF__ constants
      INCLUDE 'AST_PAR'          ! AST_ functions

*  Arguments Given:
      INTEGER IWCS
      INTEGER NDIM
      INTEGER EL
      INTEGER NGOOD
      DOUBLE PRECISION DMIN
      INTEGER MINP( NDIM )
      DOUBLE PRECISION MINC( NDIM )
      DOUBLE PRECISION DMAX
      INTEGER MAXP( NDIM )
      DOUBLE PRECISION MAXC( NDIM )
      DOUBLE PRECISION SUM
      DOUBLE PRECISION MEAN
      DOUBLE PRECISION STDEV
      DOUBLE PRECISION SKEW
      DOUBLE PRECISION KURTOS
      DOUBLE PRECISION MEDIAN
      DOUBLE PRECISION MODE
      INTEGER NUMPER
      REAL PERCNT( NUMPER )
      DOUBLE PRECISION PERVAL( NUMPER )

      INTEGER IFIL

*  Status:
      INTEGER  STATUS

*  Local Variables:
      INTEGER*8 EL8
      INTEGER*8 NGOOD8
      INTEGER*8 MINP8( NDF__MXDIM )
      INTEGER*8 MAXP8( NDF__MXDIM )
      INTEGER I
*.

      EL8 = EL
      NGOOD8 = NGOOD
      DO I = 1, NDIM
         MINP8( I ) = MINP( I )
         MAXP8( I ) = MAXP( I )
      END DO

      CALL KPG1_STFL8<T>( IWCS, NDIM, EL8, NGOOD8, DMIN, MINP8, MINC,
     :                    DMAX, MAXP8, MAXC, SUM, MEAN, STDEV, SKEW,
     :                    KURTOS, MEDIAN, MODE, NUMPER, PERCNT,
     :                    PERVAL, IFIL, STATUS )

      END
