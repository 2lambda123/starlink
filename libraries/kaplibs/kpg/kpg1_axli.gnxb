      SUBROUTINE KPG1_AXLI<T>( EL, ARRAY, LVAL, UVAL, LINEAR, STATUS )
*+
*  Name:
*     KPG1_AXLIx

*  Purpose:
*     Determines whether an array's values are equally spaced.

*  Language:
*     Starlink Fortran 77

*  Invocation:
*     CALL KPG1_AXLIx( EL, ARRAY, LVAL, UVAL, LINEAR, STATUS )

*  Description:
*     This routine determines whether or not adjacent elements of a
*     1-d array have values that are equally spaced, i.e. it tests for
*     linearity.  It simply checks if the intervals between all
*     successive pairs of elements are the same within the machine
*     precision.

*  Arguments:
*     EL = INTEGER*8 (Given)
*        The number of elements in the array.  It must be at least
*        two.
*     ARRAY( EL ) = ? (Given)
*        The array to be tested.
*     LVAL = ? (Returned)
*        Value of the first array element.  If this is bad an estimated
*        value is substituted when the array is linear.
*     UVAL = ? (Returned)
*        Value of the last array element.  If this is bad an estimated
*        value is substituted when the array is linear.
*     LINEAR = LOGICAL (Returned)
*        True if the array is linear.
*     STATUS = INTEGER (Given)
*        The global status.

*  Notes:
*     -  There is a routine for most numeric data types: replace "x" in
*     the routine name by D, R, I, W, or UW as appropriate.  The array
*     (and the variables for the first and last array elements) supplied
*     to the routine must have the data type specified.

*  Copyright:
*     Copyright (C) 1991, 1992, 1993 Science & Engineering Research
*                   Council.
*     Copyright (C) 2019 East Asian Observatory
*     All Rights Reserved.

*  Licence:
*     This programme is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either Version 2 of
*     the License, or (at your option) any later version.
*
*     This programme is distributed in the hope that it will be
*     useful, but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE.  See the GNU General Public License for more details.
*
*     You should have received a copy of the GNU General Public License
*     along with this programme; if not, write to the Free Software
*     Foundation, Inc., 51, Franklin Street, Fifth Floor, Boston, MA
*     02110-1301, USA.

*  Authors:
*     MJC: Malcolm J. Currie (STARLINK)
*     DSB: David S Berry (EAO)
*     {enter_new_authors_here}

*  History:
*     1991 April 4 (MJC):
*        Original version based on JM's CON_LNEAR.
*     1992 March 13 (MJC):
*        Improved the test for linearity by using a longer baseline.
*        Allowed for bad values.  Performed all tests in double
*        precision.  Set the maximum difference between the actual
*        and predicted values to be 0.5 for integer data.
*     1993 may 27 (MJC):
*        Used improved algorithm for the linearity test scaling the
*        maximum deviation by maximum absolute value in the array.
*     4-OCT-2019 (DSB):
*        Change EL from INTEGER to INTEGER*8.
*     9-JAN-2020 (DSB):
*        Change EL from INTEGER*8 to INTEGER. Call KPG1_AXLI8 to do the
*        work.
*     {enter_further_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-

*  Type Definitions:
      IMPLICIT    NONE         ! No implicit typing

*  Arguments Given:
      INTEGER    EL            ! Array size
      <TYPE>     ARRAY( EL )   ! Array to be tested.

*  Arguments Returned:
      LOGICAL    LINEAR        ! True if array is linear
      <TYPE>     LVAL          ! Value of first array element.
      <TYPE>     UVAL          ! Value of last array element.

*  Status:
      INTEGER    STATUS        ! Global status

*.

      CALL KPG1_AXLI8<T>( INT( EL, 8 ), ARRAY, LVAL, UVAL, LINEAR, STATUS )

      END
