*+
*  Name:
*     ADAM_DEFNS

*  Purpose:
*     general parameter definitions for the ADAM system.

*  Language:
*     VAX Fortran

*  Invocation:
*     CALL ADAMDEFNS( [p]... )

*  Description:
*     Global parameter definitions used generally through the ADAM system.

*  Copyright:
*     Copyright (C) 1984, 1986, 1992 Science & Engineering Research Council.
*     All Rights Reserved.

*  Licence:
*     This program is free software; you can redistribute it and/or
*     modify it under the terms of the GNU General Public License as
*     published by the Free Software Foundation; either version 2 of
*     the License, or (at your option) any later version.
*     
*     This program is distributed in the hope that it will be
*     useful,but WITHOUT ANY WARRANTY; without even the implied
*     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
*     PURPOSE. See the GNU General Public License for more details.
*     
*     You should have received a copy of the GNU General Public License
*     along with this program; if not, write to the Free Software
*     Foundation, Inc., 51 Franklin Street,Fifth Floor, Boston, MA
*     02110-1301, USA

*  Authors:
*     JAC: John Cooke (REVS::JAC)
*     BDK: Dennis Kelly (ROE)
*     BKM: Brian McIlwrath (RAL)
*     {enter_new_authors_here}

*  History:
*     21-MAR-1984 (JAC):
*        Original version.
*     03-MAY-1984 (JAC):
*        message types added
*     20-AUG-1984 (JAC):
*        release 0.1
*     28-NOV-1984 (JAC)
*        changed version number for release 0.5
*        (This wasn't done for the released tapes!)
*        removed 'loader' task name definition
*     06-JUN-1986 (BDK):
*        remove version number
*     06-APR-1992 (BKM):
*        Add task CONTROL context
*     {enter_further_changes_here}

*  Bugs:
*     {note_any_bugs_here}

*-

*    Global constants:

      INTEGER NAMELEN   !  length of character strings holding names
      PARAMETER ( NAMELEN = 32 )

*   message types.....
      INTEGER SET   !  set a task parameter
      PARAMETER ( SET = 1 )
      INTEGER GET   !  get a task parameter
      PARAMETER ( GET = 2 )
      INTEGER OBEY   !  obey a task action
      PARAMETER ( OBEY = 3 )
      INTEGER CANCEL   !  cancel a task action in progress
      PARAMETER ( CANCEL = 4 )
      INTEGER CONTROL  !  Send control message to task fixed part
      PARAMETER ( CONTROL = 5 )

*.

