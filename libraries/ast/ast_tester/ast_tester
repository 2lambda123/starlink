#!/bin/tcsh
#+
#  Purpose:
#     Does a few tests of the version of AST installed in $INSTALL.

#  Usage:
#     ast_tester <-nd>

#  Description:
#     Builds and runs regression.f which executes various AST routines.
#     The standard output from regression.f is compared to the contents
#     of file regression.current, and the user is warned if they differ.
#
#     Also runs tests of the XmlChan class.
#
#     Also attempts to convert various critical FITS headers of various 
#     encodings to other encodings and compares the result to previous 
#     versions which are known to be good.
#     
#     Also, postscript plots of the FITS headers in the current directory 
#     are produced for visual comparison with previous versions. For each 
#     file matching "*.head" in the current directory, a file is created 
#     called "*-new.ps". This file should be compared visually with the file 
#     "*.ps". The new files are displayed automatically unless the -nd option 
#     is supplied on the command line


#  Oprions:
#     -nd : Suppresses display of test plots.

#  Prior Requirements:
#     - The following environment variables are used:
#        STARLINK - should be set to the root of the tree containing the SSC. A default of 
#                   /star is used if not set.
#        AST - should be set to the root of the tree containing the version of AST to be tested. 
#              A default of $HOME is used if not set.
#-

if( ! $?STARLINK ) then
   setenv STARLINK /star
endif

if( ! $?AST ) then
   setenv AST $HOME
endif

# Build the progs

g77 -fno-second-underscore -o regression regression.f -I$AST/include -I$STARLINK/include -L$AST/lib -L$STARLINK/lib `ast_link -ems` `chr_link`
g77 -fno-second-underscore -o plotter plotter.f -I$AST/include -I$STARLINK/include -L$AST/lib -L$STARLINK/lib `ast_link -pgp -ems` `pgplot_link`
g77 -fno-second-underscore -o wcsconverter wcsconverter.f -I$AST/include -I$STARLINK/include -L$AST/lib -L$STARLINK/lib `ast_link -ems` `chr_link` `err_link`
g77 -fno-second-underscore -o testxmlchan testxmlchan.f -I$AST/include -I$STARLINK/include -L$AST/lib -L$STARLINK/lib `ast_link -ems` `chr_link` `err_link`

# Run the main regression tester
regression >& regression.out

# Compare the results with the current expected output.
diff -c regression.out regression.current > regression.diff

if( $status != 0 ) then
   echo "\nRegression output has changed"
   echo "See file $PWD/regression.diff"
else
   rm -f regression.out regression.diff >& /dev/null
   echo "\nRegression output has NOT changed"
endif

# Run the XmlChan tester
echo "\nTesting XmlChan class...\n"
testxmlchan

# Make new plots.
echo "\nGenerating new plots...\n"

rm *-new.ps  >& /dev/null

foreach n (*.head)
   set bn = `basename $n .head`

   set atfile = "${bn}.attr"
   if( -e $atfile ) then
      set attr1 = `cat $atfile`
   else
      set attr1 = ' '
   endif

   set atfile = "${bn}.fattr"
   if( -e $atfile ) then
      set attr2 = `cat $atfile`
   else
      set attr2 = ' '
   endif
   
   set boxfile = "${bn}.box"
   if( -e $boxfile ) then
      set box = `cat $boxfile`
   else
      set box = ' '
   endif
   

   set psfile = "${bn}-new.ps"
   plotter $n "$attr1" "$attr2" a.ps $box

   $STARLINK/bin/psmerge -t300x300 -r90 a.ps > $psfile

   echo "   Created $psfile"
   if( $1 != "-nd" ) then
      ghostview $psfile -landscape -scale 2
   endif

end

rm -f a.ps


# Make new fits headers 
echo "\nDoing WCS conversion tests...\n"

set ok = 1
foreach n ( "timj ast fits-wcs cdmatrix=1" \
            "timj ast fits-iraf" \
            "timj ast fits-aips" \
            "timj ast fits-pc" \
            "timj ast native" \
            "dss fit ast" \
            "dss ast dss" \
            "dss ast fits-wcs cdmatrix=1" \
            "degen1 ast fits-wcs cdmatrix=1" \
            "longslit fits-pc fits-wcs cdmatrix=1" )

  set a = `echo $n`
 
  set base = $a[1]
  set in_suffix = $a[2]
  set encoding = $a[3]
  if( $#a > 3 ) then
     set attrs = $a[4]
  else 
     set attrs = ""
  endif

  set in_file = "$base.$in_suffix"
  set old_file = "$base.$encoding"
  set new_file = "$base-new.$encoding"


   wcsconverter $in_file $encoding $new_file "$attrs,FitsDigits=8"
   diff -c $old_file $new_file > $old_file.diff

   if( $status == 0 ) then
      rm -f $old_file.diff  $new_file
   else
      echo "   $old_file and $new_file differ\!\! (see $old_file.diff)"
      set ok = 0
   endif

end

if( $ok == 1 ) then
   echo "   All WCS conversion tests passed\n\n"
endif

rm -f regression plotter wcsconverter testxmlchan 
