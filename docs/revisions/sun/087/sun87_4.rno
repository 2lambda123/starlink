.title SUN/87.4
.set date 10,05,1989
.autoparagraph
.set paragraph 0,1,2
.layout 3,2
.page size 57,70
.flags substitute
.nofill
.keep
.justify
SCIENCE#AND#ENGINEERING#RESEARCH#COUNCIL SUN/87.4
RUTHERFORD#APPLETON#LABORATORY
SPACE#_&#ASTROPHYSICS#DIVISION

Starlink#Project Issued#by
Starlink#User#Note#87.4

.right;P T Wallace
.right;$$date

.fill
.repeat 70,"-"
.blank
.centre;JPL - Solar System Ephemeris
.centre;----------------------------
.hl1 INTRODUCTION
.nj
JPL have for many years distributed definitive solar system ephemeris tapes,
containing files of ephemeris data plus Fortran programs to read and
interpolate them.
The ephemerides are generated by direct numerical integration of the equations
of motion of the large bodies in the solar system, subject to fitting to a
variety of observations.
The JPL ephemeris distributed by Starlink is the DE200/LE200, which is the one
most consistent with the latest IAU resolutions.
It is described in detail on pp S26-8 of the 1984 Astronomical Almanac.

The following items are supplied as part of the Starlink Software Collection:
.ls
.LE;A copy of the JPL tape.
.LE;A set of subroutines, both as source and as an object library.
Only three are of direct interest to the user: PLEPH, XSTATE and XCONST.
.LE;Utility programs for copying the ephemeris files from tape
to disc (READ66), for generating subsets (XSHORT), and for
demonstrating the PLEPH subroutine (JPLPLEPH).
.LE;The ephemeris, as a disc file, covering 1960-2000.
.LE;This document, in RUNOFF form etc.
.LE;The document "JPL Export Ephemeris User's Guide", hardcopy only.
.ELS
The tape contains both the full 1800-2050 span and a shorter version covering
1960-2000, the latter being provided on disc so that the typical user need never
be concerned with tape handling.  The full 1800-2050 is available on
disc on the Starlink Database MicroVAX STADAT.

No utility programs for interrogating the ephemeris are currently provided
(beyond some simple examples);# access is via subroutine calls from the user's
own program.
To obtain, for example, the barycentric position and velocity of the Earth, all
it is necessary to do is the following:
.ls
.LE;Write a Fortran program including the statements:
.lt

	DOUBLE PRECISION TDB,PV(6)
		:
	CALL PLEPH(TDB,3,12,PV)

.el
(Details of the PLEPH arguments are given later.)
.LE;Compile and link with JPLDIR:JPL/L
.LE;_$ ASSIGN/USER JPLDIR:DE200.DAT FOR012
.LE;Run the program.
.ELS
The JPL DE200/LE200 ephemeris is based on the mean equatorial triad of J2000.0,
and all positions and velocities produced by the interrogation routines will be
in this coordinate system, which is the fundamental reference frame specified in
the IUA 1976 resolutions.
The 6-vectors produced have elements x, y, z, dx/dt, dy/dt, dz/dt in a
righthanded Cartesian coordinate system with the x-axis aligned to the first
point of Aries and the z-axis to the North celestial pole.
The units are AU and AU/day by default;# optionally, km and km/sec can be
selected.
.HL HOW TO INTERROGATE AN EPHEMERIS
.NJ
This is the one capability of interest to typical users.
Two routines are provided:
.LS "o"
.LE;PLEPH, which is simple to use and gives the coordinates of a single body.
.LE;XSTATE, which is more flexible, and suitable for cases where the coordinates
of several bodies are required at once.
.ELS
The two routines are described separately.
.HL2 The PLEPH subroutine
.NJ
PLEPH reads and interpolates a single item - usually the position and velocity
of one body relative to another - from a JPL ephemeris file on disc.
The call is:
.lt

      CALL PLEPH (TDB, NP, NC, R)

.el
.TP 3
The given arguments are as follows:
.lt

   TDB  double precision   The moment of time:  the barycentric
                           dynamical time, TDB, expressed as the
                           modified Julian Date (JD - 2400000.5).

   NP   integer            The body or reference point whose
                           coordinates are required (see the list,
                           below).

   NC   integer            The origin of the coordinate system - the
                           same scheme as for NP.

.el
.TP 3
.lt
Returned:

   R    double precision   6-element array containing position and
                           velocity:  x,y,z,dx/dt,dy/dt,dz/dt.

.el
.TP 15
.lt
The NP and NC arguments are each as follows:

      1            Mercury
      2            Venus
      3            Earth
      4            Mars
      5            Jupiter
      6            Saturn
      7            Uranus
      8            Neptune
      9            Pluto
     10            Moon
     11            Sun
     12            SSB
     13            EMB

.el
In each case, the position and velocity of the point specified by NP relative to
the point specified by NC are put into R(1-6).

For example, the following call will obtain the position and velocity of the
Earth relative to the Solar System barycentre at 0 hours TDB on 30 April 1986:
.lt

	CALL PLEPH (46550D0, 3, 12, R)

.el
(Starting from a date and time in UTC, the TDB argument can be obtained by first
converting the date to an MJD by means of the SLALIB subroutine sla__CALDJ,
correcting to TDT by means of the function sla__DTA and - in critical cases -
correcting to TDB by means of the function sla__RCC.
The SLALIB library is described in SUN/67.)

Errors - TDB out of range or illegal NP, NC value - are indicated by all
elements of the result array R being set to zero.

PLEPH can return results in either AU and AU/day or km and km/sec.
The default is AU and AU/day;# to select the other units, include the following
Fortran statements:
.TP 5
.lt

	LOGICAL KM
	COMMON /STCOMM/ KM
		:
		:
	KM=.TRUE.

.el
Calls to PLEPH will then return results in km and km/sec.

PLEPH can also be used to read the JPL values for the nutation angles
(NP,NC=14,0);# however, the Starlink routine sla__NUTC is more convenient in
typical cases.
.HL2 The XSTATE subroutine
.NJ
The basic interpolating routine supplied by JPL is XSTATE, which offers more
flexibility and marginally greater efficiency than the PLEPH routine just
described.
In particular, XSTATE allows the coordinates of several bodies to be
determined at once.

.TP 3
The call is:
.NF

      CALL XSTATE (JD, LIST, PV, NUT, IFL)

.TP 3
The given arguments are as follows:

   JD    is a 2-element double precision array specifying the
         instant of time for which the interpolations are to be
         done, in the TDB timescale.  The time is the sum
         JD(1)+JD(2).  A variety of different combinations of the
         two elements is possible.  The simplest is to put the
         whole Julian Date into JD(1) and to set JD(2) to zero.
         For optimum precision, set JD(1) to the Julian Date at
         the previous 0 hours TDB (so JD(1) will be 24xxxxx.5D0)
         and JD(2) to the fraction of a day from 0 hours to the
         required time.  JD(1) values far distant from the
         interpolation time (in particular example outside the
         range of the ephemeris) can cause crashes.

   LIST  is an 11-element integer array specifying what
         interpolation is wanted for each of the bodies (or
         reference points) on the file:

.TP 3
                  LIST(I) = 0: no interpolation for body I
                          = 1: position only
                          = 2: position and velocity

         The I values are as follows:

.TP 11
                        I = 1: Mercury
                          = 2: Venus
                          = 3: Earth-Moon barycentre
                          = 4: Mars
                          = 5: Jupiter
                          = 6: Saturn
                          = 7: Uranus
                          = 8: Neptune
                          = 9: Pluto
                          =10: Moon (geocentric)
                          =11: Nutations in longitude and obliquity

.TP 3
Returned as arguments:

   PV    is a (6,10) double precision array that will contain
         the requested interpolated quantities.  The body
         specified by LIST(I) will have its state in the array
         starting at PV(1,I).  (On any given call, only those
         elements in PV which have been requested are set; the
         rest of the PV array is untouched.)  The order of
         components starting in PV(1,I) is x,y,z,dx/dt,dy/dt,dz/dt.
         All output vectors are referenced to the mean equator
         and equinox of B1950.0 for DE_#'s < 200 and of J2000.0
         for DE_#'s >= 200.  The Moon state is always geocentric;
         the other nine states are either heliocentric or
         Solar-system barycentric, depending on the setting of
         COMMON flags (see below).

   NUT   is a 4-element double precision array that will contain
         nutations and rates, depending on the setting of LIST(11).
         The order of quantities in NUT is:

.TP 4
                       d psi  (nutation in longitude)
                       d epsilon (nutation in obliquity)
                       d psi dot
                       d epsilon dot

         (Note - there are no nutations on some JPL ephemerides,
         for example DE102.)

   IFL   is an integer error indicator:

.TP 3
                      IFL = 0: OK
                          = 1: JD too small
                          = 2: JD too big

Other information is given in the labelled COMMON block /STCOMM/:

   KM    is a flag of type logical defining the physical units
         of the output states:

.TP 2
                       KM = .TRUE.# gives km and km/sec
                          = .FALSE. gives AU and AU/day (the default)

         (KM also determines the time unit for the nutation rates;
         the angle unit is always radians.)

   BARY  is a flag of type logical defining the origin of the
         results;# only the nine planets are affected:

.TP 2
                      BARY = .TRUE.,# Solar system barycentric
                           = .FALSE., heliocentric (the default)

   PVSUN is a 6-element double precision array containing the
         barycentric position and velocity of the Sun.  The
         position coordinates are always km (never AU, even if
         KM=.FALSE.), but the units of velocity do depend on KM
         (.TRUE. gives km/sec, .FALSE. gives km/day).
.HL1 HOW TO OBTAIN THE CONSTANTS OF AN EPHEMERIS
.NJ
Should it be necessary to examine the constants that were used to generate a
particular JPL ephemeris - planetary masses, conversion factors, range of dates
covered, etc - this can be done by means of the subroutine XCONST.
The call is as follows:
.NF

      CALL XCONST (NAM, VAL, SS, N)

and returns the following:

   NAM   is an integer array of dimension (2,M) containing
         the N 6-character names of the constants.  Each name
         will be padded to 8 characters with trailing spaces
         and stored in NAM(1,n) and NAM(2,n).  A suggested
         value for M (which must clearly be at least N) is
         300, adequate for the DE200/LE200 ephemeris.

   VAL   is an M-element double precision array containing the
         N values.

   SS    is a 6-element double precision array that will be
         filled with the contents of group 1030 (start and stop
         epochs, etc).

   N     is an integer giving the number of values read from
         the file.

.F
Notes:
.LS
.LE;Because of file positioning, this routine should be called before
any reference to XSTATE or READE.
.LE;XCONST's Fortran-66 origins mean that the names are stored as
Hollerith data in integer variables, rather than as character
strings.  See the Fortran source of the example program JPLCONST
for details of how to WRITE such names, and the subroutine PLEPH
for an example of searching for a particular named constant.
.ELS
.HL1 HOW TO READ AN EPHEMERIS FILE FROM THE JPL TAPE
.NJ
Most users will not need to do this as the 1960-2000 portion of the
DE200/LE200 ephemeris is included in the Starlink Software Collection on disc
ready for interrogation by the subroutines.

The JPL tape contains two DE200/LE200 ephemerides with different time spans.
The first one on the tape (the second file, following the Fortran source) covers
the range 1960 to 2000, and the second one (the third file on the tape) covers
1800 to 2050.

To read one of these ephemerides onto disc, the READ66 program is used.
This is how to produce the disc form of the 1960-2000 ephemeris:
.LS
.TP 3
.LE;_$ ALLO tape FOR009
(where 'tape' is for example 'MTA0:')
.LE;Mount the Starlink copy of the JPL ephemeris tape on the drive
.LE;_$ MOUNT/FOR/BLOCK=6656/REC=1664 FOR009
.TP 3
.LE;_$ ASSIGN/USER file FOR012
(where 'file' is the name chosen for the ephemeris file)
.TP 3
.LE;_$ SET MAG/SKIP=FILE:1
(FILE:2 would copy the 1800-2050 ephemeris instead)
.LE;_$ RUN JPLDIR:READ66
.LE;_$ DISMOUNT FOR009
.ELS
A number of messages will appear, ending with a Fortran STOP.
The disc form of the ephemeris file is now available as the nominated file.
The 1960-2000 ephemeris occupies some 6100 blocks.
.HL1 HOW TO EXTRACT A SUBSET OF AN EPHEMERIS FILE ON DISC
.NJ
Where a programme of work will require frequent access to ephemeris information
over a limited timespan, it will usually be best to extract into a separate file
the region required, to minimise access time.
This is done with the program XSHORT.
For example, this is how to copy the subset 1980-1983 inclusive:
.LS
.LE;_$ ASSIGN/USER JPLDIR:DE200.DAT FOR009
.TP 3
.LE;_$ ASSIGN/USER file FOR012
(where 'file' is the name chosen for the subset ephemeris file)
.LE;_$ RUN JPLDIR:XSHORT
.ELS
Messages will appear announcing the range of dates covered by the input
ephemeris file (FOR009), and prompting for the start and end epoch.
It is necessary to enter the range as Julian day numbers (not MJD - so the
leading 24 is required), in the correct format for VAX Fortran's NAMELIST
facility.
Thus for 1980-83:
.NF

.TP 2
       <space>_$IN EP=2444239,2445700
       <space>_$END

.F
Messages will appear which include confirmation of the dates entered,
terminated by a FORTRAN STOP.  The file nominated at step 2 has
now been created and can be accessed by the interrogation
subroutines.
.HL1 SOME NOTES ON THE JPL FORTRAN ROUTINES
.NJ
The Fortran routines supplied on the JPL tape are supplied, as far as possible,
unchanged.
In some cases the routines have to be tailored for VAX use, according to
prescriptions supplied within the source; in some instances extra changes were
found to be necessary before the software would run.
Where modifications have been necessary, the style of the original has been
preserved - no use of Fortran77 facilities has been made for example.

The Fortran source as originally supplied is available in file
JPLDIR:SOURCE.JPL.  All the Fortran - with modifications
where appropriate - is supplied in the text library
SOURCE.TLB in the same directory.  The subprograms are
available in the object library
JPLDIR:JPL.OLB, and the utilities READ66 and
XSHORT are ready to use as JPLDIR:READ66.EXE and JPLDIR:XSHORT.EXE.

The subroutines use the following labelled COMMONS:
.NF

.TP 7
    /STCOMM/
    /SECTOR/
    /CETBL1/
    /CETBL2/
    /CETBL3/
    /CETBL4/
    /CETBL5/

.F
In addition, the READ66 main program and its subroutine EOG use blank COMMON.
.HL1 ACKNOWLEDGEMENTS
.NJ
The DE200/LE200 ephemeris was produced jointly by the Jet Propulsion Laboratory,
the US Naval Observatory and the US Naval Surface Weapons Center.
I would like to thank Catherine Hohenkerk of HM Nautical Almanac Office at the
Royal Greenwich Observatory for supplying a copy of the JPL tape and
documentation, and Dr E M Standish of JPL for further advice on the use of the
ephemeris, including the specification of the PLEPH subroutine.
.AX EXAMPLE PROGRAM TO INTERROGATE AN EPHEMERIS
.nj
The program JPLPLEPH (the Fortran source and the executable image are in
JPLDIR) demonstrates the use of the PLEPH routine.
Once compiled, and linked with JPLDIR:JPL/L, it can be run as follows:
.LS
.LE;_$ ASSIGN/USER JPLDIR:DE200.DAT FOR012
.LE;_$ RUN JPLDIR:JPLPLEPH
.ELS
JPLPLEPH calls the PLEPH subroutine (which in turn calls the XCONST and XSTATE
subroutines) to interpolate from the ephemeris file on Fortran unit 12 the
heliocentric position and velocity of the Earth for the instant of dynamical
time TDB = 2440000.5.
The output is as follows:
.NF

.TP 2
 -0.4546344405877503     -0.8303581726592454     -0.3600779865854318
  1.5096053509658230E-02 -7.1486193233325490E-03 -3.1004921587923199E-03

.F
The Fortran source of JPLPLEPH follows.
.NF
.PG
.REQ 'JPLDIR:JPLPLEPH.FOR'
.AX EXAMPLE PROGRAM TO INTERROGATE AN EPHEMERIS USING XSTATE
.nj
The program JPLSTATE (both the Fortran source and the executable image are in
JPLDIR) demonstrates the use of the XSTATE routine.
Once compiled, and linked with JPLDIR:JPL/L, it can be run as follows:
.LS
.LE;_$ ASSIGN/USER JPLDIR:DE200.DAT FOR012
.LE;_$ RUN JPLDIR:JPLSTATE
.ELS
JPLSTATE calls the XSTATE subroutine to interpolate from the
ephemeris file on
Fortran unit 12 the heliocentric position and velocity
of the Earth-Moon barycentre for the instant of dynamical
time TDB = 2440000.5.  The output is as follows:
.NF

.TP 3
-0.4546052777834041     -0.8303445173918213     -0.3600715676773557
 1.5093058107102444E-02 -7.1432575714151506E-03 -3.0975035579418650E-03
          0

.F
(The final zero is the status returned.)

The Fortran source of JPLSTATE follows.
.NF
.PG
.REQ 'JPLDIR:JPLSTATE.FOR'
.AX EXAMPLE PROGRAM TO OBTAIN THE CONSTANTS OF AN EPHEMERIS
.nj
The program JPLCONST (both the Fortran source and the executable image are in
JPLDIR) demonstrates the use of the XCONST subroutine.
Once compiled, and linked with JPLDIR:JPL/L, it can be run as follows:
.LS
.LE;_$ ASSIGN/USER JPLDIR:DE200.DAT FOR012
.LE;_$ RUN JPLDIR:JPLCONST
.ELS
JPLCONST uses the XCONST subroutine to list all the constants of the ephemeris
on Fortran unit 12.
See also the Fortran source of the PLEPH subroutine, which shows how the data
output by XCONST can be searched for named constants.

The Fortran source of JPLCONST follows.
.NF
.PG
.REQ 'JPLDIR:JPLCONST.FOR'
.NJ
.AX JPL EXPORT EPHEMERIS USER GUIDE
.nj
.S 15
The JPL document "JPL Export Ephemeris User Guide" is appended to each paper
copy of SUN/87;# it is not available in machine readable form.
