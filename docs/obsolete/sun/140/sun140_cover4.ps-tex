%!PS-Adobe-1.0 EPSF-1.2
%%Creator:  RAL GKS 1.10 VAX/VMS - Workstation 2706
%%Creation date:  8/ 7/1993
%%Pages: (atend)
%%DocumentFonts: (atend)
%%BoundingBox: (atend)
%%EndComments
%begin(plot)
/align{
       dup 3 -1 roll sub dup 0 le
                                  {neg floor add}
                                  {floor 1 add sub}
                               ifelse
      }def
/ca{currentfile line readhexstring pop}def
/clnstat{
         setlinewidth plsty exch get
         [
          exch
              {
                currentlinewidth 1 1 itransform pop 0 0 itransform pop sub
                10 mul div 1 add mul
              }
          forall
         ]
         0 setdash
         setrgbcolor
        }def
/fagen{gsave pln}def
/fasoldo{eoclip eofill grestore}def
/fapdo{
       closepath pathbbox
          /ury exch def/urx exch def
          /lly exch refy align def
          /llx exch refx align def
          /nxpix urx llx sub round cvi 1 add def
          /nypix ury lly sub round cvi 1 add def
       /scan
          ny
             {nxpix string}
          repeat
          ny array astore
       def
       0 1 ny 1 sub
          {
           dup patdef exch get/ww nxpix nx add 2 mul string def/indn nx def
           ww 0 3 -1 roll putinterval ww
              {
               0 indn getinterval ww exch indn dup nxpix nx add
               lt
                   {exch putinterval /indn indn dup add def ww}
                   {
                    pop 0 nxpix nx add getinterval exch pop refx llx sub
                    round cvi nx mod dup 0
                    le
                       {neg}
                       {nx exch sub}
                    ifelse
                    nxpix getinterval exit
                   }
               ifelse
              }
              loop
           scan 3 1 roll put
          }
       for
       gsave
          eoclip
             newpath
                llx lly translate
                nxpix nypix scale
                faput
       grestore
      }def
/fapi{
      hitdot /refy exch def/refx exch def/ny exch def/nx exch def
      /line nx string def /patdef ny array  def
         0 1 ny 1 sub 
            {patdef exch ca nx string copy put}
         for
     }def
/faput{
       refy lly sub round cvi ny mod dup 0
       le
          {neg}
          {ny exch sub}
       ifelse
       /temp exch 1 sub def
       nxpix nypix 8 [nxpix 0 0 nypix neg 0 nypix]
          {
           /temp
              temp 1 add dup ny 1 sub le
                                         {}
                                         {pop 0}
                                      ifelse
           def
           scan temp get
          }
       image
      }def
/fastat{/fsi exch def}def
/hitdot{transform round exch round exch itransform}def
/init{
      /eflag 1 def/epsf exch def/margin exch def
      1 sub/delta exch def/pflag 0 def/orient exch def
      /port [1 0 0 1] def/land [0 1 -1 0] def
      [ 0 0 0 0 0 0 ] defaultmatrix setmatrix
      epsf eflag eq
                    {/llx 0 def/lly 0 def}
                    {clippath pathbbox
                        pop pop/lly exch def/llx exch def}
                 ifelse
      [
       orient pflag eq
                       {/off 0 def port}
                       {/off delta def land}
                    ifelse
       aload pop off llx margin add add lly
      ]
      concat
      1 setlinejoin 1 setlinecap
      newpath
         save
     }def
/pln{
     2 copy 0 get exch 0 get exch moveto dup length 1 sub
     1 1 3 -1 roll
        {plseg}
     for
     pop pop
    }def
/plong{pln stroke restore}def
/pls{1 sub 3 1 roll moveto {lineto} repeat stroke}def
/plseg{3 copy get 3 1 roll exch get exch lineto}def
/plsty[ [] [] [12 5.5] [0.5 2] [10 2 0.5 2] [ 8 2 0.5 2 0.5 2] ]def
/pm{dup length 1 sub 0 1 3 -1 roll {pmdomk} for pop pop}def
/pmdomk{
        3 copy get 3 1 roll exch get exch
        gsave
           translate [] 0 setdash
           /tempwd currentlinewidth msz div def
           msz dup scale
           tempwd setlinewidth
           newpath
              pmx mt get exec stroke
        grestore
       }def
/pmstat{/msz exch def/mt exch def}def
/pmx[{}
     {0 0 moveto 0 0 lineto}
     {-.5 0 moveto .5 0 lineto 0 -.5 moveto 0 .5 lineto}
     {pmx 2 get exec pmx 5 get exec}
     {.5 0 moveto 0 0 .5 0 360 arc}
     {-.45 -.45 moveto .45 .45 lineto -.45 .45 moveto .45 -.45 lineto}
    ]def
/s{save}def
/setclipbox{newpath moveto lineto lineto lineto closepath clip newpath}def
/tx{
    /texp exch def dup length 1 sub
    0 1 3 -1 roll
       {txdoch}
    for
    pop pop pop
   }def
/txdoch{
        dup 4 1 roll 3 copy get 3 1 roll exch get exch
        gsave
           translate
           tng rotate
           texp 1 scale
           3 -1 roll 3 index exch 1 getinterval 0 0 moveto
           show
        grestore
       }def
/txstat{
        /tng exch def
        gsave
           /ft 3 -1 roll findfont def ft 1 scalefont setfont
           0 0 moveto ( ) stringwidth pop
        grestore
        div ft exch scalefont setfont
        /ft 0 def
       }def
1 setlinejoin 1 setlinecap newpath save
%%EndProlog
%%Page: ? 1
restore save 
     76.188    432.538     76.188    571.680    390.024    571.680    390.024    432.538 setclipbox
 0.00000 0.00000 0.00000  1    0.24 clnstat
    188.273    437.177    188.273    455.729  2 pls
    233.106    437.177    188.273    437.177  2 pls
    233.106    455.729    233.106    437.177  2 pls
    188.273    455.729    233.106    455.729  2 pls
    128.494    467.324    188.273    437.177  2 pls
    248.051    467.324    233.106    437.177  2 pls
restore
%end(plot)
%%Trailer
%%BoundingBox: 0 0 561 813
%%DocumentFonts:
%%Pages: 1
